<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: Kai Status: ready -->
<!-- $Revision$ -->
 <chapter xml:id="language.basic-syntax" xmlns="http://docbook.org/ns/docbook">
  <title>Основы синтаксиса</title>
  <sect1 xml:id="language.basic-syntax.phpmode">
   <title>Вставка в HTML</title>
  
   <para>
    Когда PHP обрабатывает файл, он просто передаёт его текст, пока не
    встретит один из специальных тегов, который сообщает ему о
    необходимости начать интерпретацию текста как кода PHP. Затем он
    выполняет весь найденный код до закрывающего тега, говорящего
    интерпретатору, что далее снова идет просто текст. Этот механизм
    позволяет вам внедрять PHP-код в HTML - все за пределами тегов PHP
    остается неизменным, тогда как внутри - интерпретируется как код.
   </para>

   <para>
    Существует четыре набора тегов, которые могут быть использованы
    для обозначения PHP-кода. Из них только два (&lt;?php. . .?&gt; и &lt;script
    language="php"&gt;. . .&lt;/script&gt;) всегда доступны; другие
    могут быть включены или выключены в конфигурационном файле &php.ini;.
    Хотя короткие теги и теги в стиле ASP могут быть удобны, они не
    так переносимы, как длинные версии. Кроме того, если вы намереваетесь
    вставлять PHP-код в XML или XHTML, чтобы соответствовать XML, вам
    следует использовать форму &lt;?php. . .?&gt;.
   </para>

   <para>
    Теги, поддерживаемые PHP:
   </para>

    <para>
     <example>
      <title>Способы вставки в HTML</title>
      <programlisting role="php">
<![CDATA[
1.  <?php echo("если вы хотите работать с документами XHTML или XML, делайте так\n"); ?>

2.  <? echo ("это простейшая инструкция обработки SGML\n"); ?>
    <?= выражение ?> Это синоним для "<? echo выражение ?>"
    
3.  <script language="php">
        echo ("некоторые редакторы (например, FrontPage) не
              любят инструкции обработки");
    </script>

4.  <% echo ("Вы можете по выбору использовать теги в стиле ASP"); %>
    <%= $variable; # Это синоним для "<% echo . . ." %>
]]>
      </programlisting>
     </example>
    </para>

   <para>
    Первый способ, &lt;?php. . .?&gt;, наиболее предпочтительный, так
    как он позволяет использовать PHP в коде, соответствующем правилам
    XML, таком как XHTML.
   </para>

   <para>
    Второй способ не всегда доступен. Короткие теги доступны только
    когда они включены. Это можно сделать, используя функцию
    <function>short_tags</function> (только в PHP 3), включив
    установку <link linkend="ini.short-open-tag">short_open_tag</link>
    в конфигурационном файле PHP, либо скомпилировав PHP с параметром
    --enable-short-tags для <command>configure</command>. Даже если
    оно включено по умолчанию в php.ini-dist, использование коротких
    тегов не рекомендуется.
   </para>

   <para>
    Четвертый способ доступен только если теги в стиле ASP были
    включены, используя конфигурационную установку
    <link linkend="ini.asp-tags">asp_tags</link>.

    <note>
     <para>Поддержка тегов в стиле ASP была добавлена в версии 3.0.4.</para>
    </note>
   </para>

   <para>
    <note>
     <para>
      Следует избегать использования коротких тегов при разработке
      приложений или библиотек, предназначенных для распространения
      или размещения на PHP-серверах, не находящихся под вашим
      контролем, так как короткие теги могут не поддерживаться на
      целевом сервере. Для создания переносимого, совместимого
      кода, не используйте короткие теги.
     </para>
    </note>
   </para>

   <para>
    Закрывающий тег блока PHP-кода включает сразу следующий за ним
    перевод строки, если он имеется. Кроме того, закрывающий тег
    автоматически подразумевает точку с запятой; вам не нужно
    заканчивать последнюю строку кода в блоке точкой с запятой.
    Закрывающий тег PHP-блока в конце файла не является обязательным.
   </para>
    
   <para>
    PHP позволяет использовать такие структуры:
    <example><title>Профессиональная вставка</title>
     <programlisting role="php">
<![CDATA[
<?php
if ($expression) { 
    ?>
    <strong>Это истина.</strong>
    <?php 
} else { 
    ?>
    <strong>Это ложь.</strong>
    <?php 
}
?>
]]>
     </programlisting>
    </example>
    Этот код работает так, как ожидается, потому что когда PHP
    встречает закрывающие теги ?&gt;, он просто выводит все, что он
    находит до следующего открывающего тега. Приведенный здесь пример
    конечно придуманный, но для вывода больших блоков текста выход из
    режима интерпретации PHP обычно более эффективен, чем отправка
    всего текста через <function>echo</function>,
    <function>print</function> или что-либо подобное.
   </para>
  </sect1>
  
  <sect1 xml:id="language.basic-syntax.instruction-separation">
   <title>Разделение инструкций</title>
   
   <simpara>
    Инструкции разделяются также как и в C или Perl - каждое
    выражение заканчивается точкой с запятой.
   </simpara>

   <para>
    Закрывающий тег (?&gt;) также подразумевает конец инструкции,
    поэтому два следующих фрагмента кода эквиваленты:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
    echo "Это тест";
?>

<?php echo "Это тест" ?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect1>

  <sect1 xml:id="language.basic-syntax.comments">
   <title>Комментарии</title>
   
   <para>
    PHP поддерживает комметарии в стиле 'C', 'C++' и оболочки Unix. Например:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
    echo "Это тест"; // Это однострочный комментарий в стиле c++
    /* Это многострочный комментарий
       еще одна строка комментария */
    echo "Это еще один тест";
    echo "Последний тест"; # Это комментарий в стиле оболочки Unix
?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <simpara>
    Однострочные комментарии идут только до конца строки или текущего
    блока PHP-кода, в зависимости от того, что идет перед ними.
   </simpara>
   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<h1>Это <?php # echo "простой";?> пример.</h1>
<p>Заголовок вверху выведет 'Это пример'.
]]>
     </programlisting>
    </informalexample>
   </para>

   <simpara>
    Будьте внимательны, следите за отсутствием вложенных 'C'-комментариев,
    они могут появиться во время комментирования больших блоков.
   </simpara>
   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
 /* 
    echo "Это тест"; /* Этот комментарий вызовет проблему */
 */
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <simpara>
    Однострочные комментарии идут только до конца строки или текущего
    блока PHP-кода, в зависимости от того, что идет перед ними.
    Это означает, что HTML-код после <literal>// ?&gt;</literal> БУДЕТ
    напечатан: ?&gt; выводит из режима PHP и возвращает в режим HTML, но
    <literal>//</literal> не позволяет этого сделать. Если включена
    конфигурационная директива <link linkend="ini.asp-tags">asp_tags</link>,
    то же самое происходит и при <literal>// %&gt;</literal>.
   </simpara>
  </sect1>
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
