<?xml version="1.0" encoding="utf-8" ?>
<!-- EN-Revision: n/a Maintainer: shein Status: old -->
<!-- $Revision$ -->
 <sect1 xml:id="language.oop5.static" xmlns="http://docbook.org/ns/docbook">
  <title>Ключевое слово "static"</title>

  <para>
   Объявление свойств и методов класса статическими позволяет обращаться к ним 
   без создания экземпляра класса. Атрибут класса, объявленный статическим, 
   не можеть быть доступен посредством экземпляра класса (но статический метод
   может быть вызван).
  </para>

  <para>
   В целях совместимости с PHP 4, сделано так, что если не использовалось
   определение <link linkend="language.oop5.visibility">области
   видимости</link>, то член или метод будет рассматриваться,
   как если бы он был объявлен как <literal>public</literal>.
  </para>

  <para>
   Так как статические методы вызываются без создания экземпляра класса,
   то псевдо-переменная <varname>$this</varname> не доступна внутри метода,
   объявленного статическим.
  </para>
  
  <para>
   Доступ к статическим свойствам класса не может быть получен через оператор
   -&gt;. 
  </para>

  <para>
   При попытке вызова нестатических методов статически выводится предупреждение
   уровня E_STRICT.
  </para>

  <para>
   Начиная с версии PHP 5.3.0 существует возможность ссылаться на класс используя
   переменную. Поэтому значение переменной в таком случае не может быть ключевым
   словом (например, <literal>self</literal>, <literal>parent</literal> и
   <literal>static</literal>).
  </para>

  <example>
   <title>Пример статического свойства</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    public static $my_static = 'foo';

    public function staticValue() {
        return self::$my_static;
    }
}

class Bar extends Foo
{
    public function fooStatic() {
        return parent::$my_static;
    }
}


print Foo::$my_static . "\n";

$foo = new Foo();
print $foo->staticValue() . "\n";
print $foo->my_static . "\n";      // Не определено свойство my_static 

print $foo::$my_static . "\n";
$classname = 'Foo';
print $classname::$my_static . "\n"; // Начиная только с PHP 5.3.0

print Bar::$my_static . "\n";
$bar = new Bar();
print $bar->fooStatic() . "\n";
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Пример статического метода</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
    public static function aStaticMethod() {
        // ...
    }
}

Foo::aStaticMethod();
$classname = 'Foo';
$classname::aStaticMethod(); // Начиная только с PHP 5.3.0
?> 
]]>
    </programlisting>
  </example>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
