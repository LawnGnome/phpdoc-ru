<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 337875 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
<sect1 xml:id="language.oop5.static" xmlns="http://docbook.org/ns/docbook">
 <title>Ключевое слово "static"</title>

 <tip>
  <simpara>
   Эта страница описывает использование ключевого слова
   <literal>static</literal>
   для определения статических методов и свойств. <literal>static</literal> также
   может использоваться для <link linkend="language.variables.scope.static">определения
   статических переменных
  </link> и <link linkend="language.oop5.late-static-bindings">
   позднего статического связывания</link>. Для получения информации о таком применении
   ключевого слова <literal>static</literal> пользуйтесь вышеуказанными страницами.
  </simpara>
 </tip>

 <para>
  Объявление свойств и методов класса статическими позволяет обращаться к ним
  без создания экземпляра класса. Атрибут класса, объявленный статическим,
  не может быть доступен посредством экземпляра класса (но статический метод
  может быть вызван).
 </para>

 <para>
  В целях совместимости с PHP 4, сделано так, что если не использовалось определение
  <link linkend="language.oop5.visibility">области видимости</link>, то свойство или метод
  будет рассматриваться, как если бы он был объявлен как <literal>public</literal>.
 </para>

 <sect2 xml:id="language.oop5.static.methods">
  <title>Статические методы</title>
  <para>
   Так как статические методы вызываются без создания экземпляра класса,
   то псевдопеременная <varname>$this</varname> не доступна внутри метода,
   объявленного статическим.
  </para>

  <caution>
   <simpara>
    В PHP 5 вызов нестатического метода статически вызовет ошибку уровня
    <constant>E_STRICT</constant>.
   </simpara>
  </caution>
  <warning>
   <simpara>
    В PHP 7 возможность вызова нестатического метода статически объявлена
    устаревшей и вызовет ошибку уровня <constant>E_DEPRECATED</constant> и в
    дальнейшем может быть удалена.
   </simpara>
  </warning>

  <example>
   <title>Пример статического метода</title>
   <programlisting role="php">
    <![CDATA[
<?php
class Foo {
    public static function aStaticMethod() {
        // ...
    }
}

Foo::aStaticMethod();
$classname = 'Foo';
$classname::aStaticMethod(); // Начиная с PHP 5.3.0
?> 
]]>
   </programlisting>
  </example>
 </sect2>

 <sect2 xml:id="language.oop5.static.properties">
  <title>Статические свойства</title>
  <para>
   Статические свойства не могут использоваться с использованием оператора "-&gt;".
  </para>
  <para>
   Как и любая другая статическая переменная PHP, статические свойства
   могут инициализироваться только используя литерал или константу,
   выражения не допускается. Таким образом, вы можете инициализировать
   статическое свойство, например, целым числом или массивом, но не сможете
   указать другую переменную, результат вызова функции или объект.
  </para>

  <para>
   Начиная с версии PHP 5.3.0 существует возможность ссылаться на класс используя
   переменную. Поэтому значение переменной в таком случае не может быть ключевым
   словом (например, <literal>self</literal>, <literal>parent</literal> и
   <literal>static</literal>).
  </para>

  <example>
   <title>Пример статического свойства</title>
   <programlisting role="php">
    <![CDATA[
<?php
class Foo
{
    public static $my_static = 'foo';

    public function staticValue() {
        return self::$my_static;
    }
}

class Bar extends Foo
{
    public function fooStatic() {
        return parent::$my_static;
    }
}


print Foo::$my_static . "\n";

$foo = new Foo();
print $foo->staticValue() . "\n";
print $foo->my_static . "\n";      // Не определено свойство my_static

print $foo::$my_static . "\n"; // Начиная с PHP 5.3.0
$classname = 'Foo';
print $classname::$my_static . "\n"; // Начиная с PHP 5.3.0

print Bar::$my_static . "\n";
$bar = new Bar();
print $bar->fooStatic() . "\n";
?>
]]>
   </programlisting>
  </example>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
