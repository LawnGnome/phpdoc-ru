<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 311963 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
 <sect1 xml:id="language.oop5.abstract" xmlns="http://docbook.org/ns/docbook">
  <title>Абстрактные классы</title>

  <para>
   PHP 5 поддерживает определение абстрактных классов и методов. Класс, который 
   содержит по крайней мере один абстрактный метод, должен быть определен как 
   абстрактный. Следует помнить, что нельзя создать экземпляр абстрактного класса.
   Методы, объявленные абстрактными, несут, по существу, лишь описательный смысл и 
   не могут включать реализации.
  </para>

  <para>
   При наследовании от абстрактного класса, все методы, помеченные абстрактными
   в родительском классе, должны быть определены в классе-потомке; кроме того,
   <link linkend="language.oop5.visibility">область видимости</link>
   этих методов должна совпадать (или быть менее строгой).
   Например, если абстрактный метод объявлен как protected, то реализация этого метода
   должна быть либо protected либо public, но никак не private.
  </para>

  <example>
   <title>Пример абстрактного класса</title>
    <programlisting role="php">
<![CDATA[
<?php
abstract class AbstractClass
{
   /* Данный метод должен быть определён в дочернем классе */
    abstract protected function getValue();
    abstract protected function prefixValue($prefix);

   /* Общий метод */
    public function printOut() {
        print $this->getValue() . "\n";
    }
}

class ConcreteClass1 extends AbstractClass
{
    protected function getValue() {
        return "ConcreteClass1";
    }

    public function prefixValue($prefix) {
        return "{$prefix}ConcreteClass1";
    }
}

class ConcreteClass2 extends AbstractClass
{
    public function getValue() {
        return "ConcreteClass2";
    }

    public function prefixValue($prefix) {
        return "{$prefix}ConcreteClass2";
    }
}

$class1 = new ConcreteClass1;
$class1->printOut();
echo $class1->prefixValue('FOO_') ."\n";

$class2 = new ConcreteClass2;
$class2->printOut();
echo $class2->prefixValue('FOO_') ."\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
ConcreteClass1
FOO_ConcreteClass1
ConcreteClass2
FOO_ConcreteClass2
]]>
   </screen>
  </example>

  <para>
   Код, предназначенный для прежних версий PHP, должен работать
   без изменений, если в нём отсутствуют классы или функции,
   именованные 'abstract'.
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
