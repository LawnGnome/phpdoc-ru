<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 317663 Maintainer: mch Status: ready -->
<!-- $Revision$ -->
<!-- Reviewed: no -->
 <sect1 xml:id="language.oop5.inheritance" xmlns="http://docbook.org/ns/docbook">
  <title>Наследование</title>
  <para>
   Наследование — это хорошо зарекомендовавший себя принцип программирования. PHP 
   использует этот принцип в своей объектной модели. Этот принцип будет распространяться на то,
   каким образом множество классов и объектов относятся друг к другу.
  </para>
  <para>
   Например, когда вы расширяете класс, дочерний класс наследует все
   публичные и защищенные методы из родительского класса. До тех пор пока
   не будут эти методы переопределены, они будут сохранять свою
   исходную функциональность.   
  </para>
  <para>
   Это полезно для определения и абстрагирования функциональности и позволяет
   реализовать дополнительную функциональность в похожих объектах без
   необходимости реализовывать всю общую функциональность.
  </para>

  <note>
   <para>
    Пока не используется автозагрузка, классы должны быть объявлены до того, как их
 будут использовать. Если класс расширяет другой, то родительский класс должен быть
 объявлен до наследующего класса. Это правило применяется к классу, который наследует
 другие классы или интерфейсы.
   </para>
  </note>

  <sect2 xml:id="language.oop5.inheritance.examples">
   <example xml:id="language.oop5.inheritance.examples.ex1">
    <title>Пример наследования</title>
     <programlisting role="php">
<![CDATA[
<?php

class foo
{
    public function printItem($string)
    {
        echo 'Foo: ' . $string . PHP_EOL;
    }
    
    public function printPHP()
    {
        echo 'PHP is great.' . PHP_EOL;
    }
}

class bar extends foo
{
    public function printItem($string)
    {
        echo 'Bar: ' . $string . PHP_EOL;
    }
}

$foo = new foo();
$bar = new bar();
$foo->printItem('baz'); // Output: 'Foo: baz'
$foo->printPHP();       // Output: 'PHP is great' 
$bar->printItem('baz'); // Output: 'Bar: baz'
$bar->printPHP();       // Output: 'PHP is great'

?>
]]>
    </programlisting>
   </example>
  </sect2>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
