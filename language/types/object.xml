<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 288721 Maintainer: conf Status: ready -->
<!-- Reviewed: no -->
<!-- $Id$ -->
<sect1 xml:id="language.types.object">
 <title>Объекты</title>

 <sect2 xml:id="language.types.object.init">
  <title>Инициализация объекта</title>

  <para>
   Для создания нового объекта, используйте выражение
   <literal>new</literal>, создающее в переменной экземпляр класса:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class foo
{
    function do_foo()
    {
        echo "Doing foo."; 
    }
}

$bar = new foo;
$bar->do_foo();
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   Полное рассмотрение производится в разделе <link
     linkend="language.oop">Классы и Объекты</link>.
  </simpara>

 </sect2>
 
 <sect2 xml:id="language.types.object.casting">
  <title>Преобразование в объект</title>
  
  <para>
   Если <type>object</type> преобразуется в <type>object</type>, он не изменяется.
   Если значение другого типа преобразуется в
   <type>object</type>, создается новый экземпляр встроенного класса <literal>stdClass</literal>.
   Если значение было &null;, новый экземпляр будет пустым.
   Массивы преобразуются в <type>object</type> с именами полей, названными согласно ключам массива и
   соответствующими им значениям. При преобразовании любого другого значения, оно будет помещено в
   поле с именем <literal>scalar</literal>.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) 'ciao';
echo $obj->scalar;  // выведет 'ciao'
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
