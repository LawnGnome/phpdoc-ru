<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.3 Maintainer: young Status: ready -->
<chapter id="features.xforms">
 <title>Работа с XForms</title>
 <para>
  <ulink url="&url.xforms;">XForms</ulink> являются альтернативой традиционным
  веб-формам, и позволяют использовать их на множестве платформ и 
  браузеров, а также реализовывать нестандартные представления форм, например,
  в виде PDF-документа.
 </para>
 <para>
  Первое существенное отличие XForms заключается в том, как форма отсылается 
  клиенту. Руководство <ulink url="&url.xforms.htmlauthors;">XForms для HTML-верстальщиков</ulink>
  содержит детальное описание создания XForms. Для того, чтобы очертить
  основную идею руководства, приведем несколько простых примеров.
 </para>
 <example>
  <title>Простая XForms для поисковой формы</title>
  <programlisting role="html">
<![CDATA[
<h:html xmlns:h="http://www.w3.org/1999/xhtml"
        xmlns="http://www.w3.org/2002/xforms">
<h:head>
 <h:title>Search</h:title>
 <model>
  <submission action="http://example.com/search"
              method="post" id="s"/>
 </model>
</h:head>
<h:body>
 <h:p>
  <input ref="q"><label>Find</label></input>
  <submit submission="s"><label>Go</label></submit>
 </h:p>
</h:body>
</h:html>
]]>
  </programlisting>
 </example>
 <para>
  Приведенная выше форма отображает текстовое поле для ввода (названное <parameter>q</parameter>)
  и кнопку для оправки формы, при нажатии на которую все введенные данные 
  будут отправлены скрипту, указанному в поле <literal>action</literal>.
 </para>
 <para>
  Тут мы подошли к еще одному существенному различию с точки зрения вашего 
  веб-приложения. Стандартная HTML-форма отправляет данные как 
  <literal>application/x-www-form-urlencoded</literal>, а XForms 
  для передачи данных использует разметку XML.
 </para>
 <para>
  Если вы решили работать с XForms, скорее всего вы захотите получить
  отправленные пользователем данные в формате XML. В таком случае обратите внимание
  на переменную <varname>$HTTP_RAW_POST_DATA</varname>, в ней содержится
  XML-документ, сгенерированный браузером, который в дальнейшем можно 
  обработать предпочитаемым вами движком XSLT или парсером XML.
 </para>
 <para>
  Если XML-разметка вас не интересует, и вы хотите, чтобы передаваемые данные 
  были помещены в стандартный массив <varname>$_POST</varname>, вы можете
  указать клиентскому браузеру на необходимость отправлять данные 
  в формате <literal>application/x-www-form-urlencoded</literal>.
  Для этого установите атрибут <parameter>method</parameter> значением
  <emphasis>urlencoded-post</emphasis>.
 </para>
 <example>
  <title>Использование XForm совместно с массивом <varname>$_POST</varname></title>
  <programlisting role="html">
<![CDATA[
<h:html xmlns:h="http://www.w3.org/1999/xhtml"
        xmlns="http://www.w3.org/2002/xforms">
<h:head>
 <h:title>Search</h:title>
 <model>
  <submission action="http://example.com/search"
              method="urlencoded-post" id="s"/>
 </model>
</h:head>
<h:body>
 <h:p>
  <input ref="q"><label>Find</label></input>
  <submit submission="s"><label>Go</label></submit>
 </h:p>
</h:body>
</h:html>
]]>
  </programlisting>
 </example>
 <note>
  <simpara>
   В дополнение к вышесказанному следует заметить, что большое количество браузеров не поддерживают
   XForms. Если приведенные примеры потерпели неудачу, проверьте версию используемого
   вами браузера.
  </simpara>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
