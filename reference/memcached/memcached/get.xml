<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 324122 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision: $ -->

<refentry xml:id="memcached.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::get</refname>
  <refpurpose>Получение записи</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Memcached::get</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>cache_cb</parameter></methodparam>
   <methodparam choice="opt"><type>float</type><parameter role="reference">cas_token</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::get</function> возвращает запись, которая ранее была
   сохранена под ключом <parameter>key</parameter>. Если элемент не найден и переменная
   <parameter>cas_token</parameter> передана, то в неё будет записан CAS токен этой записи.
   Обратитесь к документации по <methodname>Memcached::cas</methodname> для получения информации об
   использовании CAS токена. <link linkend="memcached.callbacks">Чтение при помощи кэширующих callback-функций
   </link> может быть использовано с помощью параметра <parameter>cache_cb</parameter>.
  </para>
  <para>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Ключ получаемой записи.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cache_cb</parameter></term>
     <listitem>
      <para>
       Функция обратного вызова для кэшируемого чтения или &null;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cas_token</parameter></term>
     <listitem>
      <para>
       Переменная в которую записывается CAS токен.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает значение хранимое в кеше или &false; в противном случае.
   Метод <methodname>Memcached::getResultCode</methodname> возвращает
   <constant>Memcached::RES_NOTFOUND</constant> если переданный ключ не существует.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>Memcached::get</function> #1</title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

$m->set('foo', 100);
var_dump($m->get('foo'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(100)
]]>
    </screen>
   </example>
   <example>
    <title>Пример использования <function>Memcached::get</function> #2</title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

if (!($ip = $m->get('ip_block'))) {
    if ($m->getResultCode() == Memcached::RES_NOTFOUND) {
        $ip = array();
        $m->set('ip_block', $ip);
    } else {
        /* log error */
        /* ...       */
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::getByKey</methodname></member>
    <member><methodname>Memcached::getMulti</methodname></member>
    <member><methodname>Memcached::getDelayed</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
