<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.ifx-getsqlca" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ifx_getsqlca</refname>
  <refpurpose>Получить содержимое sqlca.sqlerrd[0..5] после выполнения запроса</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>ifx_getsqlca</methodname>
   <methodparam><type>resource</type><parameter>result_id</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает псевдостроку с sqlca.sqlerrd[0] ... sqlca.sqlerrd[5] после выполнения
   запроса с идентификатором <parameter>result_id</parameter>.
  </para>
  <para>
   Для запросов INSERT, UPDATE и DELETE, возвращаемые значение 
   являются значениями, возвращенными сервером после их выполнения.
   Они дают доступ к числу затронутых строк и значению SERIAL для операторов
   INSERT. Для запросов <literal>SELECT</literal> эти значения выставляются
   после оператора <literal>PREPARE</literal>. Это дает доступ к *ожидаемому* количеству
   затронутых строк. Использование этой функции сокращает накладные расходы,
   которые могут возникнуть при вызове <literal>SELECT dbinfo('sqlca.sqlerrdx')</literal>,
   так как она извлекает значения, сохраненные драйвером ifx.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result_id</parameter></term>
     <listitem>
      <para>
       <parameter>result_id</parameter> - идентификатор запроса, полученный
       <function>ifx_query</function> или
       <function>ifx_prepare</function> (только для запросов типа SELECT!).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает ассоциативный массив со следующими полями:
   <literal>sqlerrd0</literal>, <literal>sqlerrd1</literal>,
   <literal>sqlerrd2</literal>, <literal>sqlerrd3</literal>,
   <literal>sqlerrd4</literal> и <literal>sqlerrd5</literal>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Извлечение значений sqlca.sqlerrd[x]</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Считаем первый столбец таблицы 'sometable' как тип SERIAL */
$qid = ifx_query("insert into sometable
                  values (0, '2nd column', 'another column') ", $connid);
if (!$qid) {
    /* ... jib,rf ... */
}
$sqlca = ifx_getsqlca($qid);
$serial_value = $sqlca["sqlerrd1"];
echo "Номер вставленной строки : $serial_value<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
