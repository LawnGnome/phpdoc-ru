<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 324122 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<!-- Revision: $ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ob-start">
 <refnamediv>
  <refname>ob_start</refname>
  <refpurpose>Включение буферизации вывода</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>ob_start</methodname>
   <methodparam choice="opt"><type>callable</type><parameter>output_callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>chunk_size</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>erase</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   Эта функция включает буферизацию вывода. Если буферизация вывода активна,
   вывод скрипта не высылается (кроме заголовков), а сохраняется во
   внутреннем буфере.
  </para>
  <para>
   Содержимое этого внутреннего буфера может быть скопировано в строковую
   переменную, используя <function>ob_get_contents</function>. Для вывода
   содержимого внутреннего буфера следует использовать <function>ob_end_flush</function>.
   В качестве альтернативы можно использовать <function>ob_end_clean</function>
   для уничтожения содержимого буфера.
  </para>
  <warning>
   <para>
    Некоторые web-сервера (например Apache) изменяют рабочую директорию скрипта,
 когда вызывается callback-функция. Вы можете вернуть ее назад, используя
 <literal>chdir(dirname($_SERVER['SCRIPT_FILENAME']))</literal>
 в callback-функции.
   </para>
  </warning>
  <para>
   Буферы вывода помещаются в стэк, то есть допускается вызов
   <function>ob_start</function> после вызова другой активной
   <function>ob_start</function>. При этом необходимо вызывать
   <function>ob_end_flush</function> соответствующее количество раз.
   Если активны несколько callback-функций,
   вывод последовательно фильтруется для
   каждой из них в порядке вложения.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>output_callback</parameter></term>
     <listitem>
      <para>
       В качестве необязательного параметра может быть указана функция
    <parameter>output_callback</parameter>. Эта функция принимает строку
    как параметр и должна возвращать строку. Функция будет вызвана при
    сбросе (отправке) буфера вывода или очистке (вместе с
    <function>ob_flush</function>, <function>ob_clean</function> или
    аналогичной функцией) или когда буфер выводится в браузер в конце запроса.
    При вызове <parameter>output_callback</parameter>, она принимает
    содержимое буфера вывода как параметр и возвращает новое содержимое,
    которое и отправляется в браузер. Если <parameter>output_callback</parameter>
    не является вызываемой функцией, то эта функция вернет &false;.
      </para>
      <para>
       Если callback-функции передано 2 параметра, то второй параметр
       рассматривается как битовое значение состоящее из
       <constant>PHP_OUTPUT_HANDLER_START</constant>,
       <constant>PHP_OUTPUT_HANDLER_CONT</constant> и
       <constant>PHP_OUTPUT_HANDLER_END</constant>.
      </para>
      <para>
       Если <parameter>output_callback</parameter> вернет &false;, то
       оригинальная информация отправится в браузер без изменений.
      </para>
      <para>
       Параметр <parameter>output_callback</parameter> может быть игнорирован
    передачей значения &null;.
      </para>
      <para>
       <function>ob_end_clean</function>, <function>ob_end_flush</function>,
       <function>ob_clean</function>, <function>ob_flush</function> и
       <function>ob_start</function> не могут вызываться из callback-функций,
       так как их поведение непредсказуемо. 
       Если вы хотите удалить содержимое буфера, то
       верните "" (пустую строку) из callback-функции.
       Вы так же не можете вызывать функции
       <literal>print_r($expression, true)</literal> или
       <literal>highlight_file($filename, true)</literal>
       из callback-функций буферизации вывода.
      </para>
      <note>
       <para>
        В PHP 4.0.4  функция <function>ob_gzhandler</function> была введена
        для облегчения отправки gz-кодированных данных web-браузерам,
        поддерживающим сжатые web-страницы. <function>ob_gzhandler</function>
        определяет тип кодировки содержимого, принимаемый браузером,
        и возвращает вывод соответствующим образом.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>chunk_size</parameter></term>
     <listitem>
      <para>
       Если передан не обязательный параметр <parameter>chunk_size</parameter>,
       то буфер буден сброшен после любого вывода превышающего или равного
       по размеру <parameter>chunk_size</parameter>. Значение
       по умолчанию <literal>0</literal> означает, что функция вывода будет
       вызвана, когда буфер будет закрыт.
      </para>
      <para>
       До PHP 5.4.0, значение <literal>1</literal> было специальным
       значением, которое устанавливало параметр <literal>chunk_size</literal> в 4096.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>erase</parameter></term>
     <listitem>
      <para>
       Если не обязательный параметр <parameter>erase</parameter> установлен
       в &false;, то буфер не будет удален пока скрипт не закончит работу.
       Это приведет к тому, что попытка сбросить или очистить буфер
       выдаст уведомление и вернет &false; при вызове.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        Параметр <literal>chunk_size</literal>, установленный в <literal>1</literal>, теперь приводит к выводу по 1 байту
        в выходной буфер.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        Функция вернет &false; в случае, если
  <parameter>output_callback</parameter> не сможет быть выполнена.
       </entry>
      </row>
      <row>
       <entry>4.2.0</entry>
       <entry>
        Добавлен параметр <parameter>erase</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример callback-функции, определенной пользователем</title>
    <programlisting role="php">
<![CDATA[
<?php

function callback($buffer)
{
  // заменить все яблоки апельсинами
  return (str_replace("яблоки", "апельсины", $buffer));
}

ob_start("callback");

?>
<html>
<body>
<p>Это все равно что сравнить яблоки и апельсины.</p>
</body>
</html>
<?php

ob_end_flush();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<html>
<body>
<p>Это все равно что сравнить апельсины и апельсины.</p>
</body>
</html>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ob_get_contents</function></member>
    <member><function>ob_end_clean</function></member>
    <member><function>ob_end_flush</function></member>
    <member><function>ob_implicit_flush</function></member>
    <member><function>ob_gzhandler</function></member>
    <member><function>ob_iconv_handler</function></member>
    <member><function>mb_output_handler</function></member>
    <member><function>ob_tidyhandler</function></member>
   </simplelist>
  </para>
 </refsect1>  

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
