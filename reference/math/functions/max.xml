<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 334683 Maintainer: aur Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.max">
 <refnamediv>
  <refname>max</refname>
  <refpurpose>Возвращает наибольшее значение</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>max</methodname>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>mixed</type><methodname>max</methodname>
   <methodparam><type>mixed</type><parameter>value1</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value2</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Если в качестве единственного аргумента передан массив, <function>max</function>
   вернет значение наибольшее значение из этого массива. Если передано 2 или более аргумента, функция
   <function>max</function> вернет наибольший из них.
  </para>
  <note>
   <para>
    Значения разных типов сравниваются с использованием <link linkend="language.operators.comparison">
    стандартных правил сравнения</link>. Например, не числовая строка (<type>string</type>) будет сравниваться
    с целым числом (<type>integer</type>) как будто она равна <literal>0</literal>, но 
    несколько строк (<type>string</type>) будут сравниваться алфивитом. Возвращаемое значение сохранит
    первоначальный тип переменной, без преобразования.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Массив с данными.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value1</parameter></term>
     <listitem>
      <para>
       Любое поддающееся <link linkend="language.operators.comparison">сравнению</link>
       значение.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value2</parameter></term>
     <listitem>
      <para>
       Любое поддающееся <link linkend="language.operators.comparison">сравнению</link>
       значение.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Любое поддающееся <link linkend="language.operators.comparison">сравнению</link>
       значение.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция <function>max</function> возвращает значение того параметра, который
   считается "самым большим" согласно стандартным правилам сравнения. Если несколько значений 
   разного типа равны между собой (т.е. <literal>0</literal> и <literal>'abc'</literal>), то
   будет возвращен первый из них.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>max</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo max(2, 3, 1, 6, 7);  // 7
echo max(array(2, 4, 5)); // 5

// Строка 'hello', при сравнении с int, рассматривается как 0
// Так как оба значения равны, то порядок параметров определяет результат
echo max(0, 'hello');     // 0
echo max('hello', 0);     // hello

// Здесь мы сравниваем -1 < 0, поэтому 'hello' является наибольшим значением
echo max('hello', -1);    // hello

// При сравнении массивов разной длины, max вернет более длинный
$val = max(array(2, 2, 2), array(1, 1, 1, 1)); // array(1, 1, 1, 1)

// Несколько массивов одинаковой длины сравниваются слева направо
// для этого примера: 2 == 2, но 5 > 4
$val = max(array(2, 4, 8), array(2, 5, 1)); // array(2, 5, 1)

// Если сравниваются массив и не-массив, то массив всегда будет возвращен
// так как массивы считаются большими чем все остальные значения
$val = max('string', array(2, 5, 7), 42);   // array(2, 5, 7)

// Если один аргумент является NULL или булевым, то он будет сравниваться с остальными
// с использованием правило FALSE < TRUE, учитывая остальные типы аргументов
// В приведенном примере -10 рассматривается как TRUE
$val = max(-10, FALSE); // -10
$val = max(-10, FALSE); // -10

// с другой стороны, 0 рассматривается как FALSE, поэтому это "меньше" чем TRUE
$val = max(0, TRUE); // TRUE
?>
]]>
    </programlisting>
    </example> 
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>min</function></member>
    <member><function>count</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
