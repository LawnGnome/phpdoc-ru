<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: lovchy Status: ready -->
<!-- splitted from ./en/functions/mysql.xml, last change in rev 1.27 -->
  <refentry xml:id="function.mysql-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_fetch_array</refname>
    <refpurpose>
     Обрабатывает ряд результата запроса, возвращая ассоциативный массив,
     численный массив или оба.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para>
     Возвращает массив с обработанным рядом результата запроса, или &false;,
     если рядов больше нет.</para>
    <para>
     <function>mysql_fetch_array</function> расширенная версия функции
     <function>mysql_fetch_row</function>. В дополнении к хранению значений в
     массиве с численными индексами, функция возвращает значения в массиве с
     индексами по названию колонок.
    </para>
    <para>
     Если несколько колонок в результате будут иметь одинаковые названия, последняя
     колонка будет возвращена. Чтобы получить доступ к первым, используйте
     численные индексы массива или алиасы в запросе. В случае алиасов
     используйте именно их -- вы не сможете использовать настоящие имена
     колонок, как например не сможете использовать 
     <literal>'field'</literal> в нижеописанном примере.
     <example>
      <title>Запрос с дублирующимися именами колонок</title>
      <programlisting role="sql">
<![CDATA[
select table1.field as foo, table2.field as bar from table1, table2
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Важно заметить, что
     <function>mysql_fetch_array</function> работает <emphasis>НЕ</emphasis>
     медленнее, чем <function>mysql_fetch_row</function>, в то время, как предоставляет более
     удобный доступ к данным.
    </para>
    <para>
     Второй опциональный аргумент <parameter>result_type</parameter> в функции
     <function>mysql_fetch_array</function> -- константа и может принимать
     следующие значения: MYSQL_ASSOC, MYSQL_NUM и
     MYSQL_BOTH. Эта возможность добавлена в PHP 3.0.7. Значением по умолчанию
     является: MYSQL_BOTH.
    </para>
    <para>
     Используя MYSQL_BOTH, вы получите массив, состоящий как из ассоциативных
     индексов, так и из численных. MYSQL_ASSOC вернёт только ассоциативные
     соответствия (аналогично функции <function>mysql_fetch_assoc</function> и MYSQL_NUM 
     только численные (аналогично функции
     <function>mysql_fetch_row</function>).
    </para>
    &database.field-case;
    <para>
     <example>
      <title><function>mysql_fetch_array</function> с MYSQL_NUM</title>
      <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Could not connect: " . mysql_error());
    mysql_select_db("mydb");

    $result = mysql_query("SELECT id, name FROM mytable");

    while ($row = mysql_fetch_array($result, MYSQL_NUM)) {
        printf ("ID: %s  Name: %s", $row[0], $row[1]);  
    }

    mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title><function>mysql_fetch_array</function> с MYSQL_ASSOC</title>
      <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Could not connect: " . mysql_error());
    mysql_select_db("mydb");

    $result = mysql_query("SELECT id, name FROM mytable");

    while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
        printf ("ID: %s  Name: %s", $row["id"], $row["name"]);
    }

    mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title><function>mysql_fetch_array</function> с MYSQL_BOTH</title>
      <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Could not connect: " . mysql_error());
    mysql_select_db("mydb");

    $result = mysql_query("SELECT id, name FROM mytable");

    while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {
        printf ("ID: %s  Name: %s", $row[0], $row["name"]);
    }

    mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     См. также
     <function>mysql_fetch_row</function> и
     <function>mysql_fetch_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
