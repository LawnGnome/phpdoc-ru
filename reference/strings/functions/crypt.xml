<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: blindman Status: ready -->
<!-- $Revision$ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.crypt" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>crypt</refname>
    <refpurpose>Необратимое шифрование (хэширование)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>string</type><methodname>crypt</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>salt</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>crypt</function> возвращает строку, зашифрованную по 
     стандартному алгоритму UNIX, основанному на <abbrev>DES</abbrev>, или другому 
     алгоритму, имеющемуся в системе.  Аргументами являются строка, 
     которую требуется зашифровать, и необязательная 
     salt-последовательность, на которой основывается шифрование. Для 
     получения дополнительной информации обратитесь к руководству UNIX по 
     функции crypt.
    </para>
    <simpara>
    Если аргумент <parameter>salt</parameter> не передан, он будет выбран 
    случайным образом.
    </simpara>
    <simpara>
     Некоторые операционные системы поддерживают несколько алгоритмов 
     шифрования. Иногда стандартный алгоритм, основанный на DES, 
     заменяется алгоритмом на основе MD5. Вид шифрования определяется 
     salt-последовательностью.  При инсталляции PHP определяет, какие 
     алгоритмы шифрования поддерживает crypt. Если salt-последовательность 
     не передана, будет автоматически сгенерирована стандартная случайная
     двухсимвольная salt-последовательность, если только в системе по 
     умолчанию не используется MD5, в этом случае будет создана случайная
     salt-последовательность, совместимая с MD5. Предопределенная 
     константа CRYPT_SALT_LENGTH позволяет определить, используется ли в 
     системе стандартная двухсимвольная salt, или 12-символьная.
    </simpara>
    <simpara>
     Если вы опускаете аргумент <parameter>salt</parameter>, вы должны 
     знать, что salt генериуется только при первом вызове этой функции, и 
     для всех последующих вызовов используется полученное значение. Это в 
     конечном итоге может привести к снижению безопасности.
    </simpara>
    <simpara>
     Стандартная функция <function>crypt</function> на основе DES копирует 
     salt в начало возвращаемой строки. Кроме того, она использует только 
     первые восемь символов строки <parameter>str</parameter>, поэтому 
     для различных строк, первые восемь символов в которых совпадают, 
     будет возвращаться один и тот же результат (при использовании 
     одинаковых salt-последовательностей).
    </simpara>
    <simpara>
     На системах, где функция crypt() поддерживает несколько алгоритмов 
     шифрования, следующие константы устанавливаются в 0 или 1 в 
     зависимости от доступности соответствующего алгоритма:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       CRYPT_STD_DES - Стандартное DES-шифрование с двухсимвольной salt
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_EXT_DES - Расширенное DES-шифрование с девятисимвольной salt
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_MD5 - MD5-шифрование с 12-символьной salt, начинающейся с $1$
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_BLOWFISH - Blowfish-шифрование с 16-символьной salt, 
       начинающейся с $2$
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <simpara>
      Функция расшифровки отсутствует, так как <function>crypt</function> 
      использует необратимый алгоритм шифрования.
     </simpara>
     </note>
    <example>
     <title>Пример использования <function>crypt</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$password = crypt('My1sTpassword'); // salt будет сгенерирована автоматически

// Для проверки пароля в качестве salt следует передавать результат работы 
// crypt() целиком во избежание проблем при использовании различных 
// алгоритмов (как уже было отмечено выше, стандартный DES-алгоритм 
// использует 2-символьную salt, а MD5 - 12-символьную.

if (crypt($user_input, $password) == $password) {
   echo "Пароль верен !";
}
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>Использование <function>crypt</function> с файлом .htpasswd</title>
     <para>
      При создании пароля для использования в файле .htpasswd  Apache, нужно
      использовать 2 первых символа пароля в качестве salt.
     </para>
     <programlisting role="php">
<![CDATA[
<?php
// пароль 
$password = 'mypassword';

// получение хэша
$hash = crypt($password, substr($password, 0, 2));
?>
]]>
     </programlisting>
    </example>
    <simpara>
     См. также описание функции
     <function>md5</function> и 
     <link linkend="ref.mcrypt">модуля Mcrypt</link>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
