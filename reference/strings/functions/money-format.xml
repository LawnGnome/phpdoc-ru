<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.7 Maintainer: blindman Status: ready -->
<!-- $Revision: 1.3 $ -->
  <refentry xml:id="function.money-format" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>money_format</refname>
    <refpurpose>Форматирует число как денежную величину</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>string</type><methodname>money_format</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam><type>float</type><parameter>number</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>money_format</function> форматирует число 
     <parameter>number</parameter> как денежную величину.
     Эта функция вызывает функцию  strfmon языка C, но позволяет 
     преобразовать только одно число за один вызов.
    </para>
    <note>
     <para>
      Функция <function>money_format</function> определена только если
      в системе присутствует функция strfmon. Например, в Windows она 
      отсутствует, поэтому <function>money_format</function> не определена 
      в Windows.
     </para>
    </note>
    <para>
     Описание формата состоит из:
     <itemizedlist>
      <listitem><para>символа <literal>%</literal></para></listitem>
      <listitem><para>необязательных флагов</para></listitem>
      <listitem><para>необязательной ширины поля</para></listitem>
      <listitem><para>необязательной точности до запятой</para></listitem>
      <listitem><para>необязательной точности после запятой</para></listitem>
      <listitem><para>обязательного описателя преобразования</para></listitem>
     </itemizedlist>
    </para>
    <formalpara>
     <title>Флаги</title>
     <para>
     Могут быть использованы следующие флаги:
      <variablelist>
       <varlistentry>
        <term><literal>=</literal><replaceable>f</replaceable></term>
        <listitem>
         <para>
          Символ <literal>=</literal>, за которым следует еще один символ,
          задает символ заполнения. По умолчанию пробел.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>^</literal></term>
        <listitem>
         <para>
          Запрещает группировку символов (определяемую текущей локалью).
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>+</literal> или <literal>(</literal></term>
        <listitem>
         <para>
          Задает способ форматирования положительных и отрицательных 
          значений. При использовании <literal>+</literal> будут
          использоваться аналоги символов <literal>+</literal> и 
          <literal>-</literal> из текущей локали. Если указана 
          <literal>(</literal>, отрицательные числа будут заключены в 
          скобки. По умолчанию <literal>+</literal>.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>!</literal></term>
        <listitem>
         <para>
          Подавляет вывод символа валюты.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>-</literal></term>
        <listitem>
         <para>
          Если этот флаг задан, поля будут выравнены влево, вместо
          используемого по умолчанию выравнивания вправо.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </formalpara>
    <formalpara>
     <title>Ширина поля</title>
     <para>
      <variablelist>
       <varlistentry>
        <term><replaceable>w</replaceable></term>
        <listitem>
         <para>
          Строка  из десятичных цифр, задающая минимальную ширину поля. 
          Поле будет выравнено вправо, если не указан флаг 
          <literal>-</literal>. Значение по умолчанию - 0 (ноль).
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </formalpara>
    <formalpara>
     <title>Точность до запятой</title>
     <para>
      <variablelist>
       <varlistentry>
        <term><literal>#</literal><replaceable>n</replaceable></term>
        <listitem>
         <para>
          Максимальное количество цифр (<replaceable>n</replaceable>), 
          которое ожидается до запятой. Это обычно используется при выводе
          значений одно под другим, чтобы десятичные точки распологались в
          одной колонке, при этом используется символ заполнения, если 
          число цифр меньше <replaceable>n</replaceable>. Если число цифр 
          больше <replaceable>n</replaceable>, этот параметр игнорируется.
         </para>
         <para>
          Если группировка не была запрещена флагом <literal>^</literal>,
          разделители групп будут вставлены перед добавлением символов 
          заполнения. Разделители групп не вставляются между символами
          заполнения, даже если заполнитель - цифра.
         </para>
         <para>
          Для обеспечения выравнивания, все символы, выводимые до или 
          после числа, такие как сивол валюты или знак, будут дополнены 
          пробелами до одинаковой ширины.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </formalpara>
    <formalpara>
     <title>
      Точность после запятой
     </title>
     <para>
      <variablelist>
       <varlistentry>
        <term><literal>.</literal><replaceable>p</replaceable></term>
        <listitem>
         <para>
          Точка, за которой следует число знаков, выводимых после запятой.
          Если значение <replaceable>p</replaceable> рано нулю, десятичная 
          точка и цифры после нее не будут выводиться.
          Если этот параметр отсутствует, число знаков после запятой 
          определяется текущей локалью. Перед форматированием число 
          округляется до указанного количества знаков.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </formalpara>
    <formalpara>
     <title>
      Описатель преобразования
     </title>
     <para>
      <variablelist>
       <varlistentry>
        <term><literal>i</literal></term>
        <listitem>
         <para>
          Используется международный денежный формат из текущей локали
          (например, для американской локали: USD 1,234.56).
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>n</literal></term>
        <listitem>
         <para>
          Используется национальный денежный формат из текущей локали
          (например, для локали de_DE: DM1.234,56).
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><literal>%</literal></term>
        <listitem>
         <para>
          Вставляет символ <literal>%</literal>.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </formalpara>
    <note>
     <para>
      На работу этой функции влияет установка категории 
      <constant>LC_MONETARY</constant> текущей локали.
      Перед использованием этой функции установите нужную локаль с помощью 
      <function>setlocale</function>.
     </para>
     <para>
      Символы перед и после описания формата  возвращаются без изменений.
     </para>
    </note>
    <para>
    <example>
     <title>Пример использования <function>money_format</function></title>
     <para>
      Проиллюстрируем применение этой функции для различных локалей и 
      разных описаний формата.
     </para>
      <programlisting role="php">
<![CDATA[
<?php

$number = 1234.56;

// международный формат в локали en_US
setlocale(LC_MONETARY, 'en_US');
echo money_format('%i', $number) . "\n";  
// USD 1,234.56

// Итальянский национальный формат с 2 знаками после запятой
setlocale(LC_MONETARY, 'it_IT');
echo money_format('%.2n', $number) . "\n";
// L. 1.234,56

// Использование отрицательных чисел
$number = -1234.5672;

// национальный формат США, с использованием скобок для
// отрицательных чисел и 10 знаков до запятой
setlocale(LC_MONETARY, 'en_US');
echo money_format('%(#10n', $number) . "\n";
// ($        1,234.57)

// подобно предыдущему, но с  добавлением 2 знаков после запятой
// и '*' в качестве символа заполнения
echo money_format('%=*(#10.2n', $number) . "\n";
// ($********1,234.57)
    
// Выравнивание влево, ширина 14 знаков, 8 знаков дозапятой,
// 2 знака после запятой, без разбиения на группы
// с использованием  международного формата в локали de_DE.
setlocale(LC_MONETARY, 'de_DE');
echo money_format('%=*^-14#8.2i', 1234.56) . "\n";
// DEM 1234,56****

// А теперь добавим текст перед и после описателя формата
setlocale(LC_MONETARY, 'en_GB');
$fmt = 'The final value is %i (after a 10%% discount)';
echo money_format($fmt, 1234.56) . "\n";
// The final value is  GBP 1,234.56 (after a 10% discount)

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     См. также описание функций <function>setlocale</function>,
     <function>number_format</function>,<function>sprintf</function>,
     <function>printf</function> и <function>sscanf</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
