<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 308101 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.html-entity-decode">
 <refnamediv>
  <refname>html_entity_decode</refname>
  <refpurpose>Преобразует все HTML-сущности в соответствующие символы</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>html_entity_decode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>quote_style</parameter><initializer>ENT_COMPAT</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter><initializer>'UTF-8'</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>html_entity_decode</function> является противоположностью функции
   <function>htmlentities</function>, она преобразует все HTML-сущности в строке
   <parameter>string</parameter> в соответствующие символы.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Входная строка.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>quote_style</parameter></term>
     <listitem>
      <para>
       Необязательный аргумент <parameter>quote_style</parameter> позволяет
       указать способ обработки 'одиночных' и "двойных" кавычек. Значением
       этого аргумента может быть одна из трех следующих констант:
       <table>
        <title>Константы <parameter>quote_style</parameter></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Имя константы</entry>
           <entry>Описание</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>ENT_COMPAT</constant></entry>
           <entry>Преобразуются двойные кавычки, одиночные остаются без изменений.</entry>
          </row>
          <row>
           <entry><constant>ENT_QUOTES</constant></entry>
           <entry>Преобразуются и двойные, и одиночные кавычки.</entry>
          </row>
          <row>
           <entry><constant>ENT_NOQUOTES</constant></entry>
           <entry>И двойные, и одиночные кавычки остаются без изменений.</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      <para>
       Определяет кодировку, используемую при преобразовании.
      </para>
      &reference.strings.charsets;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает раскодированную строку.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.3</entry>
       <entry>
        Кодировка по умолчанию сменилась с ISO-8859-1 на UTF-8.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Добавлена поддержка многобайтных символов.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Декодирование HTML-сущностей</title>
    <programlisting role="php">
<![CDATA[
<?php
$orig = "I'll \"walk\" the <b>dog</b> now";

$a = htmlentities($orig);

$b = html_entity_decode($a);

echo $a; // I'll &quot;walk&quot; the &lt;b&gt;dog&lt;/b&gt; now

echo $b; // I'll "walk" the <b>dog</b> now


// в версиях до PHP 4.3.0 можно сделать так:
function unhtmlentities($string)
{
    // заменяет числовые сущности
    $string = preg_replace('~&#x([0-9a-f]+);~ei', 'chr(hexdec("\\1"))', $string);
    $string = preg_replace('~&#([0-9]+);~e', 'chr("\\1")', $string);
    // заменяем буквенные сущности
    $trans_tbl = get_html_translation_table(HTML_ENTITIES);
    $trans_tbl = array_flip($trans_tbl);
    return strtr($string, $trans_tbl);
}

$c = unhtmlentities($a);

echo $c; // I'll "walk" the <b>dog</b> now

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Может показаться странным, что результатом вызова
    trim(html_entity_decode('&amp;nbsp;')); не является пустая строка.
    Причина том, что '&amp;nbsp;' преобразуется не в символ с
    ASCII-кодом 32 (который удаляется функцией <function>trim</function>),а в символ с
    ASCII-кодом 160 (0xa0) в принимаемой по умолчанию кодировке ISO-8859-1.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>htmlentities</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>get_html_translation_table</function></member>
    <member><function>urldecode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
