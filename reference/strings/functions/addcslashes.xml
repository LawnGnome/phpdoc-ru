<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.5 Maintainer: blindman Status: ready -->
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.addcslashes" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>addcslashes</refname>
    <refpurpose>Экранирует спецсимволы в стиле языка C</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>string</type><methodname>addcslashes</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam><type>string</type><parameter>charlist</parameter></methodparam>
     </methodsynopsis>
    <para>
     Возвращает сроку <parameter>str</parameter>, в которой перед каждым 
     символом из перечисленных в  <parameter>charlist</parameter> символов 
     добавлен обратный слэш (<literal>\</literal>). Экранируются
     <literal>\n</literal>, <literal>\r</literal> и т.д. в стиле языка C,
     символы с ASCII менее 32 и более 126 преобразуются в восьмеричное 
     представление.
    </para>
    <para>
     Будьте внимательны при экранировании символв 0, a, b, f, n, r, 
     t и v. Они будут преобразованы в \0, \a, \b, \f, \n, \r, \t 
     и \v. 
     В C все они являются предопреденными escape-последовательностями, в 
     то время как в PHP только \0 (&null;), \r (возврат каретки), \n 
     (перевод строки) и \t (табуляция).
    </para>
    <para>
     При передаче <parameter>charlist</parameter> вида "\0..\37" будут 
     экранированы символы с ASCII кодами от 0 до 37.
     <example>
      <title>Пример использования <function>addcslashes</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$escaped = addcslashes($not_escaped, "\0..\37!@\177..\377");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Следует быть внимательным при указании диапазона символов в аргументе 
     charlist. Проверяйте, какие символы входят в этот диапазон.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
echo addcslashes('foo[ ]', 'A..z');
// выводит:  \f\o\o\[ \]
// Будут экранированы заглавные и строчные английские буквы
// ... а также [\]^_`  а также табуляция,
// возврат каретки, перевод строки и т.д.
?>
]]>
      </programlisting>
     </informalexample>
     Также, если ASCII код первого символа диапозона больше, чем 
     последнего, диапазон не будет создан. Вместо этого будут 
     экранироваться только первый и последний символы и 
     точка. Для  определения ASCII кода символов используйте функцию 
     <function>ord</function>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
echo addcslashes("zoo['.']", 'z..A');
// выводит:  \zoo['\.']
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     См. также описание функций <function>stripcslashes</function>, 
     <function>stripslashes</function>, 
     <function>htmlspecialchars</function> и
     <function>quotemeta</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
