<?xml version="1.0" encoding="windows-1251"?>
<!-- EN-Revision: 1.2 Maintainer: blindman Status: ready -->
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.12 -->
  <refentry id="function.levenshtein">
   <refnamediv>
    <refname>levenshtein</refname> 
    <refpurpose>
     Вычисляет расстояние Левенштейна между двумя строками
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>int</type><methodname>levenshtein</methodname>
      <methodparam><type>string</type><parameter>str1</parameter></methodparam>
      <methodparam><type>string</type><parameter>str2</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>int</type><methodname>levenshtein</methodname>
      <methodparam><type>string</type><parameter>str1</parameter></methodparam>
      <methodparam><type>string</type><parameter>str2</parameter></methodparam>
      <methodparam><type>int</type><parameter>cost_ins</parameter></methodparam>
      <methodparam><type>int</type><parameter>cost_rep</parameter></methodparam>
      <methodparam><type>int</type><parameter>cost_del</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>int</type><methodname>levenshtein</methodname>
      <methodparam><type>string</type><parameter>str1</parameter></methodparam>
      <methodparam><type>string</type><parameter>str2</parameter></methodparam>
      <methodparam><type>function</type><parameter>cost</parameter></methodparam>
     </methodsynopsis>
    <para>
     Функция возвращает расстояние Левенштейна между двумя строками, или 
     -1, если хотя бы одна из строк длиннее 255 символов (этого более чем 
     достаточно для сравнения имен или поиска по словарю, а проводить 
     генетический анализ на PHP просто несерьезно).
    </para>
    <para>
     Расстояние Левенштейна - это минимальное количество вставок, замен и 
     удалений символов, необходимое для преобразования 
     <parameter>str1</parameter> в <parameter>str2</parameter>.
     Сложность алгоритма равна <literal>O(m*n)</literal>,
     где <literal>n</literal> и <literal>m</literal> - длины строк
     <parameter>str1</parameter> и <parameter>str2</parameter> (неплохо по
     сравнению с <function>similar_text</function>, имеющей сложность O(max(n,m)**3),
     но все же довольно много).
    </para>
    <para>
     В простейшей форме функция принимает в качестве аргументов две строки
     и возвращает минимальное количество вставок, замен и 
     удалений символов, необходимое для преобразования 
     <parameter>str1</parameter> в <parameter>str2</parameter>.
    </para>
    <para> 
     Второй вариант принимает три дополнительных аргумента, задающих 
     стоимость операций вставки, замены и удаления. Этот вариант 
     универсальнее первого, но не так эффективен.
    </para>
    <para> 
     Третий вариант (который еще не реализован) будет наиболее 
     универсальным, но и самым медленным. Он будет принимать в качестве 
     третьего аргумента пользовательскую функцию, которая будет вычислять 
     стоимость каждой возможной операции.
    </para>
    <para>
     Пользовательская функция будет иметь следующие аргументы:
     <itemizedlist>
      <listitem>
       <simpara>
        тип операции: 'I', 'R' or 'D'
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        текущий символ в строке 1
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        текущий символ в строке 2
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        текущая позиция символа в строке 1
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        текущая позиция символа в строке 2
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        количество символов, оставшихся в строке 1
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        количество символов, оставшихся в строке 2
       </simpara>
      </listitem>
     </itemizedlist>
     Пользовательская функция должна возвращать положительное целое, 
     определяющее стоимость конкретной операции.
    </para>
    <para>
     Использование пользовательской функции позволяет учитывать различия 
     между символами и даже контекст символов при вычислении стоимости 
     операций вставки, замены и удаления, но ценой потери скорости по 
     сравнению с двумя первыми вариантами.
    </para>
    <para>
     См. также описание функций <function>soundex</function>,
     <function>similar_text</function> и
     <function>metaphone</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
