<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322142 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="sca.getservice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SCA::getService</refname>
  <refpurpose>
   Получить прокси для службы
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type>
   <methodname>SCA::getService</methodname>
   <methodparam>
    <type>string</type>
    <parameter>target</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>string</type>
    <parameter>binding</parameter>
   </methodparam>   
   <methodparam choice="opt">
    <type>array</type>
    <parameter>config</parameter>
   </methodparam>   
  </methodsynopsis>
  
  &warn.experimental.func;
  
  <para>Исследует целевой объект, инициализирует и возвращает соответствующий
   прокси. Если целевой объект является локальным PHP-компонентом, то возвращается
   SCA_LocalProxy. Если целевой объект - это WSDL-файл, то возвращается 
   SCA_SoapProxy.</para>
  
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>target</parameter>
     </term>
     <listitem>
      <para>Абсолютный или относительный путь к целевому сервису или
       описание сервиса (например URL к описанию сервиса в формате json-rpc, 
       PHP-компоненту, файлу WSDL и т.д.). Относительный путь разрещается 
       относительно пути скрипта, из которого запускается
       <function>getService</function>, а не относительно include_path 
       или текущей рабочей директории</para>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>binding</parameter>
    </term>
    <listitem>
     <para>Привязка (т.е. протокол), используемая для общения с сервисом 
      (например binding.jsonrpc для сервиса json-rpc). Обратите внимание, что 
       некоторые типы могут быть выведены из параметров целевого
       сервиса (например, если параметр заканчивается на .wsdl, то SCA будет
       использовать binding.soap). Могут быть указаны любые привязки, 
       которые допустимы в аннотациях. К примеру, 'binding.soap' эквивалентно
       аннотации '@binding.soap'</para>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>config</parameter>
    </term>
    <listitem>
     <para>Любые дополнительные параметры для привязки (например 
      array('location' => 'http://example.org')). Могут быть указаны любые 
      параметры, которые допустимы в аннотациях.  К примеру, 'location' 
      является эквивалентом аннотации '@location'</para>
    </listitem>
   </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   SCA_LocalProxy или SCA_SoapProxy.
  </para>
 </refsect1>
 
 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->
 
 
 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here
       <entry>Description of change
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>SCA::getService</function></title>
    <para>
     В этом примере показывается как получить прокси к SOAP-сервису, определенному 
     как <filename>EmailService.wsdl</filename> и расположенному по пути
     <filename>http://example.org</filename>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
include 'SCA/SCA.php';
$service = SCA::getService('EmailService.wsdl', 'binding.soap', array('location' => 'http://example.org'));
$service->send(...);
?>
]]>
    </programlisting>
    &example.outputs;
   </example>
  </para>
 </refsect1>
 
 
 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
