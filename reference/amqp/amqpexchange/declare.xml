<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 315621 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->

<refentry xml:id="amqpexchange.declare" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPExchange::declare</refname>
  <refpurpose>Объявить новый обменник на брокере</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>AMQPExchange::declare</methodname>
   <methodparam choice="opt"><type>string</type><parameter>exchange_name</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>exchange_type</parameter><initializer><constant>AMQP_EX_TYPE_DIRECT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Объявляет новый обменник на брокере с данной информацией. 
   Если обменник с данным именнем уже существует и указаны параметры
   <parameter>exchange_type</parameter> и/или <parameter>flags</parameter>, 
   то настроки обменника будут обновлены.
  </para>
  <para>
   Если не определён параметр <parameter>exchange_type</parameter> и обменник не существует, то тип обменника по умолчанию будет прямой (direct).
  </para>
  
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>exchange_name</parameter></term>
     <listitem>
      <para>
        Имя обменника.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>exchange_type</parameter></term>
     <listitem>
      <para>
        Тип обменника. Может быть любым из <constant>AMQP_EX_TYPE_DIRECT</constant>, <constant>AMQP_EX_TYPE_FANOUT</constant>, 
       <constant>AMQP_EX_TYPE_TOPIC</constant> или <constant>AMQP_EX_TYPE_HEADER</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Битовая маска из флагов: <constant>AMQP_PASSIVE</constant>, 
       <constant>AMQP_DURABLE</constant>, <constant>AMQP_AUTODELETE</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдаёт исключение <classname>AMQPExchangeException</classname> в случае неуспеха.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <methodname>AMQPExchange::declare</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Создание нового соединения */
$cnn = new AMQPConnection();
$cnn->connect();

$ex = new AMQPExchange($cnn);
$ex->declare('new_topic_exchange', AMQP_EX_TYPE_DIRECT, AMQP_DURABLE | AMQP_AUTODELETE);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
