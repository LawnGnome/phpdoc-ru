<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 317663 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->

<refentry xml:id="amqpqueue.ack" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::ack</refname>
  <refpurpose>Подтвердить получение сообщения</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>AMQPQueue::ack</methodname>
   <methodparam><type>int</type><parameter>delivery_tag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
    Этот метод позволяет получить подтверждение для сообщения, что оно извлечено с флагом <constant>AMQP_NOACK</constant> через
    <methodname>AMQPQueue::get</methodname> или <methodname>AMQPQueue::consume</methodname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>delivery_tag</parameter></term>
     <listitem>
      <para>
       Тег доставки сообщения, который подтверждает получение.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Только допустимый флаг, который может быть передан в <constant>AMQP_MULTIPLE</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <methodname>AMQPQueue::ack</methodname> с <methodname>AMQPQueue::get</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* создание соединения, используя все учетные данные по умолчанию: */
$connection = new AMQPConnection();
$connection->connect();

/* создание очереди */
$queue = new AMQPQueue($connection);

//объявление очереди
$queue->declare('myqueue');

//получение следующего сообщения, но не отмечая как доставленное
$message = $queue->get(AMQP_NOACK);

echo $message['msg'];

//подтверждение о доставке сообщения
$queue->ack($message['delivery_tag']);

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Пример использования <methodname>AMQPQueue::ack</methodname> с <methodname>AMQPQueue::consume</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Создание соединения, используя все учетные данные по умолчанию: */
$connection = new AMQPConnection();
$connection->connect();

/* создание очереди */
$queue = new AMQPQueue($connection);

//объявление очереди
$queue->declare('myqueue');

$options = array(
    'min' => 1,
    'max' => 10,
    'ack' => false
);

//получение сообщений, но не отмечая их как доставленные
$messages = $queue->consume($options);

foreach ($messages as $message) {
    echo $message['message_body'];
    //подтверждение о доставке сообщения
    $queue->ack($message['delivery_tag']);
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
