<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 315621 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->

<refentry xml:id="amqpqueue.consume" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::consume</refname>
  <refpurpose>Использовать цель</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>AMQPQueue::consume</methodname>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
    Это блокирующая функция, которая не будет возвращать ответа пока минимальное количество сообщений, 
    указанное в <parameter>min</parameter>, не будет прочитано из очереди.  
    Для использования неблокирующей функции смотри <methodname>AMQPQueue::get</methodname>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       <parameter>options</parameter> - массив используемых опций.
       Ключи, используемые в массиве <parameter>options</parameter>: min, max, и ack.        
       Все другие ключи будут проигнорированы.
      </para>
      <para>
       Для каждой недостающей опции расширение будет проверять ini-настройки или использовать значение по умолчанию.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Массив, содержащий использованные сообщения. 
   Число возвращенных сообщений будет, по крайней мере, числом заданным <parameter>min</parameter> в массиве <parameter>options</parameter>. 
   Но не больше, чем число заданное параметром <parameter>max</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <methodname>AMQPQueue::consume</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* создание соединения, используя все учетные данные по умолчанию: */
$connection = new AMQPConnection();
$connection->connect();

/* создание очереди */
$queue = new AMQPQueue($connection);

//объявление очереди
$queue->declare('myqueue');

$options = array(
    'min' => 1,
    'max' => 10,
    'ack' => true
);

//получение сообщений
$messages = $queue->consume($options);

foreach ($messages as $message) {
    echo $message['message_body'];
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
