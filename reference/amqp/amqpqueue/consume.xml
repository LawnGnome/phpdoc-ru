<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 323238 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->

<refentry xml:id="amqpqueue.consume" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::consume</refname>
  <refpurpose>Использовать сообщения из очереди</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>AMQPQueue::consume</methodname>
   <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>AMQP_NOPARAM</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Это блокирующая функция, которая получает следующее сообщение из очереди, когда оно становится доступным, и передает его функции обратного вызова.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
     <varlistentry>
      <term><parameter>callback</parameter></term>
      <listitem>
       <para>
        Функция обратного вызова, которой передается сообщение. Эта функция должна принимать минимум один параметр - это объект <classname>AMQPEnvelope</classname>
        и второй опциональный параметр - объект <classname>AMQPQueue</classname>, из которого было прочитано сообщение.
       </para>
       <para>
         Метод <methodname>AMQPQueue::consume</methodname> не будет возвращать назад управление скрипту PHP до тех пор, пока функция обратного вызова не вернет &false;.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Битовая маска, состоящая из таких флагов: <constant>AMQP_NOACK</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Генерирует исключение <classname>AMQPChannelException</classname>, если канал не открыт.
  </para>
  <para>
   Генерирует исключение  <classname>AMQPConnectionException</classname>, если соединение с брокером было потеряно.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <methodname>AMQPQueue::consume</methodname></title>
    <programlisting role="php">
     <![CDATA[
     <?php

     /* Создание соединения, используя все учетные данные по умолчанию: */
     $connection = new AMQPConnection();
     $connection->connect();

     $channel = new AMQPChannel($connection);

     /* создание объекта очереди */
     $queue = new AMQPQueue($channel);

     // объявление очереди
     $queue->declare('myqueue');

     $i = 0;
     function processMessage($envelope, $queue) {
        global $i;
        echo "Сообщение $i: " . $envelope->getBody() . "\n";
        $i++;
        if ($i > 10) {
            // Выходим после 10 сообщений
            return false;
        }
     }

     // получение сообщений
     $queue->consume("processMessage");

     ?>
     ]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
