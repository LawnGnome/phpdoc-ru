<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 305704 Maintainer: mch Status: ready -->
<!-- $Revision$ -->
<!-- Reviewed: no -->
<refentry xml:id="simplexmlelement.children" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::children</refname>
  <refpurpose>Поиск дочерних элементов данного узла</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>SimpleXMLElement</type><methodname>SimpleXMLElement::children</methodname>
   <methodparam choice="opt"><type>string</type><parameter>ns</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
  <para>
   Этот метод находит всех дочерних элементов узла. Результат
   подчиняется стандартным правилам итерации. 
  </para>
  &simplexml.iteration;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
       Не обязательное пространство имен <acronym>XML</acronym>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
       Если <parameter>is_prefix</parameter> установлен в &true;,
       <parameter>ns</parameter> будет рассмотрен как префикс. Если &false;,
       <parameter>ns</parameter> будет рассмотрен как пространство имен
       <acronym>URL</acronym>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает <classname>SimpleXMLElement</classname> элемент, даже
   если узел не имеет дочерних элементов.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>
        Добавлен не обязательный параметр <parameter>is_prefix</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Обход псевдо-массива <literal>children()</literal></title>
    <programlisting role="php">
<![CDATA[
<?php
$xml = new SimpleXMLElement(
'<person>
 <child role="сын">
  <child role="дочь"/>
 </child>
 <child role="дочь">
  <child role="сын">
   <child role="сын"/>
  </child>
 </child>
</person>');

foreach ($xml->children() as $second_gen) {
    echo ' У человека родился(-ась) ' . $second_gen['role'];

    foreach ($second_gen->children() as $third_gen) {
        echo ' у которого родился(-ась) ' . $third_gen['role'] . ';';

        foreach ($third_gen->children() as $fourth_gen) {
            echo ' и у ' . $third_gen['role'] .
                ' родился(-ась) ' . $fourth_gen['role'];
        }
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
У человека родился(-ась) сын у которого родился(-ась) дочь; У человека
родился(-ась) дочь у которого родился(-ась) сын; и у сын родился(-ась) сын
]]>
    </screen>
   </example>
   <example>
    <title>Использование пространства имен</title>
    <programlisting role="php">
<![CDATA[
<?php
$xml = '<example xmlns:foo="my.foo.urn">
  <foo:a>Яблоко</foo:a>
  <foo:b>Банан</foo:b>
  <c>Cherry</c>
</example>';

$sxe = new SimpleXMLElement($xml);

$kids = $sxe->children('foo');
var_dump(count($kids));

$kids = $sxe->children('foo', TRUE);
var_dump(count($kids));

$kids = $sxe->children('my.foo.urn');
var_dump(count($kids));

$kids = $sxe->children('my.foo.urn', TRUE);
var_dump(count($kids));

$kids = $sxe->children();
var_dump(count($kids));
?>
]]>
    </programlisting>
    <screen>
<![CDATA[
int(0)
int(2)
int(2)
int(0)
int(1)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  <simpara>
   <methodname>SimpleXMLElement::children</methodname> вернет узел объекта
   в любом случае, даже если текущий узел не имеет потомков. Используя
   <function>count</function> для возвращенного значения, можно узнать о
   существовании потомков. В PHP 5.3.0 вместо этого можно использовать 
   <methodname>SimpleXMLElement::count</methodname>.
  </simpara>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::count</methodname></member>
    <member><function>count</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->