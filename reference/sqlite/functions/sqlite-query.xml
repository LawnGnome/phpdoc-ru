<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.11 Maintainer: blindman Status: ready -->
<!-- $Revision: 1.2 $ -->
<refentry id="function.sqlite-query">
 <refnamediv>
  <refname>sqlite_query</refname>
  <refpurpose>
   Выполняет запрос к базе данных и возвращает идентификатор результата
  </refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>sqlite_query</methodname>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>resource</type><methodname>sqlite_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
  </methodsynopsis>
  <para>
   Выполняет SQL запрос <parameter>query</parameter> к базе данных, заданной
   аргументом <parameter>dbhandle</parameter>.
  </para>
  <para>
   Эта функция возвращает идентификатор результата запроса или &false; в
   случае ошибки. Для запросов, возвращающих данные, этот идентификатор может
   использоваться в качестве аргумента таких функций как
   <function>sqlite_fetch_array</function> или
   <function>sqlite_seek</function>.
  </para>
  <para>
   Независимо от типа запроса, в случае возникновения ошибки эта функция
   возвращает &false;.
  </para>
  <para>
   <function>sqlite_query</function> сохраняет выбранные записи в буфере, что
   позволяет перебирать возвращенные записи в произвольном порядке. Её
   следует использовать только для запросов, возвращающих относительно
   небольшое количество записей. Если вам необходим только последовательный
   доступ к записям, рекомендуется ипользовать функцию
   <function>sqlite_unbuffered_query</function>, которая выполняется быстрее и
   потребляет меньше памяти.
  </para>
  <note>
   <simpara>
    Два варианта синтаксиса используются для обеспечения совместимости с
    другими модулями для работы с базами данных (например MySQL).
    Предпочтительной является первая форма записи, использующая
    <parameter>dbhandle</parameter> в качестве первого аргумента.
   </simpara>
  </note>
  <warning>
   <simpara>
    SQLite <emphasis>выполняет</emphasis> несколько запросов, разделенных
    точкой с запятой, что можно использовать, например, для выполнения
    запросов, прочитанных из файла. Однако, если хотя бы один из запросов
    должен возвращать набор записей (SELECT), то будет выполнен только первый
    запрос. Функция <function>sqlite_exec</function> всегда выполняет все
    запросы.
   </simpara>
   <simpara>
    При выполнении нескольких запросов, эта функция возвращает &false; в
    случае ошибки, иначе возвращается либо &true;, либо идентификатор
    результата запроса.
   </simpara>
  </warning>
 </refsect1>
 <refsect1>
  &reftitle.seealso;
  <para>
   <function>sqlite_unbuffered_query</function> and 
   <function>sqlite_array_query</function>.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
