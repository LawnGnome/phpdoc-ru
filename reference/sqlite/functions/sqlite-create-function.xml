<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 297028 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xml:id="function.sqlite-create-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_create_function</refname>
  <refname>SQLiteDatabase->createFunction</refname>
  <refpurpose>Регистрирует "стандартную" функцию (UDF) для использования в SQL-запросах</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>sqlite_create_function</methodname>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>num_args</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>Объектно-ориентированный стиль (метод):</para>
  <classsynopsis>
   <ooclass><classname>SQLiteDatabase</classname></ooclass>
   <methodsynopsis>
    <type>void</type><methodname>createFunction</methodname>
    <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
    <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>num_args</parameter><initializer>-1</initializer></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>sqlite_create_function</function> позволяет зарегистрировать PHP
   функцию для использования в SQLite в качестве <acronym>UDF</acronym> (User
   Defined Function - функция, определенная пользователем), что позволяет
   использовать эту функцию в SQL-запросах.
  </para>
  <para>
   Определенная таким образом функция может быть использована в любом
   SQL-запросе, допускающем использование функций, например SELECT и UPDATE,
   а также в триггерах.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dbhandle</parameter></term>
     <listitem>
      <para>
       Ресурс базы данных SQLite, полученный из функции
       <function>sqlite_open</function> в случае использования
       процедурного подхода. Этот параметр не требуется при
       использовании объектно-ориентированного подхода.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       Имя функции, используемой в SQL-запросах.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Callback-функция, обрабатывающая указанную SQL-функцию.
      </para>
      <note>
       <simpara>
        Callback-функции должны возвращать тип, понятный SQLite (т.е.
        <link linkend="language.types.intro">скалярный</link>).
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>num_args</parameter></term>
     <listitem>
      <para>
       Подсказка парсеру SQLite, если callback-функция принимает
       известное количество аргументов.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &sqlite.param-compat;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>sqlite_create_function</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function md5_and_reverse($string) 
{
    return strrev(md5($string));
}

if ($dbhandle = sqlite_open('mysqlitedb', 0666, $sqliteerror)) {
    
    sqlite_create_function($dbhandle, 'md5rev', 'md5_and_reverse', 1);
    
    $sql  = 'SELECT md5rev(filename) FROM files';
    $rows = sqlite_array_query($dbhandle, $sql);
} else {
    echo 'Ошибка открытия базы sqlite: ' . $sqliteerror;
    exit;
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   В этом примере мы определяем функцию, которая вычисляет MD5-хэш строки, а
   затем обращает полученную строку. При выполнении SQL-запроса, значение поля
   filename преобразуется нашей функцией. Массив <parameter>$rows</parameter>
   содержит обработанный результат.
  </para>
  <para>
   Достоинство этой техники в том, что нет необходимости обрабатывать
   полученный результат в цикле.
  </para>
  <para>
   При открытии базы данных, регистрируется функция с именем
   <literal>php</literal>. Эта функция может быть использована для вызова
   любой функции PHP без регистрации.
  </para>
  <para>
   <example>
    <title>Пример использования функции php</title>
    <programlisting role="php">
<![CDATA[
<?php
$rows = sqlite_array_query($dbhandle, "SELECT php('md5', filename) from files");
?>
]]>
    </programlisting>
    <para>
     В этом примере, функция <function>md5</function> будет вызвана для поля
     <literal>filename</literal> в каждой записи.
    </para>
   </example>
  </para>
  <note>
   <para>
    Для повышения производительности, PHP не кодирует и не декодирует
    бинарные данные, передаваемые в UDF и возвращаемые из нее. Вы должны
    позаботиться о кодировании/раскодировании самостоятельно, если есть
    необходимость обрабатывать бинарные данные. Смотрите описания функций
    <function>sqlite_udf_encode_binary</function> и
    <function>sqlite_udf_decode_binary</function>.
   </para>
  </note>
  <tip>
   <para>
    Не рекомендуется использовать UDF для обработки бинарных данных, за
    исключением случаев, когда нет необходимости достичь высокого
    быстродействия.
   </para>
  </tip>
  <tip>
   <para>
    <function>sqlite_create_function</function> и
    <function>sqlite_create_aggregate</function> могут быть использованы для
    переопределения встроенных функций  SQLite.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_create_aggregate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
