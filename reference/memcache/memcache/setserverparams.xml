<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: lex Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="memcache.setserverparams" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::setServerParams</refname>
  <refpurpose>Изменяет параметры сервера и статус во время выполнения</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::setServerParams</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   <function>Memcache::setServerParams</function> изменяет параметры сервера во время выполнения.
   Вы также можете использовать функцию <function>memcache_set_server_params</function>.
  </para>
  
  <note>
   <para>
     Эта функцию была добавлена в Memcache версии 2.1.0.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Указывает на хост, на котором memcached прослушивает соединения.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Указывает на порт, на котором memcached прослушивает соединения.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Значение в секундах, которое будет использоваться для подключения к домену.
       Подумайте дважды, прежде чем менять значение по умолчанию в 1 секунду - 
       вы можете потерять все преимущества кеширования, если ваше соединение слишком
       медленное.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retry_interval</parameter></term>
     <listitem>
      <para>,
       Управляет, как часто будет происходить попытка подключения к отказавшему серверу,
       значение по умолчанию - 15 секунд.
       Установка этого параметра на -1 отключит автоматическое переподключение. 
       Ни этот параметр, ни параметр <parameter>persistent</parameter> не имеют действия,
       когда расширение загружено динамически через <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       Управляет, должен ли сервер помечен как онлайн. Установка этого параметра в
       &false;, а параметра <parameter>retry_interval</parameter> на -1, разрешает отказавшему 
       серверу храниться в пуле, чтобы не влиять на алгоритм распределения ключей.
       Запросы к этому серверу будут затем перенаправлены на другие сервера, либо
       сразу завершаться неудачей, в зависимости от настройки 
       <parameter>memcache.allow_failover</parameter>.
       Значение по умолчанию &true; означает, что сервер следует рассматривать как онлайн.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>failure_callback</parameter></term>
     <listitem>
      <para>
       Позволяет пользователю указать callback-функцию, вызываемую при обнаружении ошибки.
       Эта callback-функция запускается до попытки переключения на другие сервера (failover).
       Функция принимает два параметра - имя хоста и порт отказавшего сервера. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>Memcache::setServerParams</function></title>
    <programlisting role="php">
<![CDATA[
<?php

function _callback_memcache_failure($host, $port) {
    print "неудачное подключение memcache - '$host:$port'";
}

/* объектно-ориентированное API */

$memcache = new Memcache;

// Добавить сервер в офлайн-режим
$memcache->addServer('memcache_host', 11211, false, 1, 1, -1, false);

// Перевести сервер обратно в онлайн
$memcache->setServerParams('memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

/* процедурное API */

$memcache_obj = memcache_connect('memcache_host', 11211);
memcache_set_server_params($memcache_obj, 'memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::addServer</function></member>
    <member><function>Memcache::getServerStatus</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
