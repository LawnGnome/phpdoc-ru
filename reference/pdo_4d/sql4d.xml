<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 300101 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="ref.pdo-4d.sql4d" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQL, принимаемый 4D</refname>
  <refpurpose>PDO и SQL 4D</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   4D строго реализует стандарт ANSI 89 и соблюдает его.
   Крайне рекомендуется изучить документацию по 4D SQL
   перед его использованием. Документация расположена по ссылке
   <link xlink:href="&url.4d.doc;">&url.4d.doc;</link>.
   Ниже представлен список характеристик 4D SQL: он не полон, но
   может использоваться для составления общего представления.
  </para>
  <para>
   <table>
    <title>Характеристики 4D SQL</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Характеристики</entry>
       <entry>Альтернативы</entry>
       <entry>Примечания</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>INTEGER</entry>
       <entry>Модифицируйте SQL для использования INT.</entry>
       <entry>INT является поддерживаемым целочисленным типом в 4Dv12.0.</entry>
      </row>
      <row>
       <entry>CHAR</entry>
       <entry>Используйте VARCHAR.</entry>
       <entry>Не поддерживается в 4Dv12.0</entry>
      </row>
      <row>
       <entry>UNION</entry>
       <entry>Не поддерживается. Используйте несколько запросов.</entry>
       <entry>Не поддерживается в 4Dv12.0</entry>
      </row>
      <row>
       <entry>SELECT 1 + 1;</entry>
       <entry>SELECT 1 + 1 FROM _USER_SCHEMAS;</entry>
       <entry>FROM обязателен</entry>
      </row>
      <row>
       <entry>FLOAT</entry>
       <entry>Преобразуйте значения FLOAT или STRING с помощью функций SQL 4D  (CAST, ROUND, TRUNC или TRUNCATE)</entry>
       <entry>Не поддерживается в текущей версии драйвера PDO_4D</entry>
      </row>
      <row>
       <entry>Строгая типизация</entry>
       <entry>Убедитесь, что ваш запрос SQL или ваш код PHP задает данные того типа, который ожидается</entry>
       <entry>
        Другими словами, нельзя вставить значение '1' (как строку) в строку типа INTEGER.
       </entry>
      </row>
      <row>
       <entry><function>PDO::execute($row)</function>: работает только если все поля 
        таблицы имеют тип TEXT или VARCHAR</entry>
       <entry>Используйте подготовленные запросы и используйте корректные типы.</entry>
       <entry>Расширение PDO преобразует все значения переданные через execute() в строки и ожидает, что база данных воспримет их корректно.</entry>
      </row>
      <row>
       <entry>SELECT NULL FROM TABLE</entry>
       <entry>Не используйте константу NULL. Извлекайте ее из таблицы.</entry>
       <entry>Недопустимо использовать константу NULL в операторе SELECT</entry>
      </row>
      <row>
       <entry>SELECT * FROM TABLE WHERE 1</entry>
       <entry>Используйте WHERE 1 = 1</entry>
       <entry>В операторе WHERE недопустимо использовать константы</entry>
      </row>
      <row>
       <entry>SHOW TABLES</entry>
       <entry>Используйте системные таблицы</entry>
       <entry>
        Список таблиц, схемы, индексы и т.д. хранятся в следующих системных таблицах:
        <literal>_USER_TABLES</literal>,  <literal>_USER_COLUMNS</literal>,  
        <literal>_USER_INDEXES</literal>,  <literal>_USER_CONSTRAINTS</literal>,  
        <literal>_USER_IND_COLUMNS</literal>,  <literal>_USER_CONS_COLUMNS</literal>
        и <literal>_USER_SCHEMAS</literal>.
       </entry>
      </row>
      <row>
       <entry>Разделитель структуры SQL</entry>
       <entry>
        Используйте следующую функцию для защиты элементов SQL:
        function sqlEscapeElement(elem) {
        return '[' . str_replace(']',']]', $elem) . ']';
        }
       </entry>
       <entry>
        Для экранирования имен элементов SQL (таблиц, полей, пользователей, 
        групп, схем, первичных ключей и т.д.), поместите их в квадратные скобки, а
        закрывающие скобки должна быть задвоены.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

