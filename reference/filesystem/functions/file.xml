<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.16 Maintainer: tronic Status: ready -->
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry xml:id="function.file" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>file</refname> 
    <refpurpose>Читает содержимое файла и помещает его в массив</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>array</type><methodname>file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Данная функция идентична функций <function>readfile</function> с той разницей,
     что <function>file</function> возвращает содержимое прочитанного файла
     в виде массива. Каждый элемент возвращенного массива содержит соответствующую
     строку с символами конца строки. В случае ошибки, функция <function>file</function>
     возвращает &false;.
    </para>
    <para>
     Вы можете указать необязательный параметр <parameter>use_include_path</parameter>,
     равный "1", если хотите, чтобы поиск файла также производился в каталогах, указанных
     директивой <link linkend="ini.include-path">include_path</link>.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// Получить содержимое файла в виде массива. В данном примере мы используем
// обращение по протоколу HTTP для получения HTML-кода с удаленного сервера.
$lines = file('http://www.example.com/');

// Осуществим проход массива и выведем номера строк и их содержимое в виде HTML-кода.
foreach ($lines as $line_num => $line) {
    echo "Строка #<b>{$line_num}</b> : " . htmlspecialchars($line) . "<br />\n";
}

// Второй пример. Получим содержание web-страницы в виде одной строки.
// См.также описание функции file_get_contents().
$html = implode('', file ('http://www.example.com/'));
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    &tip.fopen-wrapper;
    <note>
     <para>
      Каждая строка в полученном массиве будет завершаться символами конца
      строки, поэтому, если вам будет нужно избавиться от этих символов, вы
      будете должны использовать функцию <function>rtrim</function>.
     </para>
    </note>
    &note.line-endings;
    <note>
     <para>
      Начиная с PHP 4.3.0, вы можете использовать функцию <function>file_get_contents</function>
      для получения содержимого файла в виде строки.
     </para>
     <para>
      Начиная с PHP 4.3.0, функция <function>file</function> корректно
      обрабатывает двоичные данные.
     </para>
    </note>
    &note.context-support;
    &warn.ssl-non-standard;
    <para> 
     См.также описания функций <function>readfile</function>,
     <function>fopen</function>, <function>fsockopen</function>, 
     <function>popen</function>, <function>file_get_contents</function>
     и <function>include</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
