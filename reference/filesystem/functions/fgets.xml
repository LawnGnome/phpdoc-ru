<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.13 Maintainer: tronic Status: ready -->
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry xml:id="function.fgets" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>fgets</refname>
    <refpurpose>Читает строку из файла</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>string</type><methodname>fgets</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <para>
     Возвращает строку размером в <parameter>length</parameter> - 1 байт, прочитанную
     из дескриптора файла, на который указывает параметр <parameter>handle</parameter>.
     Чтение заканчивается, когда количество прочитанных байтов достигает
     <parameter>length</parameter> - 1, по достижении конца строки
     (который включается в возвращаемое значение) или по достижении конца файла
     (что бы ни встретилось первым). Если длина не указана, по умолчанию ее 
     значение равно 1 килобайту или 1024 байтам.
    </para>
    <para>
     В случае возникновения ошибки функция возвращает &false;.
    </para>
    <para>
     Наиболее распространенные ошибки:
    </para>
    <simpara>
     Программисты, привыкшие к семантике 'C' функции <function>fgets</function>,
     должны принимать во внимание разницу в том, каким образом возвращается
     признак достижения конца файла (<literal>EOF</literal>).
    </simpara>
    
    &fs.validfp.all;

    <para>
     Ниже приведен простой пример:
     <example> 
      <title>Построчное чтение файла</title>
      <programlisting role="php">
<![CDATA[
<?php
$handle = fopen("/tmp/inputfile.txt", "r");
while (!feof($handle)) {
    $buffer = fgets($handle, 4096);
    echo $buffer;
}
fclose($handle);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      Параметр <parameter>length</parameter> стал необязательным, начиная
      с PHP версии 4.2.0. Если этот параметр опущен, длина строки принимается
      за 1024. С версии PHP 4.3, отсутствие параметра <parameter>length</parameter>
      будет приводить к чтению потока до конца строки. Если длина большинства строк
      в файле превышает 8 килобайт, наиболее эффективным решением в отношении
      ресурсов, используемых скриптом, будет указание максимальной длины строки.
     </simpara>
    </note>
    <note>
     <simpara>
      Данная функция может корректно обрабатывать двоичные данные, начиная
      с версии PHP 4.3. Более ранние версии не обладали этой функциональностью.
     </simpara>
    </note>
    &note.line-endings;
    <para> 
     См. также <function>fread</function>, 
     <function>fgetc</function>,
     <function>stream_get_line</function>,
     <function>fopen</function>,
     <function>popen</function>, 
     <function>fsockopen</function> и
     <function>stream_set_timeout</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
