<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.12 Maintainer: young Status: ready -->
<!-- splitted from ./en/functions/pcre.xml, last change in rev 1.2 -->
  <refentry id="function.preg-match">
   <refnamediv>
    <refname>preg_match</refname>
    <refpurpose>Выполняет проверку на соответствие регулярному выражению</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>int</type><methodname>preg_match</methodname>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>matches</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Ищет в заданном тексте <parameter>subject</parameter> совпадения
     с шаблоном <parameter>pattern</parameter>
    </para>
    <para>
     В случае, если дополнительный параметр <parameter>matches</parameter> указан,
     он будет заполнен результатами поиска. Элемент <varname>$matches[0]</varname> будет содержать
     часть строки, соответствующую вхождению всего шаблона, <varname>$matches[1]</varname> - часть строки,
     соответствующую первой подмаске, и так далее.
    </para>
    <para>
     <parameter>flags</parameter> может принимать следующие значения:
     <variablelist>
      <varlistentry>
       <term>PREG_OFFSET_CAPTURE</term>
       <listitem>
        <simpara>
		  В случае, если этот флаг указан, для каждой найденной подстроки будет указана
		  ее позиция в исходной строке. Необходимо помнить, что этот флаг меняет 
		  формат возвращаемых данных: каждое вхождение возвращается в виде массива,
		  в нулевом элементе которого содержится найденная подстрока, а в первом - смещение.
		  Данный флаг доступен в <literal>PHP</literal> 4.3.0 и выше.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Дополнительный параметр <parameter>flags</parameter> доступен начиная с 
     <literal>PHP</literal> 4.3.0.
    </para>

    <para>
     Поиск осуществляется слева направо, с начала строки. Дополнительный параметр
     <parameter>offset</parameter> может быть использован для указания альтернативной 
     начальной позиции для поиска. Аналогичного результата можно достичь, заменив 
     <parameter>subject</parameter> на <function>substr</function>($subject, $offset).
     Дополнительный параметр 
     <parameter>offset</parameter> доступен начиная с <literal>PHP</literal> 4.3.3.
    </para>

    <para>
     Функция <function>preg_match</function> возвращает количество найденных соответствий.
     Это может быть 0 (совпадения не найдены) и 1, поскольку <function>preg_match</function> прекращает
     свою работу после первого найденного совпадения. Если необходимо найти либо сосчитать все совпадения,
     следует воспользоваться функцией <function>preg_match_all</function>.
     Функция <function>preg_match</function> возвращает &false; в случае, если во время выполнения возникли какие-либо ошибки.
    </para>
    <tip>
     <para>
      Не используйте функцию <function>preg_match</function>, если необходимо проверить наличие подстроки в заданной строке.
      Используйте для этого <function>strpos</function> либо <function>strstr</function>, поскольку они 
      выполнят эту задачу гораздо быстрее.
     </para>
    </tip>
    <para>
     <example>
      <title>Поиск подстроки "php" в тексте</title>
      <programlisting role="php">
<![CDATA[
<?php
// Символ "i" после закрывающего ограничителя шаблона означает
// регистронезависимый поиск.
if (preg_match("/php/i", "PHP is the web scripting language of choice.")) {
    echo "Вхождение найдено.";
} else {
    echo "Вхождение не найдено.";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Поиск слова "web" в тексте</title>
      <programlisting role="php">
<![CDATA[
<?php
/* 
    Специальная последовательность \b в шаблоне означает границу слова,
    следовательно, только изолированное вхождение слова 'web' будет соответствовать
    маске, в отличие от "webbing" или "cobweb".
*/
if (preg_match("/\bweb\b/i", "PHP is the web scripting language of choice.")) {
    echo "Вхождение найдено.";
} else {
    echo "Вхождение не найдено.";
}

if (preg_match("/\bweb\b/i", "PHP is the website scripting language of choice.")) {
    echo "Вхождение найдено.";
} else {
    echo "Вхождение не найдено.";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Извлечение доменного имени из URL</title>
      <programlisting role="php">
<![CDATA[
<?php
// Извлекаем имя хоста из URL
preg_match("/^(http:\/\/)?([^\/]+)/i",
    "http://www.php.net/index.html", $matches);
$host = $matches[2];

// извлекаем две последние части имени хоста
preg_match("/[^\.\/]+\.[^\.\/]+$/", $host, $matches);
echo "domain name is: {$matches[0]}\n";
?>
]]>
      </programlisting>
      <para>
       Результат работы примера:
      </para>
      <screen>
<![CDATA[
domain name is: php.net
]]>
      </screen>
     </example>
    </para>
    <para>
     Смотрите также <function>preg_match_all</function>, 
     <function>preg_replace</function>, и
     <function>preg_split</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
