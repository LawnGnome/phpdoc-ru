<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.7 Maintainer: young Status: ready -->
<!-- splitted from ./en/functions/pcre.xml, last change in rev 1.2 -->
  <refentry id="function.preg-quote">
   <refnamediv>
    <refname>preg_quote</refname>
    <refpurpose>Экранирует символы в регулярных выражениях</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>string</type><methodname>preg_quote</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
     </methodsynopsis>
    <para>
     Функция <function>preg_quote</function> принимает строку <parameter>str</parameter>
     и добавляет обратный слеш перед каждым служебным символом.
     Это бывает полезно, если в составлении шаблона участвуют строковые переменные, 
     значение которых в процессе работы скрипта может меняться.
    </para>
    <para>
     В случае, если дополнительный параметр <parameter>delimiter</parameter> указан,
     он будет также экранироваться. Это удобно для экранирования ограничителя,
     который используется в PCRE функциях. Наиболее распространенным ограничителем
     является символ '/'.
     </para>
    <para>
     В регулярных выражениях служебными считаются следующие символы:
     <literal>. \\ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</literal>
    </para>
    <para>
     <example>
      <title><function>preg_quote</function> пример</title>
      <programlisting role="php">
<![CDATA[
<?php
$keywords = "$40 for a g3/400";
$keywords = preg_quote($keywords, "/");
echo $keywords; // возвращает \$40 for a g3\/400
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Выделение курсивом слова в тексте</title>
      <programlisting role="php">
<![CDATA[
<?php
// В данном примере preg_quote($word) используется, чтобы
// избежать трактовки символа '*' как спец. символа.

$textbody = "This book is *very* difficult to find.";
$word = "*very*";
$textbody = preg_replace ("/" . preg_quote($word) . "/",
                          "<i>" . $word . "</i>",
                          $textbody);
?>
]]>
      </programlisting>
     </example>
    </para>
	&note.bin-safe;
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
