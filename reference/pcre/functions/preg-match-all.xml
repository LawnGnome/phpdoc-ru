	<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.17 Maintainer: young Status: ready -->
<!-- splitted from ./en/functions/pcre.xml, last change in rev 1.2 -->
  <refentry id="function.preg-match-all">
   <refnamediv>
    <refname>preg_match_all</refname>
    <refpurpose>Выполняет глобальный поиск шаблона в строке</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>int</type><methodname>preg_match_all</methodname>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam><type>array</type><parameter>&amp;matches</parameter></methodparam>       <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
    Ищет в строке <parameter>subject</parameter> все совпадения с шаблоном
    <parameter>pattern</parameter> и помещает результат в массив
	<parameter>matches</parameter> в порядке, определяемом комбинацией флагов
     <parameter>flags</parameter>.
    </para>
    <para>
     После нахождения первого соответствия последующие поиски будут осуществляться
     не с начала строки, а от конца последнего найденного вхождения.
    </para>
    <para>
     Дополнительный параметр <parameter>flags</parameter> может комбинировать следующие значения
     (необходимо понимать, что использование <constant>PREG_PATTERN_ORDER</constant> одновременно с <constant>PREG_SET_ORDER</constant> бессмысленно):
     <variablelist>
      <varlistentry>
       <term>PREG_PATTERN_ORDER</term>
       <listitem>
        <para>
         Если этот флаг установлен, результат будет упорядочен следующим образом:
         элемент $matches[0]  содержит массив полных вхождений шаблона,
         элемент $matches[1] содержит массив вхождений первой подмаски, и так далее.
        </para>
        <para>
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U", 
    "<b>example: </b><div align=left>this is a test</div>", 
    $out, PREG_PATTERN_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
?>
]]>
          </programlisting>
          <para>
           Результат работы примера:
          </para>
          <screen role="html">
<![CDATA[
<b>example: </b>, <div align=left>this is a test</div>
example: , this is a test
]]>
          </screen>
          <para>
          Как мы видим, $out[0] содержит массив полных вхождений шаблона,
          а элемент $out[1] содержит массив подстрок, содержащихся в тегах.
          </para>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>PREG_SET_ORDER</term>
       <listitem>
        <para>
         Если этот флаг установлен, результат будет упорядочен следующим образом:
         элемент $matches[0] содержит первый набор вхождений, 
         элемент $matches[1] содержит второй набор вхождений, и так далее.
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U", 
    "<b>example: </b><div align=\"left\">this is a test</div>", 
    $out, PREG_SET_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
?>
]]>
          </programlisting>
          <para>
           Результат работы примера:
          </para>
          <screen role="html">
<![CDATA[
<b>example: </b>, example: 
<div align="left">this is a test</div>, this is a test
]]>
          </screen>
         </informalexample>
        </para>
        <para>
         В таком случае массив $matches[0] содержит первый набор вхождений, а именно:
         элемент $matches[0][0]  содержит первое вхождение всего шаблона,
         элемент $matches[0][1] содержит первое вхождение первой подмаски, и так далее.
         Аналогично массив $matches[1]  содержит второй набор вхождений, и так для каждого найденного набора. 
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>PREG_OFFSET_CAPTURE</term>
       <listitem>
        <para>
		  В случае, если этот флаг указан, для каждой найденной подстроки будет указана
		  ее позиция в исходной строке. Необходимо помнить, что этот флаг меняет 
		  формат возвращаемых данных: каждое вхождение возвращается в виде массива,
		  в нулевом элементе которого содержится найденная подстрока, а в первом - смещение.
		  Данный флаг доступен в PHP 4.3.0 и выше.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     В случае, если никакой флаг не используется, по умолчанию используется
     <constant>PREG_PATTERN_ORDER</constant>.
    </para>

    <para>
     Поиск осуществляется слева направо, с начала строки. Дополнительный параметр
     <parameter>offset</parameter> может быть использован для указания альтернативной 
     начальной позиции для поиска. Дополнительный параметр
     <parameter>offset</parameter> доступен, начиная с PHP 4.3.3.
    </para>
  <note> 
   <para> 
      Использование параметра <parameter>offset</parameter> не эквивалентно 
	  замене сопоставляемой строки выражением <literal>substr($subject, $offset)</literal>
	  при вызове функции <function>preg_match_all</function>, поскольку
	  шаблон <parameter>pattern</parameter> может содержать такие условия как
      <emphasis>^</emphasis>, <emphasis>$</emphasis> или <emphasis>(?&lt;=x)</emphasis>. 
	  Вы можете найти соответствующие примеры в описании функции <function>preg_match</function>. 
       </para> 
      </note> 
    

    <para>
    Возвращает количество найденных вхождений шаблона (может быть нулем) либо 
    &false;, если во время выполнения возникли какие-либо ошибки.
    </para>
    <para>
     <example>
      <title>Получение всех телефонных номеров из текста.</title>
      <programlisting role="php">
<![CDATA[
<?php
preg_match_all("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
                "Call 555-1212 or 1-800-555-1212", $phones);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Жадный поиск совпадений с HTML-тэгами</title>
      <programlisting role="php">
<![CDATA[
<?php
// Запись \\2 является примером использования ссылок на подмаски.
// Она означает необходимость соответствия подстроки строке, зафиксированной
// второй подмаской, в нашем примере это ([\w]+).
// Дополнительный слеш необходим, так как используются двойные кавычки.

$html = "<b>bold text</b><a href=howdy.html>click me</a>";

preg_match_all("/(<([\w]+)[^>]*>)(.*)(<\/\\2>)/", $html, $matches);

for ($i=0; $i< count($matches[0]); $i++) {
  echo "matched: " . $matches[0][$i] . "\n";
  echo "part 1: " . $matches[1][$i] . "\n";
  echo "part 2: " . $matches[3][$i] . "\n";
  echo "part 3: " . $matches[4][$i] . "\n\n";
}
?>
]]>
      </programlisting>
      <para>
           Результат работы примера:
      </para>
      <screen role="html">
<![CDATA[
matched: <b>bold text</b>
part 1: <b>
part 2: bold text
part 3: </b>

matched: <a href=howdy.html>click me</a>
part 1: <a href=howdy.html>
part 2: click me
part 3: </a>
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Смотрите также <function>preg_match</function>,
     <function>preg_replace</function>,
     и <function>preg_split</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
