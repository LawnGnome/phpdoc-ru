<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 317502 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xml:id="pdo.prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::prepare</refname>
  <refpurpose>
   Подготавливает запрос к выполнению и возвращает ассоциированный с этим запросом
   объект
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::prepare</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>

  <para>
   Подготавливает SQL запрос к базе данных к запуску посредством метода
   <function>PDOStatement::execute</function>. Запрос может содержать именованные
   (:name) или неименованные (?) псевдопеременные, которые будут заменены реальными
   значениями во время запуска запроса на выполнение. Использовать одновременно
   и именованные, и неименованные псевдопеременные в одном запросе нельзя,
   необходимо выбрать что-то одно. Используйте псевдопеременные, чтобы привязать
   к запросу пользовательский ввод, не включайте данные, введенные пользователем,
   напрямую в запрос.
  </para>
  <para>
   Вы должны подбирать уникальные имена псевдопеременных для каждого значение,
   которое необходимо передавать в запрос при вызове
   <function>PDOStatement::execute</function>. Нельзя использовать одну
   псевдопеременную в запросе дважды. Также нельзя к одной именованной
   псевдопеременной привязать несколько значений, как например, в выражении IN()
   SQL запроса.
  </para>
  <para>
   Вызов <function>PDO::prepare</function> и
   <function>PDOStatement::execute</function> для запросов, которые будут
   запускаться многократно с различными параметрами, повышает производительность
   приложения, так как позволяет драйверу кэшировать на клиенте и/или сервере
   план выполнения запроса и метаданные, а также помогает избежать SQL иньекций,
   так как нет необходимости экранировать передаваемые параметры.
  </para>
  <para>
   Если драйвер не поддерживает подготавливаемые запросы, PDO умеет их эмулировать.
   Также, PDO может заменять псевдопеременные на то, что больше подходит,
   если, например, драйвер поддерживает только именованные
   или, наоборот, только неименованные маркеры.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Это должен быть корректный запрос с точки зрения целевой СУБД.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driver_options</parameter></term>
     <listitem>
      <para>
       Этот массив содержит одну или более пар ключ=&gt;значение для установки
       значений атрибутов объекта PDOStatement, который будет возвращен из
       этого метода. В основном, вы будете использовать этот массив для присвоения
       значения <literal>PDO::ATTR_CURSOR</literal> атрибуту
       <literal>PDO::CURSOR_SCROLL</literal>, чтобы получить прокручиваемый курсор.
       У некоторых драйверов могут быть свои специфические настройки, которые
       можно задать во время подготовки запроса.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Если СУБД успешно подготовила запрос, 
   <function>PDO::prepare</function> возвращает объект 
   <classname>PDOStatement</classname>. Если подготовить запрос не удалось,
   <function>PDO::prepare</function> возвращает &false; или выбрасывает исключение
   <classname>PDOException</classname> (зависит от текущего режима <link
   linkend="pdo.error-handling">обработки ошибок</link>).
  </para>
  <note>
   <para>
    Эмулируемые подготовленные запросы не создаются на сервере баз данных,
    поэтому <function>PDO::prepare</function> не может проверить правильность
    построенного запроса.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Подготовка SQL запроса с именованными параметрами
    </title>
    <programlisting role="php">
<![CDATA[
<?php
/* Выполнение запроса с передачей ему массива параметров */
$sql = 'SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour';
$sth = $dbh->prepare($sql, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
$sth->execute(array(':calories' => 150, ':colour' => 'red'));
$red = $sth->fetchAll();
$sth->execute(array(':calories' => 175, ':colour' => 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Подготовка SQL запроса с неименованными параметрами (?)
    </title>
    <programlisting role="php">
<![CDATA[
<?php
/* Выполнение запроса с передачей ему массива параметров */
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->execute(array(150, 'red'));
$red = $sth->fetchAll();
$sth->execute(array(175, 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::query</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
