<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.oci-bind-by-name">
   <refnamediv>
    <refname>oci_bind_by_name</refname>
    <refpurpose>
     ѕрив€зывает переменную PHP к соответствующей метке в SQL-выражении.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>ќписание</title>
     <methodsynopsis>
      <type>bool</type><methodname>oci_bind_by_name</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>&amp;variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_bind_by_name</function> прив€зывает переменную
     <parameter>variable</parameter> к метке <parameter>ph_name</parameter>.
     Ѕудет ли она использоватьс€ дл€ вывода или ввода - вы€снитс€ в процессе
     выполнени€ и необходимые ресурсы будут выделены по необходимости.
     ѕараметр <parameter>length</parameter> устанавливает максимальный объем
     в байтах получаемой переменной. ≈сли параметр <parameter>length</parameter>
     равен -1, то  <function>oci_bind_by_name</function> будет использовать
     текущую длину <parameter>variable</parameter> как максимальную.
    </para>
    <para>
     ≈сли вы хотите прив€зать абстрактный тип данных (LOB/ROWID/BFILE), то
     вам необходимо сначала создать дескриптор с помощью 
     <function>oci_new_descriptor</function>. ѕараметр
     <parameter>length</parameter> не используетс€ с абстрактными типами
     данных и должен быть равен -1. ѕараметр <parameter>type</parameter> 
     говорит Oracle, какой тип дескриптора мы хотим использовать. ¬озможные
     значени€ этого параметра:
     <itemizedlist>
      <listitem>
       <para>
        <constant>OCI_B_FILE</constant> - дл€ BFILE;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_CFILE</constant> - дл€ CFILE;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_CLOB</constant> - дл€ CLOB;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_BLOB</constant> - дл€ BLOB;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_ROWID</constant> - дл€ ROWID;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_NTY</constant> - дл€ именованных типов данных;
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>OCI_B_CURSOR</constant> - дл€ курсоров, созданных ранее с
        помощью <function>oci_new_cursor</function>.
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>ѕример использовани€ <function>oci_bind_by_name</function></title>
      <programlisting role="php">
<![CDATA[
<?php
/* oci_bind_by_name example thies at thieso dot net (980221)
  inserts 3 records into emp, and uses the ROWID for updating the 
  records just after the insert.
*/

$conn = oci_connect("scott", "tiger");

$stmt = oci_parse($conn, "
                          INSERT INTO 
                                     emp (empno, ename) 
			       VALUES 
                                     (:empno,:ename) 
                            RETURNING 
                                     ROWID 
                                 INTO 
                                     :rid
                                         ");

$data = array(
              1111 => "Larry", 
              2222 => "Bill", 
              3333 => "Jim"
             );

$rowid = oci_new_descriptor($conn, OCI_D_ROWID);

oci_bind_by_name($stmt, ":empno", $empno, 32);
oci_bind_by_name($stmt, ":ename", $ename, 32);
oci_bind_by_name($stmt, ":rid",   $rowid, -1, OCI_B_ROWID);

$update = oci_parse($conn, "
                            UPDATE
                                  emp 
                               SET 
                                  sal = :sal 
                             WHERE 
                                  ROWID = :rid
                             ");
oci_bind_by_name($update, ":rid", $rowid, -1, OCI_B_ROWID);
oci_bind_by_name($update, ":sal", $sal,   32);

$sal = 10000;

while (list($empno, $ename) = each($data)) {
    oci_execute($stmt);
    oci_execute($update);
} 

$rowid->free();

oci_free_statement($update);
oci_free_statement($stmt);

$stmt = oci_parse($conn, "
                          SELECT 
                                * 
                            FROM 
                                emp 
                           WHERE 
                                empno 
                              IN 
                                (1111,2222,3333)
                              ");
oci_execute($stmt);
                              
while ($row = oci_fetch_assoc($stmt)) {
    var_dump($row);
}

oci_free_statement($stmt);

/* delete our "junk" from the emp table.... */
$stmt = oci_parse($conn, "
                          DELETE FROM
                                     emp 
                                WHERE 
                                     empno 
                                   IN 
                                     (1111,2222,3333)
                                   ");
oci_execute($stmt);
oci_free_statement($stmt);

oci_close($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     ѕомните о том, что при использовании этой функции, конечные пробелы у
     строки будут обрезаны. —мотрите следующий пример:
    </para>
    <para>
     <example>
      <title>ѕример <function>oci_bind_by_name</function></title>
      <programlisting role="php">
<![CDATA[
<?php
    $connection = oci_connect('apelsin','kanistra');
    $query = "INSERT INTO test_table VALUES(:id, :text)";

    $statement = oci_parse($query);
    oci_bind_by_name($statement, ":id", 1);
    oci_bind_by_name($statement, ":text", "trailing spaces follow     ");
    oci_execute($statement);
    /*
     Ётот код добавит в базу только строку 'trailing spaces follow', без
     пробелов в конце строки
    */
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>ѕример <function>oci_bind_by_name</function></title>
      <programlisting role="php">
<![CDATA[
<?php
    $connection = oci_connect('apelsin','kanistra');
    $query = "INSERT INTO test_table VALUES(:id, 'trailing spaces follow      ')";

    $statement = oci_parse($query);
    oci_bind_by_name($statement, ":id", 1);
    oci_execute($statement);
    /*
     ј этот код добавит в базу строку 'trailing spaces follow      ' вместе с
     пробелами в конце строки
    */
?>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      »спользовать <link
       linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
      <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link> или
      <function>addslashes</function> вместе с <function>oci_bind_by_name</function>
      - это определенно плоха€ иде€, т.к. в этих случа€х кавычки будут
      записаны в базу вместе с данными. <function>oci_bind_by_name</function>
      не может отличить "магические кавычки" от тех, что были добавлены
      намеренно.
     </para> 
    </warning>
    <para>
     &return.success;
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
