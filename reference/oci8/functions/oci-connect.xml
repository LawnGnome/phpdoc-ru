<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: shein Status: old -->
<!-- $Revision$ -->
  <refentry xml:id="function.oci-connect" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>oci_connect</refname>
    <refpurpose>Устанавливает соединение с сервером Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>resource</type><methodname>oci_connect</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_connect</function> возвращает идентификатор
     соединения, который используется большинством функций данного модуля.
     Необязательный третий параметр может содержать имя локального экземпляра
     Oracle или имя одной из записей в файле <filename>tnsnames.ora</filename>. 
     Если третий параметр не указан, PHP использует переменные окружения 
     <literal>ORACLE_SID</literal> и <literal>TWO_TASK</literal>, которые
     используются для определения имени локального экземпляра Oracle и
     местонахождения файла <filename>tnsnames.ora</filename> соответственно.
    </para>
    <note>
     <simpara>
      <function>oci_connect</function> <emphasis>не устанавливает</emphasis> 
      соединение повторно, если соединение с такими параметрами (логин, пароль,
      имя сервера) уже было установлено. Вместо этого, 
      <function>oci_connect</function> вернет идентификатор уже открытого
      соединения. Это означает, что вам не следует использовать 
      <function>oci_connect</function> для разделения нескольких транзакций.
      Если вы уверены, что хотите установить соединение с теми же параметрами
      заново, то вам следует использовать <function>oci_new_connect</function>.
     </simpara>
    </note>
    <para>
     Если вы используете сервер Oracle версии 9.2 и выше, то вы можете указать
     кодировку, которая будет использована в новом соединении. Кодировка
     указывается в параметре <parameter>charset</parameter>. Если же вы
     используете версии сервера Oracle младше 9.2, то этот параметр будет
     проигнорирован, а вместо него будет использована переменная окружения
     NLS_LANG.
    </para>
    <para>
     <example>
      <title>Пример использования <function>oci_connect</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo "<pre>";
$db = "";

$c1 = oci_connect("scott", "tiger", $db);
$c2 = oci_connect("scott", "tiger", $db);

function create_table($conn) 
{
  $stmt = oci_parse($conn, "create table scott.hallo (test varchar2(64))");
  oci_execute($stmt);
  echo $conn . " created table\n\n";
}

function drop_table($conn) 
{
  $stmt = oci_parse($conn, "drop table scott.hallo");
  oci_execute($stmt);
  echo $conn . " dropped table\n\n";
}

function insert_data($conn) 
{
  $stmt = oci_parse($conn, "insert into scott.hallo 
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " inserted hallo\n\n";
}

function delete_data($conn) 
{
  $stmt = oci_parse($conn, "delete from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " deleted hallo\n\n";
}

function commit($conn) 
{
  oci_commit($conn);
  echo $conn . " committed\n\n";
}

function rollback($conn) 
{
  oci_rollback($conn);
  echo $conn . " rollback\n\n";
}

function select_data($conn) 
{
  $stmt = oci_parse($conn, "select * from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn."----selecting\n\n";
  while (oci_fetch($stmt)) {
    echo $conn . " [" . oci_result($stmt, "TEST") . "]\n\n";
  }
  echo $conn . "----done\n\n";
}

create_table($c1);
insert_data($c1);   // Insert a row using c1
insert_data($c2);   // Insert a row using c2

select_data($c1);   // Results of both inserts are returned
select_data($c2);   

rollback($c1);      // Rollback using c1

select_data($c1);   // Both inserts have been rolled back
select_data($c2);   

insert_data($c2);   // Insert a row using c2
commit($c2);        // Commit using c2

select_data($c1);   // Result of c2 insert is returned

delete_data($c1);   // Delete all rows in table using c1
select_data($c1);   // No rows returned
select_data($c2);   // No rows returned
commit($c1);        // Commit using c1

select_data($c1);   // No rows returned
select_data($c2);   // No rows returned

drop_table($c1);
echo "</pre>";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     В случае ошибки <function>oci_connect</function> возвращает &false;.
    </para>
    <note>
     <para>
      В версиях PHP ниже 5.0.0 эта функция называлась <function>ocilogon</function>. 
      В PHP 5.0.0 и выше <function>ocilogon</function> является
      алиасом <function>oci_connect</function>, поэтому вы можете
      продолжать использовать это имя, однако это не рекомендуется.
     </para>
    </note>
    <simpara>
     См. также <function>oci_pconnect</function> и
     <function>oci_new_connect</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
