<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.oci-define-by-name">
   <refnamediv>
    <refname>oci_define_by_name</refname>
    <refpurpose>
     Определяет переменную PHP, в которую будет возвращено соответствующее поле
     из результата
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>bool</type><methodname>oci_define_by_name</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>column_name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>&amp;variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_define_by_name</function> назначает переменную PHP, которая
     будет использована, как получатель результата выполнения выборки.
    </para>
    <note>
     <simpara>
      Не забывайте о том, что Oracle всегда возвращает имена полей в 
      ВЕРХНЕМ регистре (если, конечно, вы не используете синтаксис 
      'SELECT field_name "field_name" FROM table_name').
      Поэтому <function>oci_define_by_name</function> обычно ожидает 
      параметр <parameter>column_name</parameter> в верхнем регистр. 
      Заметьте, что эта функция <emphasis>не возвратит</emphasis> ошибку, если
      соответствующее поле будет отсутствовать в результате выборки.
     </simpara>
    </note>
    <para>
     Если вам нужно назначить переменную абстрактного дипа данных 
     (LOB/ROWID/BFILE), то ее необходимо сначала создать с помощью 
     <function>oci_new_descriptor</function>. См. также
     <function>oci_bind_by_name</function>.
    </para>
     <example>
      <title>Пример использования <function>oci_define_by_name</function></title>
      <programlisting role="php">
<![CDATA[
<?php
/* oci_define_by_name example - thies at thieso dot net (980219) */

$conn = oci_connect("scott", "tiger");

$stmt = oci_parse($conn, "SELECT empno, ename FROM emp");

/* the define MUST be done BEFORE ociexecute! */

oci_define_by_name($stmt, "EMPNO", $empno);
oci_define_by_name($stmt, "ENAME", $ename);

oci_execute($stmt);

while (oci_fetch($stmt)) {
    echo "empno:" . $empno . "\n";
    echo "ename:" . $ename . "\n";
}

oci_free_statement($stmt);
oci_close($conn);
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
