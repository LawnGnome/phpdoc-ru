<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 335709 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>Устанавливает параметр для сеанса CURL</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>resource</type><parameter>ch</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Устанавливает параметр для указанного сеанса cURL.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       Устанавливаемый параметр <literal>CURLOPT_XXX</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Значение параметра <parameter>option</parameter>.
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть типа
       <type>bool</type>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">Параметр</entry>
           <entry valign="top">Устанавливаемое значение <parameter>value</parameter></entry>
           <entry valign="top">Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            &true; для автоматической установки поля <literal>Referer:</literal>
            в запросах, перенаправленных заголовком <literal>Location:</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_BINARYTRANSFER</constant></entry>
           <entry valign="top">
            &true; для возврата необработанного ответа при использовании
            константы <constant>CURLOPT_RETURNTRANSFER</constant>.
           </entry>
           <entry valign="top">
            С PHP 5.1.3 эта опция больше не требуется: необработанный вывод
            всегда возвращается при использовании опции <constant>CURLOPT_RETURNTRANSFER</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            &true; для указания текущему сеансу начать новую "сессию" cookies.
            Это заставит libcurl проигнорировать все "сессионные" cookies,
            которые она должна была бы загрузить, полученные из предыдущей
            сессии. По умолчанию, libcurl всегда сохраняет и загружает
            все cookies, вне зависимости от того, являются ли они "сессионными"
            или нет. "Сессионные" cookies - это cookies без срока истечения,
            которые должны существовать только для текущей "сессии".
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CERTINFO</constant></entry>
           <entry valign="top">
            &true; для вывода информации о сертификате SSL в поток <literal>STDERR</literal>
            при безопасных соединениях.
           </entry>
           <entry valign="top">
            Добавлена в cURL 7.19.1.
            Доступна, начиная с версии PHP 5.3.2. Для корректной работы требует
            включенной опции <constant>CURLOPT_VERBOSE</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_ONLY</constant></entry>
           <entry valign="top">
            &true; сообщает библиотеке, чтобы она провела необходимые аутентификацию прокси
            и настройку соединения, но не передавала данные. Эта опция реализована для 
            HTTP, SMTP и POP3.
           </entry>
           <entry valign="top">
            Добавлена в 7.15.2.
            Доступна с версии PHP 5.5.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            &true; для преобразования концов строк Unix в CRLF.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            &true; для использования глобального кэша DNS. Этот параметр не
            является потокобезопасным и по умолчанию включен.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            &true; для подробного отчета при неудаче, если полученный HTTP-код
            больше или равен 400. Поведение по умолчанию возвращает страницу
            как обычно, игнорируя код.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            &true; для попытки получения даты модификации удаленного
            документа. Это значение может быть получено с помощью
            параметра <parameter>CURLINFO_FILETIME</parameter> из
            функции <function>curl_getinfo</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            &true; для следования любому заголовку
            <literal>"Location: "</literal>, отправленному сервером в своем
            ответе (учтите, что это происходит рекурсивно, PHP будет следовать
            за всеми посылаемыми заголовками <literal>"Location: "</literal>,
            за исключением случая, когда установлена константа
            <constant>CURLOPT_MAXREDIRS</constant>).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            &true; для принудительного закрытия соединения после
            завершения его обработки так, чтобы его нельзя было использовать
            повторно.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            &true; для принудительного использования нового соединения
            вместо закэшированного.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            &true; для использования EPRT (и LPRT) при активных FTP
            загрузках. Используйте &false; для того, чтобы отключить EPRT и LPRT
            и использовать только PORT.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            &true; для первоначальной пробы команды EPSV при FTP
            передачах. Если команда не удалась, будет произведен обратный
            откат к PASV. Установите в &false; для отключения EPSV.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant></entry>
           <entry valign="top">
            &true; для создания отсутствующих директорий, если FTP-операция
            обнаруживает несуществующий путь.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            &true; для записи удаленного файла в конец, вместо
            перезаписывания его поверх существующего файла.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_NODELAY</constant></entry>
           <entry valign="top">
            Задает на постоянной основе должна ли опция TCP_NODELAY установлена или
            очищена (1 = установлена, 0 = очищена). По умолчанию опция очищается.
           </entry>
           <entry valign="top">
            Доступна с версии PHP 5.2.1 для версий собранных с libcurl 7.11.2 или новее.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            Псевдоним <constant>CURLOPT_TRANSFERTEXT</constant>.
            Используйте его вместо этого.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            &true; для возврата только списка имен из FTP директории.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            &true; для включения заголовков в вывод.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            &true; для отслеживания строки запроса дескриптора.
           </entry>
           <entry valign="top">
            Доступен, начиная с версии PHP 5.1.3. Префикс <constant>CURLINFO_</constant>
            употреблен специально.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            &true; для сброса метода HTTP-запроса в метод GET.
            Так как GET используется по умолчанию, этот параметр необходим только
            в случае, если метод запроса был ранее изменен.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            &true; для туннелирования через указанный HTTP-прокси.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            &true; для полного отключения сообщений функций cURL.
           </entry>
           <entry valign="top">
            Удалена в cURL 7.15.5 (Можно использовать опцию CURLOPT_RETURNTRANSFER)
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            &true; для считывания файла <filename>~/.netrc</filename>
            на предмет логина и пароля для удаленного сайта, с которым
            устанавливается соединение.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
            &true; для исключения тела ответа из вывода.
            Метод запроса устанавливается в HEAD. Смена этого параметра в &false;
            не меняет его обратно в GET.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top"><para>
            &true; для отмены индикатора прогресса при передачах cURL.
            <note>
             <para>
              PHP автоматически устанавливает этот параметр в &true;, меняйте
              его только для отладочных целей.
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            &true; для игнорирования любой функции cURL, посылающей сигналы
            PHP процессу. Этот параметр включен по умолчанию в многопоточных
            SAPIs для корректной работы таймаут параметров.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            &true; для использования обычного HTTP POST. Данный метод POST
            использует обычный <literal>application/x-www-form-urlencoded</literal>,
            обычно используемый в HTML-формах.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            &true; для загрузки файла методом HTTP PUT. Используемый файл
            должен быть установлен с помощью параметров
            <constant>CURLOPT_INFILE</constant> и
            <constant>CURLOPT_INFILESIZE</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            &true; для возврата результата передачи в качестве
            строки из <function>curl_exec</function> вместо прямого
            вывода в браузер.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SAFE_UPLOAD</constant></entry>
           <entry valign="top">
            &true; для отключения поддержки префикса <literal>@</literal> для
            загружаемых файлов в <constant>CURLOPT_POSTFIELDS</constant>, который
            означает, что значения, переданные с <literal>@</literal> могут безопасно
            передаваться в виде полей. Вместо префикса можно использовать опцию <classname>CURLFile</classname>d.
           </entry>
           <entry valign="top">
            Добавлена в PHP 5.5.0 со значением по умолчанию &false;. В PHP 5.6.0
            стала по умолчанию равна &true;.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; для остановки cURL от проверки сертификата узла сети.
            Альтернативные сверяемые сертификаты могут быть указаны с помощью
            параметра <constant>CURLOPT_CAINFO</constant> или директории с
            сертификатами, указываемой параметром <constant>CURLOPT_CAPATH</constant>.
           </entry>
           <entry valign="top">
            По умолчанию равно &true; начиная с версии cURL 7.10.
            Дистрибутив по умолчанию устанавливается начиная с версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            &true; для использования ASCII режима при FTP передачах.
            При использовании LDAP данные возвращаются простым
            текстом вместо HTML. В Windows системах поток <literal>STDOUT</literal>
            не устанавливается в бинарный режим.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
            &true; для продолжения посылки логина и пароля при редиректах
            (при использовании <constant>CURLOPT_FOLLOWLOCATION</constant>),
            даже при изменении имени хоста.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            &true; для подготовки к загрузке файла на сервер.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            &true; для вывода дополнительной информации. Записывает вывод в
            поток <literal>STDERR</literal>, или файл, указанный параметром
            <constant>CURLOPT_STDERR</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
      Для следующих значений параметра <parameter>option</parameter>,
      параметр <parameter>value</parameter> должен быть типа
      <type>integer</type>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
           <entry>Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            Размер буфера, используемого при каждом чтении. Однако, нет никакой
            гарантии что данный запрос будет завершен.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CLOSEPOLICY</constant></entry>
           <entry valign="top">
            Одна из констант <constant>CURLCLOSEPOLICY_*</constant>.
            <note>
             <para>
              Эта опция устарела, так как никогда не была реализована в cURL и 
              не работала.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Удалена в PHP 5.6.0.
           </entry>
          </row>
          <row>
           <entry><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            Количество секунд ожидания при попытке соединения. Используйте
            0 для бесконечного ожидания.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            Количество миллисекунд ожидания при попытке соединения. Используйте
            0 для бесконечного ожидания.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Если библиотека libcurl скомпилирована с использованием стандартного системного преобразователя имен, то
            соединение будет по-прежнему использовать полносекундное ожидание в качестве тайм-аута с
            минимально допустимым тайм-аутом в 1 секунду.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.16.2. Доступно, начиная с версии PHP 5.2.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            Количество секунд, в течение которых в памяти хранятся DNS-записи.
            По умолчанию этот параметр равен 120 (2 минуты).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            Метод FTP аутентификации (в активном режиме):
            <literal>CURLFTPAUTH_SSL</literal> (сначала проверяется SSL),
            <literal>CURLFTPAUTH_TLS</literal> (сначала проверяется TLS) или
            <literal>CURLFTPAUTH_DEFAULT</literal> (cURL решает сама).
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.12.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <parameter>CURL_HTTP_VERSION_NONE</parameter> (по умолчанию,
            CURL сама выбирает используемую версию),
            <parameter>CURL_HTTP_VERSION_1_0</parameter> (принудительное использование HTTP/1.0),
            or <parameter>CURL_HTTP_VERSION_1_1</parameter> (принудительное использование HTTP/1.1).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             Используемые HTTP методы авторизации. Используемые параметры:
             <parameter>CURLAUTH_BASIC</parameter>,
             <parameter>CURLAUTH_DIGEST</parameter>,
             <parameter>CURLAUTH_GSSNEGOTIATE</parameter>,
             <parameter>CURLAUTH_NTLM</parameter>,
             <parameter>CURLAUTH_ANY</parameter>, and
             <parameter>CURLAUTH_ANYSAFE</parameter>.
            </para>
            <para>
             Можно использовать побитовый оператор <literal>|</literal> (или)
             для комбинации нескольких методов вместе. В этом случае
             cURL опросит сервер на предмет поддерживаемых методов
             авторизации и выберет лучший из них.
            </para>
            <para>
             <parameter>CURLAUTH_ANY</parameter> - это псевдоним
             <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
            <para>
             <parameter>CURLAUTH_ANYSAFE</parameter> - это псевдоним
             <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            Ожидаемый размер файла, в байтах, при загрузке файла на удаленный сервер.
            Учтите, что использование этой опции не остановит дальнейшую
            посылку данных, превышающих это значение, так как посылаемые
            данные зависят от результата
            <constant>CURLOPT_READFUNCTION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            Верхний порог скорости передачи данных, в байтах в секунду.
            Проверка происходит в течение
            <constant>CURLOPT_LOW_SPEED_TIME</constant> секунд, после чего
            PHP считает передачу слишком медленной и прерывает ее.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            Максимальное количество секунд, в течение которых скорость передачи
            не должна превышать <constant>CURLOPT_LOW_SPEED_LIMIT</constant>, иначе
            PHP пометит передачу как слишком медленную и прекратит ее.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            Максимальное количество постоянных соединений.
            При достижении лимита для определения закрываемого соединения
            используется параметр <constant>CURLOPT_CLOSEPOLICY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            Максимальное количество принимаемых редиректов.
            Используйте этот параметр вместе с параметром
            <constant>CURLOPT_FOLLOWLOCATION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            Альтернативный порт соединения.
           </entry>
           <entry valign="top">
           </entry>
          </row>          
          <row>
           <entry valign="top"><constant>CURLOPT_POSTREDIR</constant></entry>
           <entry valign="top">
            Битовая маска, содержащая 1 (301 Moved Permanently), 2 (302 Found)
            и 4 (303 See Other), чтобы задавать должен ли метод 
            HTTP POST обрабатываться при включенной опции
            <constant>CURLOPT_FOLLOWLOCATION</constant>, если произошел
            указанный тип перенаправления.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.19.1. Доступно с PHP 5.3.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             Битовая маска из значений <constant>CURLPROTO_*</constant>.
             Данная маска ограничивает используемые libcurl протоколы.
             Это позволяет иметь libcurl, работающую с большим количеством
             протоколов, и ограничивать работу определенных передач только
             для некоторого их набора. По умолчанию, libcurl использует
             все поддерживаемые протоколы.
             Смотрите также параметр <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
            </para>
            <para>
             Корректные значения протоколов:
             <parameter>CURLPROTO_HTTP</parameter>,
             <parameter>CURLPROTO_HTTPS</parameter>,
             <parameter>CURLPROTO_FTP</parameter>,
             <parameter>CURLPROTO_FTPS</parameter>,
             <parameter>CURLPROTO_SCP</parameter>,
             <parameter>CURLPROTO_SFTP</parameter>,
             <parameter>CURLPROTO_TELNET</parameter>,
             <parameter>CURLPROTO_LDAP</parameter>,
             <parameter>CURLPROTO_LDAPS</parameter>,
             <parameter>CURLPROTO_DICT</parameter>,
             <parameter>CURLPROTO_FILE</parameter>,
             <parameter>CURLPROTO_TFTP</parameter>,
             <parameter>CURLPROTO_ALL</parameter>
            </para>
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            Методы авторизации HTTP, используемые при соединении с
            прокси-сервером. Используйте те же самые битовые маски,
            которые были описаны у параметра
            <constant>CURLOPT_HTTPAUTH</constant>.
            В данный момент для авторизации прокси поддерживаются только
            <parameter>CURLAUTH_BASIC</parameter> и
            <parameter>CURLAUTH_NTLM</parameter>.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            Номер порта прокси-сервера, к которому осуществляется
            соединение. Этот номер также может быть установлен
            с помощью параметра <constant>CURLOPT_PROXY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            Либо <parameter>CURLPROXY_HTTP</parameter> (по умолчанию), либо
            <parameter>CURLPROXY_SOCKS5</parameter>.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
            Битовая маска из значений <constant>CURLPROTO_*</constant>.
            Данная битовая масска ограничивает протоколы используемые
            libcurl при редиректе (при включенном параметре
            <constant>CURLOPT_FOLLOWLOCATION</constant>).
            Это позволяет ограничить набор используемых протоколов
            при редиректах для некоторых передач.
            По умолчанию, libcurl поддерживает все протоколы, кроме
            FILE и SCP. В версиях, предшествовавших 7.19.4,
            перенаправление использовалось для всех протоколов
            без исключения.
            Смотрите также описание параметра
            <constant>CURLOPT_PROTOCOLS</constant> для списка констант
            со значениями протоколов.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            Смещение начала передачи, в байтах.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            Используйте 1 для проверки существования общего имени в сертификате
            SSL. Используйте 2 для проверки существования общего
            имени и также его совпадения с указанным хостом. В боевом окружении
            значение этого параметра должно быть 2 (установлено по умолчанию).
           </entry>
           <entry valign="top">
            Поддержка значения 1 убрана в cURL 7.28.1
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            Одна из констант <constant>CURL_SSLVERSION_DEFAULT</constant> (0),
            <constant>CURL_SSLVERSION_TLSv1</constant> (1),
            <constant>CURL_SSLVERSION_SSLv2</constant> (2),
            <constant>CURL_SSLVERSION_SSLv3</constant> (3),
            <constant>CURL_SSLVERSION_TLSv1_0</constant> (4),
            <constant>CURL_SSLVERSION_TLSv1_1</constant> (5) или
            <constant>CURL_SSLVERSION_TLSv1_2</constant> (6).
            <note>
             <para>
              Рекомендуется не устанавливать эту опцию и оставить значение по умолчанию.              
              Установка в 2 или 3 опасно и допускает применение известных уязвимостей в SSLv2 и SSLv3.
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            Способ трактовки параметра <constant>CURLOPT_TIMEVALUE</constant>.
            Используйте <parameter>CURL_TIMECOND_IFMODSINCE</parameter> для
            возвращения страницы, только если она была изменена со времени,
            указанного в параметре <constant>CURLOPT_TIMEVALUE</constant>.
            Если страница не была изменена, вернется заголовок
            <literal>"304 Not Modified"</literal>, подразумевая, что
            параметр<constant>CURLOPT_HEADER</constant> установлен в &true;.
            Используйте <parameter>CURL_TIMECOND_IFUNMODSINCE</parameter>
            для обратного эффекта. По умолчанию используется
            <parameter>CURL_TIMECOND_IFMODSINCE</parameter>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            Максимально позволенное количество секунд для выполнения
            cURL-функций.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Максимально позволенное количество миллисекунд для выполнения
            cURL-функций.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Если libcurl собрана с использованием обычного системного
            распознавателя имен, то этот промежуток соединения все еще
            будет использовать секундное округление таймаутов,
            с минимально разрешенным таймаутом в одну секунду.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.16.2. Доступен, начиная с версии PHP 5.2.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            Количество секунд, начиная с 1 января 1970 года. Это время
            будет использовано параметром
            <constant>CURLOPT_TIMECONDITION</constant>. По умолчанию,
            используется параметр
            <parameter>CURL_TIMECOND_IFMODSINCE</parameter>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Если скорость скачки превысит это значение (указанное в байтах
            в секунду) в среднем в течение всей передачи, то скачка будет
            приостановлена для поддержания средней скорости меньше либо равной
            данному параметру. По умолчанию скорость не ограничивается.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.15.5. Доступен, начиная с версии PHP 5.4.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Если загрузка на сервер превысит это значение (указанное в байтах
            в секунду) в среднем в течение всей передачи, то загрузка будет
            приостановлена для поддержания средней скорости меньше либо равной
            данному параметру. По умолчанию скорость не ограничивается.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.15.5. Доступен, начиная с версии PHP 5.4.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_AUTH_TYPES</constant></entry>
           <entry valign="top">
            Битовая маска, состоящая из одной или более констант:
            <constant>CURLSSH_AUTH_PUBLICKEY</constant>, 
            <constant>CURLSSH_AUTH_PASSWORD</constant>, 
            <constant>CURLSSH_AUTH_HOST</constant>, 
            <constant>CURLSSH_AUTH_KEYBOARD</constant>. Установите
            <constant>CURLSSH_AUTH_ANY</constant> для того, чтобы libcurl выбрал одну из них самостоятельно.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1. 
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_IPRESOLVE</constant></entry>
           <entry valign="top">
            Позволяет приложению выбрать вид IP адреса, с которым определяется имя хоста. 
            Это необходимо, если используется имя хоста, которое получается с использованием 
            более одной версии IP адреса. Возможными значениями могут быть
            <constant>CURL_IPRESOLVE_WHATEVER</constant>, 
            <constant>CURL_IPRESOLVE_V4</constant>, 
            <constant>CURL_IPRESOLVE_V6</constant>, и по умолчанию
            <constant>CURL_IPRESOLVE_WHATEVER</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.10.8.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть типа
       <type>string</type>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
           <entry>Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            Имя файла, содержащего один или более сертификатов, с которыми
            будут сверяться узлы. Этот параметр имеет смысл только при
            использовании совместно с <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
            Требует абсолютный путь.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            Директория, содержащая несколько CA сертификатов.
            Используйте этот параметр совместно с
            <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"Cookie: "</literal>,
            используемого в HTTP-запросе.
            Обратите внимание, что несколько cookies разделяются
            точкой с запятой с последующим пробелом
            (например, "<literal>fruit=apple; colour=red</literal>")
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            Имя файла, содержащего cookies. Данный файл должен быть
            в формате Netscape или просто заголовками HTTP, записанными
            в файл.
            Если в качестве имени файла передана пустая строка, то cookies
            сохраняться не будут, но их обработка все еще будет включена.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            Имя файла, в котором будут сохранены все внутренние cookies
            текущей передачи после закрытия дескриптора, например,
            после вызова curl_close.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top"><para>
            Собственный метод запроса, используемый вместо
            <literal>"GET"</literal> или <literal>"HEAD"</literal>
            при выполнении HTTP-запроса. Это полезно при запросах
            <literal>"DELETE"</literal> или других, более редких HTTP-запросах.
            Корректными значениями будут слова наподобие <literal>"GET"</literal>,
            <literal>"POST"</literal>, <literal>"CONNECT"</literal> и так далее;
            т.е. не вводите здесь всю строку с HTTP-запросом. Например,
            указание <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
            будет неправильным.
            <note>
             <para>
              Не используйте эту возможность пока не убедитесь, что
              сервер поддерживает данный тип запроса.
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            Наподобие <constant>CURLOPT_RANDOM_FILE</constant>, за исключением
            того, что имя файла устанавливается в сокет Entropy
            Gathering Daemon.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"Accept-Encoding: "</literal>.
            Это позволяет декодировать запрос. Поддерживаемыми
            кодировками являются <literal>"identity"</literal>,
            <literal>"deflate"</literal> и <literal>"gzip"</literal>.
            Если передана пустая строка, <literal>""</literal>,
            посылается заголовок, содержащий все поддерживаемые
            типы кодировок.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            Значение, которое будет использоваться для определения
            IP-адреса для команды "PORT" FTP-протокола. Команда "PORT"
            сообщает серверу, с каким IP-адресом он должен устанавливать
            соединение. Это может быть IP-адрес, имя хоста, имя сетевого
            интерфейса (под Unix), или просто '-' для использования системного
            IP-адреса по умолчанию.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            Имя используемого сетевого интерфейса. Может быть
            именем интерфейса, IP адресом или именем хоста.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEYPASSWD</constant></entry>
           <entry valign="top">
            Пароль, который требуется для использования приватного ключа <constant>CURLOPT_SSLKEY</constant> 
            или <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>. 
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1. 
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            Уровень безопасности KRB4 (Kerberos 4). Любое из следующих
            значений (в порядке от слабого к самому сильному) корректно:
            <literal>"clear"</literal>,
            <literal>"safe"</literal>,
            <literal>"confidential"</literal>,
            <literal>"private".</literal>.
            Если указанная строка отличается от данных значений,
            будет использовано значение <literal>"private"</literal>.
            Установка этого параметра в &null; полностью отключит
            безопасность KRB4. На данный момент безопасность KRB4
            работает только с FTP транзакциями.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            <simpara>
             Все данные, передаваемые в HTTP POST-запросе.
             Для передачи файла, укажите перед именем файла <literal>@</literal>, а
             также используйте полный путь к файлу. Тип файла также может
             быть указан с помощью формата '<literal>;type=mimetype</literal>',
             следующим за именем файла. Этот параметр может быть передан
             как в качестве url-закодированной строки, наподобие
             '<literal>para1=val1&amp;para2=val2&amp;...</literal>', так и
             в виде массива, ключами которого будут имена полей, а значениями
             - их содержимое.
             Если <parameter>value</parameter> является массивом,
             заголовок <literal>Content-Type</literal> будет установлен в
             значение <literal>multipart/form-data</literal>.
            </simpara>
            <simpara>
             Начиная с версии PHP 5.2.0, при передаче файлов с префиксом
             <literal>@</literal>, <parameter>value</parameter> должен быть
             массивом.
            </simpara>
            <simpara>
             С версии PHP 5.5.0, префикс <literal>@</literal> устарел и 
             файлы можно отправлять с помощью <classname>CURLFile</classname>.  
             Префикс <literal>@</literal> можно отключить, чтобы можно
             было передавать значения, начинающиеся с <literal>@</literal>,
             задав опцию <constant>CURLOPT_SAFE_UPLOAD</constant> в значение &true;.
            </simpara>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            HTTP-прокси, через который будут направляться запросы.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
            Логин и пароль, записанные в виде
            <literal>"[username]:[password]"</literal>, используемые при
            соединении через прокси.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            Имя файла, используемого для инициализации генератора
            случайных чисел для SSL.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            Диапазон данных, которые нужно загрузить, в формате
            <literal>"X-Y"</literal>, причем либо X, либо Y могут быть
            опущены. Протокол HTTP также поддерживает передачу
            нескольких диапазонов, разделенных запятыми, они задаются
            в формате <literal>"X-Y,N-M"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"Referer: "</literal>, который будет
            использован в HTTP-запросе.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant></entry>
           <entry valign="top">
            Строка, содержащая 32 шестнадцатеричных цифры. Строка должна являться
            контрольной суммой по алгоритму MD5 публичного ключа удаленного компьютера и libcurl будет сбрасывать
            соединение к удаленному хосту до тех пор, пока контрольная сумма не будет соответствовать публичному ключу.
            Эта опция предназначена только для передачи данных с помощью SCP и SFTP.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.17.1. 
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant></entry>
           <entry valign="top">
            Имя файла для вашего публичного ключа. Если не задано, то libcurl использует по
            умолчанию файл $HOME/.ssh/id_dsa.pub, если переменная окружения HOME установлена и
            файл "id_dsa.pub" в текущей директории, если переменная HOME не установлена.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1. 
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant></entry>
           <entry valign="top">
            Имя файла для вашего приватного ключа. Если не задано, то libcurl использует по
            умолчанию файл $HOME/.ssh/id_dsa, если переменная окружения HOME установлена и
            файл "id_dsa" в текущей директории, если переменная HOME не установлена.
            Если файл защищен паролем, установите пароль с помощью
            <constant>CURLOPT_KEYPASSWD</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1. 
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            Список шифров, используемый в SSL-передачах. Например,
            <literal>RC4-SHA</literal> и <literal>TLSv1</literal> являются
            корректными списками шифров.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            Имя файла с корректно отформатированным PEM-сертификатом.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            Пароль, необходимый для использования сертификата
            <constant>CURLOPT_SSLCERT</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            Формат сертификата. Поддерживаются форматы
            <literal>"PEM"</literal> (по умолчанию), <literal>"DER"</literal>
            и <literal>"ENG"</literal>.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.9.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            Идентификатор механизма шифрования для закрытого ключа SSL,
            указанного в параметре <constant>CURLOPT_SSLKEY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            Идентификатор механизма шифрования, используемого для
            ассиметричных операций шифрования.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            Имя файла с закрытым ключом SSL.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top"><para>
            Тайный пароль, необходимый для использования закрытого
            ключа SSL, указанного параметром
            <constant>CURLOPT_SSLKEY</constant>.
            <note>
             <para>
              Так как этот параметр содержит ценный пароль, помните,
              что данный PHP-скрипт нужно хранить в безопасном месте.
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            Тип закрытого ключа SSL, указанного в параметре
            <constant>CURLOPT_SSLKEY</constant>. Поддерживаются следующие
            типы ключей:
            <literal>"PEM"</literal> (по умолчанию), <literal>"DER"</literal>
            и <literal>"ENG"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            Загружаемый URL. Данный параметр может быть также установлен
            при инициализации сеанса с помощью <function>curl_init</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"User-Agent: "</literal>, посылаемого
            в HTTP-запросе.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            Логин и пароль, используемые при соединении,
            указанные в формате
            <literal>"[username]:[password]"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть массивом:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
           <entry>Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            Массив HTTP 200 ответов, которые будут трактоваться
            корректными ответами, а не ошибочными.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            Массив устанавливаемых HTTP-заголовков, в формате
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            Массив FTP-команд, выполняемых на сервере, после выполнения
            FTP-запроса.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            Массив FTP-команд, выполняемых на сервере, перед выполнением
            FTP-запроса.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть потоковым
       дескриптором (возвращаемым, например, функцией <function>fopen</function>):
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            Файл, в который будет записан результат передачи. По умолчанию
            используется поток вывода <literal>STDOUT</literal> (окно браузера).
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            Файл, из которого должно идти чтение данных, при загрузке на сервер.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            Альтернативное файл для вывода ошибок, используемый вместо потока ошибок
            <literal>STDERR</literal>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            Файл, в который будут записаны заголовки текущей операции.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть правильным именем функции
       или замыканием:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает два параметра.
            Первым параметром является дескриптор cURL, вторым параметром
            является строка с записываемыми заголовками. Заголовки должны
            быть записаны с помощью данной callback-функции. Должна возвратить
            количество записанных байт.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает три параметра.
            Первым параметром является дескриптор cURL, вторым параметром
            является строка с запросом пароля, третьим параметром является
            максимальная длина пароля. Должна возвратить строку, содержащую пароль.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            <para>
             Callback-функция принимает пять параметров.
             Первый является декскриптором cURL, второй - общим количеством байт,
             которое ожидается загрузить с сервера, третий - количество уже загруженных байт,
             четвертый - общее количество байт, которое ожидается отправить на сервер,
             и пятый - количество уже отправленных байт.
            </para>
            <note>
             <para>
              Callback-функция вызывается только, если опция <constant>CURLOPT_NOPROGRESS</constant>
              установлена в значение &false;.
             </para>
            </note>
            <para>
             Можно вернуть ненулевое значение, чтобы отменить передачу.
             В этом случае будет выставлена ошибка <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
            </para>
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает три параметра.
            Первым параметром является дескриптор cURL,
            вторым параметром является ресурс потока, переданный
            cURL через опцию <constant>CURLOPT_INFILE</constant>,
            а третьим параметром является максимально разрешенное
            количество данных для чтения.
            Callback-функция должна возвратить строку, с длиной
            не превышающей запрошенного количества данных, обычно
            с помощью чтения из переданного потокового ресурса.
            Должна возвратить пустую строку для сигнала о конце файла
            <literal>EOF</literal>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает два параметра.
            Первым параметром является дескриптор cURL, а
            вторым параметром является строка с записываемыми данными.
            Данные должны быть сохранены с помощью данной функции.
            Она должна возвратить точное количество записанных байт, иначе
            закачка будет прервана с ошибкой.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Другие значения:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_SHARE</constant></entry>
           <entry valign="top">
            Результат выполнения функции <function>curl_share_init</function>.
            Позволяет обработчику cURL использовать данные из общего обработчика.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Опция <constant>CURL_SAFE_UPLOAD</constant> теперь имеет значение по умолчанию равное &true;.
       </entry>
      </row>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Удалена опция <constant>CURLOPT_CLOSEPOLICY</constant> и связанные с ней значения.
       </entry>
      </row>
      <row>
       <entry>5.5.0</entry>
       <entry>
        Ресурс cURL добавлен первым аргументом в callback-функцию
        <constant>CURLOPT_PROGRESSFUNCTION</constant>.
       </entry>
      </row>
      <row>
       <entry>5.5.0</entry>
       <entry>
        Добавлена опция <constant>CURLOPT_SHARE</constant>.
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Добавлена опция <constant>CURLOPT_PROGRESSFUNCTION</constant>.
       </entry>
      </row>
      <row>
       <entry>5.2.10</entry>
       <entry>
        Добавлены параметры <constant>CURLOPT_PROTOCOLS</constant> и
        <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Добавлены параметры <constant>CURLOPT_AUTOREFERER</constant>,
        <constant>CURLOPT_BINARYTRANSFER</constant>,
        <constant>CURLOPT_FTPSSLAUTH</constant>,
        <constant>CURLOPT_PROXYAUTH</constant> и
        <constant>CURLOPT_TIMECONDITION</constant>.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Добавлены параметры <constant>CURLOPT_FTP_USE_EPRT</constant>,
        <constant>CURLOPT_NOSIGNAL</constant>,
        <constant>CURLOPT_UNRESTRICTED_AUTH</constant>,
        <constant>CURLOPT_BUFFERSIZE</constant>,
        <constant>CURLOPT_HTTPAUTH</constant>,
        <constant>CURLOPT_PROXYPORT</constant>,
        <constant>CURLOPT_PROXYTYPE</constant>,
        <constant>CURLOPT_SSLCERTTYPE</constant> и
        <constant>CURLOPT_HTTP200ALIASES</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Инициализация сеанса CURL и загрузка web-страницы</title>
    <programlisting role="php">
<![CDATA[
<?php
// создание нового ресурса cURL
$ch = curl_init();

// установка URL и других необходимых параметров
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// загрузка страницы и выдача её браузеру
curl_exec($ch);

// завершение сеанса и освобождение ресурсов
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Закачка файла</title>
    <programlisting role="php">
<![CDATA[
<?php

/* http://localhost/upload.php:
print_r($_POST);
print_r($_FILES);
*/

$ch = curl_init();

$data = array('name' => 'Foo', 'file' => '@/home/user/test.png');

curl_setopt($ch, CURLOPT_URL, 'http://localhost/upload.php');
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

curl_exec($ch);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [name] => Foo
)
Array
(
    [file] => Array
        (
            [name] => test.png
            [type] => image/png
            [tmp_name] => /tmp/phpcpjNeQ
            [error] => 0
            [size] => 279
        )

)

]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Передача массива в <constant>CURLOPT_POSTFIELDS</constant>
    закодирует данные в виде <emphasis>multipart/form-data</emphasis>,
    тогда как передача URL-кодированной строки закодирует данные в виде
    <emphasis>application/x-www-form-urlencoded</emphasis>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
