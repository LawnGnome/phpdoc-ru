<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 329132 Maintainer: bfl Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Распаковывает данные из бинарной строки</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Распаковывает данные из бинарной строки в массив согласно заданному в
   <parameter>format</parameter> формату. 
  </para>
  <para>
   Распакованные данные хранятся в ассоциативном массиве. Для осуществления
   этого необходимо обозначить различные коды форматов и разделить их с 
   помощью слэш /. Можно также передать замещающий аргумент, с помощью
   которого каждый ключ массива будет иметь порядковый номер после
   обозначенного имени ключа.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       См. функцию <function>pack</function> для разъяснения кодов форматов.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Упакованные данные.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает ассоциативный массив, содержащий распакованные элементы
   бинарной строки.
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.5.0</entry>
       <entry>
        <para>
         Для поддержания совместимости с Perl сделано следующее:
        </para>
        <para>
         Код "a" теперь сохраняет завершающие NULL байты.
        </para>
        <para>
         Код "A" теперь удаляет все завершающие ASCII пробельные символы (пробелы, табуляцию,
         переносы строк, возврат каретки, и NULL байты).
        </para>
        <para>
         Код "Z" добавлен для NULL-дополненными строками, и удаляет завершающие
         NULL байты.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>unpack</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("cchars/nint", $binarydata);
?>
]]>
    </programlisting>
    <para>
     Результирующий массив будет содержать записи "chars" со значением
     <literal>4</literal> и "int" с <literal>160</literal>.
    </para>
   </example>
  </para>

  <para>
   <example>
    <title>Пример использования <function>unpack</function> с замещающим аргументом</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("c2chars/nint", $binarydata);
?>
]]>
    </programlisting>
     <para>
     Результирующий массив будет содержать записи "chars1",
     "chars2" и "int".
    </para>
    </example>
   </para>
  </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Необходимо отметить, что PHP хранит значения как signed. Если 
    распаковать large unsigned long и оно будет иметь тот же размер,
    что и хранимое PHP значение, то результатом будет отрицательное число,
    даже если было указано распаковывать как unsigned.
   </para>
  </caution>
  <caution>
   <para>
    Если не обозначить элемент, то используется пустая строка.
    Если не обозначить более чем один элемент, то это значит, что некоторые
    данные будут перезаписаны, как например в:
   </para>
   <para>
    <example>
     <title>Пример использования <function>unpack</function> с безымянными ключами</title>
     <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x32\x42\x00\xa0";
$array = unpack("c2/n", $binarydata);
var_dump($array);
?>
]]>
     </programlisting>
     <para>
      Результирующий массив будет содержать записи "1" со значением
      <literal>160</literal> и "2" с <literal>66</literal>. Первое
      значение из спецификатора <literal>c</literal> будет перезаписано 
      первым значением из спецификатора <literal>n</literal>.
     </para>
    </example>
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
