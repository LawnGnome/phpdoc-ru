<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: bfl Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.ignore-user-abort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ignore_user_abort</refname>
  <refpurpose>Устанавливает, необходимо ли прерывать работу скрипта при отключении клиента</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ignore_user_abort</methodname>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Устанавливает, необходимо ли прерывать работу скрипта при отключении клиента.
  </para>
  <para>
   При работе с PHP скриптом в командной строке, когда терминал скрипта
   отключается без прерывания работы скрипта, скрипт будет остановлен,
   если параметр <parameter>value</parameter> не равен &true;
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Если параметр задан, то функция устанавливает заданный параметр
       <parameter>value</parameter> функции <link
       linkend="ini.ignore-user-abort">ignore_user_abort</link> в ini настройку.
       Если же параметр не задано, то функция вернут предыдущее значение без его
       изменения.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает предыдущее значение в виде целого числа.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>ignore_user_abort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Игнорирует отключение пользователя и позволяет скрипту
// быть запущенным постоянно
ignore_user_abort(true);
set_time_limit(0);

echo 'Тестирование управления соединением PHP';

// Запуск бесконечного цикла,
// который будет завершен при выходе со страницы
// либо при нажатии кнопки "Stop".
while(1)
{
    // Завершено ли соединение?
    if(connection_status() != CONNECTION_NORMAL)
    {
        break;
    }

    // Пауза на 10 секунд
    sleep(10);
}

// Если скрипт достиг этой строки, то была
// выполнена функция 'break' из цикла while

// Здесь можно производить журналирование, либо
// выполнять другие необходимые операции независимо
// от браузера.
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   PHP не сможет определить обрыв пользователем соединения пока не будет
   произведена попытка отправки информации клиенту. Простое использование
   выражения echo не гарантирует отправку информации, см. функцию 
   <function>flush</function>.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>connection_aborted</function></member>
    <member><function>connection_status</function></member>
    <member>
     См. <link linkend="features.connection-handling">Управление Соединением</link>
     для получения более детальной информации по управлению соединениями в PHP.
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
