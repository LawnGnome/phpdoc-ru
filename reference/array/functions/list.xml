<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.12  Maintainer: sveta Status: ready -->
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.2 -->
  <refentry xml:id="function.list" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>list</refname>
    <refpurpose>
     Присвоить переменным из списка значения подобно массиву
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>void</type><methodname>list</methodname>
      <methodparam><type>mixed</type><parameter>varname</parameter></methodparam>
      <methodparam rep="repeat"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Подобно <function>array</function>, это не функция,
     а языковая конструкция.  <function>list</function> используется
     для того, чтобы присвоить списку переменных значения за одну операцию.
    </para>
    <note>
     <para>
      <function>list</function> работает только с массивами, индексами
      которых являются числа и нумерация которых начинается с 0.
     </para>
    </note>
    <para>
     <example>
      <title>Примеры использования <function>list</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$info = array('coffee', 'brown', 'caffeine');

// Составить список всех переменных
list($drink, $color, $power) = $info;
echo "$drink is $color and $power makes it special.
";

// Составить список только некоторых из них
list($drink, , $power) = $info;
echo "$drink has $power.
";

// Или только третья
list( , , $power) = $info;
echo "I need $power!
";

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Пример использования <function>list</function></title>     
      <programlisting role="php">
<![CDATA[
<table>
 <tr>
  <th>Employee name</th>
  <th>Salary</th>
 </tr>

<?php

$result = mysql_query("SELECT id, name, salary FROM employees", $conn);
while (list($id, $name, $salary) = mysql_fetch_row($result)) {
    echo " <tr>
" .
          "  <td><a href=\"info.php?id=$id\">$name</a></td>
" .
          "  <td>$salary</td>
" .
          " </tr>
";
}

?>

</table>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      <function>list</function> присваивает значения начиная с крайнего правого
      параметра. Если вы используете простые переменные, можете не беспокоиться
      об этом. Но если вы используете индексные массивы, вы можете ожидать, что в
      результате выполнения функции <function>list</function> вы получите тот же
      порядок элементов, что и в исходном массиве: слева направо; однако это не так.
      Они будут присвоены в обратном порядке.
     </para>
    </warning>
    <para>
     <example>
      <title>Использование <function>list</function> с индексами массивов</title>
      <programlisting role="php">
<![CDATA[
<?php

$info = array('coffee', 'brown', 'caffeine');

list($a[0], $a[1], $a[2]) = $info;

var_dump($a);

?>
]]>
      </programlisting>
      <para>
       Выведет (сравните порядок исходных элементов с порядком, в
       в котором они были перезаписаны функцией <function>list</function>):
      </para>
      <screen>
<![CDATA[
array(3) {
  [2]=>
  string(8) "caffeine"
  [1]=>
  string(5) "brown"
  [0]=>
  string(6) "coffee"
}
]]>
      </screen>
     </example>
    </para>
    <para>
     См. также <function>each</function>, <function>array</function> 
     и <function>extract</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
