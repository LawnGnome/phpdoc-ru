<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: sveta Status: ready -->
<!-- $Revision$ -->
  <refentry xml:id="function.array-diff-ukey" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_diff_ukey</refname>
    <refpurpose>Вычислить расхождение в массивах, используя функцию обратного вызова для сравнения ключей</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_ukey</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
      <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_ukey</function> возвращает массив,
     содержащий все значения <parameter>array1</parameter>,
     имеющие ключи, не содержащиеся в последующих параметрах.
     Обратите внимание, что ассоциации сохраняются. Эта функция схожа с
     <function>array_diff</function> за исключением того, что сравниваются ключи,
     а не значения.
    </para>
    <para>
     Для сравнения используется функция, определённая пользователем.
     Она должна возвращать целое число меньшее, равное или большее нуля, если
     первый ключ, соответственно, меньше, равен или больше второго.
    </para>
    <para>
     <example>
      <title>Пример использования <function>array_diff_ukey</function></title>
      <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($key1, $key2)
{
    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}

$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);

var_dump(array_diff_ukey($array1, $array2, 'key_compare_func'));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
]]>
      </screen>
     </example>
    </para>
    <note>
     <simpara>
      Обратите внимание, что эта функция обрабатывает только одно измерение
       n-размерного массива. Естественно, вы можете обрабатывать и более глубокие
       уровни вложенности, например, используя
      <literal>array_diff_ukey($array1[0], $array2[0], 'callback_func');</literal>.
     </simpara>
    </note>
    <para>
     См. также <function>array_diff</function>,
     <function>array_udiff</function>
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff_assoc</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_diff_key</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_intersect_key</function> и
     <function>array_intersect_ukey</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
