<?xml version="1.0" encoding="windows-1251"?>
<!-- EN-Revision: 1.4 Maintainer: tronic Status: ready -->
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.62 -->
  <refentry id="function.array-map">
   <refnamediv>
    <refname>array_map</refname>
    <refpurpose>
     Применить функцию обратного вызова ко всем элементам указанных массивов
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>array</type><methodname>array_map</methodname>
      <methodparam><type>mixed</type><parameter>callback</parameter></methodparam>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>array2...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Функция <function>array_map</function> возвращает массив, содержащий
     элементы всех указанных массивов после их обработки функцией обратного
     вызова. Количество параметров, передаваемых функции обратного
     вызова, должно совпадать с количеством массивов, переданным
     функции <function>array_map</function>.
    </para>
    <para>
     <example>
      <title>Пример использования <function>array_map</function></title>
      <programlisting role="php">
<![CDATA[
function cube($n) {
    return $n*$n*$n;
}

$a = array(1, 2, 3, 4, 5);
$b = array_map("cube", $a);
print_r($b);
]]>
      </programlisting>
      <para>
       В результате переменная <varname>$b</varname> будет содержать:
       <screen>
<![CDATA[
Array
(
    [0] => 1
    [1] => 8
    [2] => 27
    [3] => 64
    [4] => 125
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <para>
     <example>
      <title>Пример использования <function>array_map</function>: обработка нескольких массивов</title>
      <programlisting role="php">
<![CDATA[
function show_Spanish($n, $m) {
    return "Число $n по-испански -  $m";
}

function map_Spanish($n, $m) {
    return array ($n => $m);
}

$a = array(1, 2, 3, 4, 5);
$b = array("uno", "dos", "tres", "cuatro", "cinco");

$c = array_map("show_Spanish", $a, $b);
print_r($c);

$d = array_map("map_Spanish", $a , $b);
print_r($d);
]]>
      </programlisting>
      <para>
       Результат выполнения:
       <screen>
<![CDATA[
// printout of $c
Array
(
    [0] => Число 1 по-испански -  uno
    [1] => Число 2 по-испански -  dos
    [2] => Число 3 по-испански -  tres
    [3] => Число 4 по-испански -  cuatro
    [4] => Число 5 по-испански -  cinco
)

// printout of $d
Array
(
    [0] => Array
        (
            [1] => uno
        )

    [1] => Array
        (
            [2] => dos
        )

    [2] => Array
        (
            [3] => tres
        )

    [3] => Array
        (
            [4] => cuatro
        )

    [4] => Array
        (
            [5] => cinco
        )

)
]]>
       </screen>
      </para>
     </example>
    </para>
    <para>
     Обычно при обработке двух или более массивов, они имею одинаковую длину,
     так как функция обратного вызова применяется параллельно к соответствующим
     элементам массивов. Если массивы имеют различную длину, самый маленький
     из них дополняется элементами с пустыми значениями.
    </para>
    <para>
     Интересным эффектом при использовании этой функции является создание
     массива массивов, что может быть достигнуто путем использования
     значения &null; в качестве имени функции обратного вызова.
    </para>
    <para>
     <example>
      <title>Создание массива массивов</title>
      <programlisting role="php">
<![CDATA[
$a = array(1, 2, 3, 4, 5);
$b = array("one", "two", "three", "four", "five");
$c = array("uno", "dos", "tres", "cuatro", "cinco");

$d = array_map(null, $a, $b, $c);
print_r($d);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Результатом выполнения вышеприведенной программы будет:
     <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => 1
            [1] => one
            [2] => uno
        )

    [1] => Array
        (
            [0] => 2
            [1] => two
            [2] => dos
        )

    [2] => Array
        (
            [0] => 3
            [1] => three
            [2] => tres
        )

    [3] => Array
        (
            [0] => 4
            [1] => four
            [2] => cuatro
        )

    [4] => Array
        (
            [0] => 5
            [1] => five
            [2] => cinco
        )

)
]]>
     </screen>
    </para>
    <para>
     См.также <function>array_filter</function> и <function>array_reduce</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
