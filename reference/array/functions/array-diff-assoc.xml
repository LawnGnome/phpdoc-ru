<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: sveta Status: ready -->
<!-- $Revision$ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
  <refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_diff_assoc</refname>
    <refpurpose>Вычислить расхождение в массивах с дополнительной проверкой индекса</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Описание</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_assoc</methodname>
      <methodparam><type>array</type><parameter>array_1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array_2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Функция <function>array_diff_assoc</function> возвращает массив,
     состоящий из значений массива <parameter>array_1</parameter>,
     которые отсутствуют в любом другом массиве, перечисленном
     в последующих аргументах. Обратите внимание, что ключи возвращаемого расхождения отличны
     от ключей расхождения, возвращаемого функцией <function>array_diff</function>.
    </para>
    <para>
     <example>
      <title>Пример использования <function>array_diff_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "green", "yellow", "red");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      <para>
       Результатом вышеприведенной программы будет:
      </para>
      <screen>
<![CDATA[
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     В вышеприведённом примере Вы видите, что пара <literal>"a" =&gt; "green"</literal>
     содержится в обоих массивах и таким образом её не содержится в выводе функции.
     Наоборот, пара <literal>0 =&gt; "red"</literal> 
     содержится в выводе функции, потому что во втором аргументе значению <literal>"red"</literal>
     соответствует ключ <literal>1</literal>. 
    </simpara>
    <simpara>
     Два значения пар <emphasis>key =&gt; value</emphasis>
     считаются равными только, если <literal>(string) $elem1 === (string)
     $elem2 </literal>. Другими словами, строгая проверка считает, что
     строковое представление должно быть идентичным.
     <!-- TODO: example of it... -->
    </simpara>
    <note>
     <simpara>
      Обратите внимание, что эта функция обрабатывает только одно измерение
      n-размерного массива. Естественно, вы можете обрабатывать и более
      глубокие уровни вложенности, например, используя
      <literal>array_diff_assoc($array1[0], $array2[0]);</literal>.
     </simpara>
    </note>
    <para>
     См.также <function>array_diff</function>,
     <function>array_intersect</function>,
     и <function>array_intersect_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

