<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 309972 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision: $ -->
<refentry xml:id="function.imagecolorallocatealpha" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolorallocatealpha</refname>
  <refpurpose>Создание цвета для изображения</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>imagecolorallocatealpha</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>red</parameter></methodparam>
   <methodparam><type>int</type><parameter>green</parameter></methodparam>
   <methodparam><type>int</type><parameter>blue</parameter></methodparam>
   <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecolorallocatealpha</function> работает аналогично функции
   <function>imagecolorallocate</function>, но еще добавляет к цвету параметр
   <parameter>alpha</parameter>, отвечающий за прозрачность.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>red</parameter></term>
     <listitem>
      <para>&gd.value.red;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>green</parameter></term>
     <listitem>
      <para>&gd.value.green;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>blue</parameter></term>
     <listitem>
      <para>&gd.value.blue;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>alpha</parameter></term>
     <listitem>
      <para>
       Значение в диапазоне от <literal>0</literal> до <literal>127</literal>.
       <literal>0</literal> означает непрозрачный цвет,
       <literal>127</literal> означает полную прозрачность.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   Параметры цветов могут быть либо целочисленными в диапазоне от 0 до 255 либо
   шестнадцатиричными в диапазоне от 0x00 до 0xFF.
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Идентификатор цвета или &false; в случае неудачи при создании цвета.
  </para>
  &return.falseproblem;
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Младше 5.1.3</entry>
       <entry>
        Возвращает -1 в случае неудачи при создании цвета.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>imagecolorallocatealpha</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$size = 300;
$image=imagecreatetruecolor($size, $size);

// создадим белый фон с черной рамкой
$back = imagecolorallocate($image, 255, 255, 255);
$border = imagecolorallocate($image, 0, 0, 0);
imagefilledrectangle($image, 0, 0, $size - 1, $size - 1, $back);
imagerectangle($image, 0, 0, $size - 1, $size - 1, $border);

$yellow_x = 100;
$yellow_y = 75;
$red_x    = 120;
$red_y    = 165;
$blue_x   = 187;
$blue_y   = 125;
$radius   = 150;

// создание цветов с альфа компонентом
$yellow = imagecolorallocatealpha($image, 255, 255, 0, 75);
$red    = imagecolorallocatealpha($image, 255, 0, 0, 75);
$blue   = imagecolorallocatealpha($image, 0, 0, 255, 75);

// рисование 3х пересекающихся окружностей
imagefilledellipse($image, $yellow_x, $yellow_y, $radius, $radius, $yellow);
imagefilledellipse($image, $red_x, $red_y, $radius, $radius, $red);
imagefilledellipse($image, $blue_x, $blue_y, $radius, $radius, $blue);

// не забудьте вывести правильный заголовок!
header('Content-Type: image/png');

// и наконец, вывод 
imagepng($image);
imagedestroy($image);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Вывод примера: Пример использования imagecolorallocatealpha()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagecolorallocatealpha.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.2;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagecolorallocate</function></member>
    <member><function>imagecolordeallocate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
