<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338112 Maintainer: lex Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongodb-driver-manager.executecommand" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\Driver\Manager::executeCommand</refname>
  <refpurpose>Выполняет команду базы данных</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <type>MongoDB\Driver\Cursor</type><methodname>MongoDB\Driver\Manager::executeCommand</methodname>
   <methodparam><type>string</type><parameter>db</parameter></methodparam>
   <methodparam><type>MongoDB\Driver\Command</type><parameter>command</parameter></methodparam>
   <methodparam choice="opt"><type>MongoDB\Driver\ReadPreference</type><parameter>readPreference</parameter></methodparam>
  </methodsynopsis>
  <para>
   Выполняет <parameter>command</parameter> на сервере, если
   <parameter>readPreference</parameter> указан, он будет использоваться для выбора сервера;
   в противном случае будет использоваться предпочтение чтения по умолчанию.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &mongodb.parameter.db;
   &mongodb.parameter.command;
   &mongodb.parameter.readPreference;
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  &mongodb.returns.cursor;
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simplelist>
   &mongodb.throws.std;
   <member>При возникновении других ошибок (например, неправильная команда),
    бросает исключение <classname>MongoDB\Driver\Exception\RuntimeException</classname>.
   </member>
  </simplelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример выполнения <function>MongoDB\Driver\Manager::executeCommand</function> с командой, возвращающей одиночный документ</title>
   <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager('mongodb://localhost:27017');
$command = new MongoDB\Driver\Command(['ping' => 1]);

try {
    $cursor = $manager->executeCommand('admin', $command);
} catch(MongoDB\Driver\Exception $e) {
    echo $e->getMessage(), "\n";
    exit;
}

/* Команда ping возвращает одиночный результат, поэтому мы должны получить доступ к
 * первому результату в курсор. */
$response = $cursor->toArray()[0];

var_dump($response);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(1) {
  ["ok"]=>
  float(1)
}
]]>
   </screen>
  </example>
  <example>
   <title>Пример выполнения <function>MongoDB\Driver\Manager::executeCommand</function> с командой, возвращающей курсор</title>
   <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager("mongodb://localhost:27017");

$bulk = new MongoDB\Driver\BulkWrite;
$bulk->insert(['x' => 1, 'y' => 'foo']);
$bulk->insert(['x' => 2, 'y' => 'bar']);
$bulk->insert(['x' => 3, 'y' => 'bar']);
$manager->executeBulkWrite('db.collection', $bulk);

$command = new MongoDB\Driver\Command([
    'aggregate' => 'collection',
    'pipeline' => [
        ['$group' => ['_id' => '$y', 'sum' => ['$sum' => '$x']]],
    ],
    'cursor' => new stdClass,
]);
$cursor = $manager->executeCommand('db', $command);

/* Команда aggragete опционально может вернуть результаты в курсоре вместо
 * одиночного документа. В таком случае мы можем перебирать на курсоре для
 * непосредственного доступа к результатам. */
foreach ($cursor as $document) {
    var_dump($document);
}

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(stdClass)#6 (2) {
  ["_id"]=>
  string(3) "bar"
  ["sum"]=>
  int(10)
}
object(stdClass)#7 (2) {
  ["_id"]=>
  string(3) "foo"
  ["sum"]=>
  int(2)
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Этот метод не принимает параметр
    <classname>MongoDB\Driver\WriteConcern</classname>. Для команд
    записи (например,
    <link xlink:href="&url.mongodb.docs;reference/command/findAndModify/">findAndModify</link>
    в MongoDB 3.2+), гарантия записи должна включена в сам документ
    <parameter>command</parameter>.
   </para>
   <para>
    Если используется вторичный <parameter>readPreference</parameter>, 
    ответственность выполняющего кода гарантировать, что 
    <parameter>command</parameter> может быть выполнен на вторичном узле. Проверка
    не выполняется драйвером.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><classname>MongoDB\Driver\Command</classname></member>
   <member><classname>MongoDB\Driver\Cursor</classname></member>
   <member><classname>MongoDB\Driver\ReadPreference</classname></member>
   <member><function>MongoDB\Driver\Server::executeCommand</function></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
