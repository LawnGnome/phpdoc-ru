<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 331700 Maintainer: irker Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->

<appendix xml:id="json.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  Следующие константы указывают на тип ошибки, возвращенной функцией
  <function>json_last_error</function>.
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-error-none">
   <term>
    <constant>JSON_ERROR_NONE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Не произошло никаких ошибок.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-depth">
   <term>
    <constant>JSON_ERROR_DEPTH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Была превышена максимальная глубина стека.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-state-mismatch">
   <term>
    <constant>JSON_ERROR_STATE_MISMATCH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Неверный или поврежденный JSON.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-ctrl-char">
   <term>
    <constant>JSON_ERROR_CTRL_CHAR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Ошибка управляющих символов, вероятно из-за неверного кодирования.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-syntax">
   <term>
    <constant>JSON_ERROR_SYNTAX</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Синтаксическая ошибка.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-utf8">
   <term>
    <constant>JSON_ERROR_UTF8</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Поврежденные символы UTF-8, вероятно, из-за неверного кодирования.
     Эта константа стала доступна начиная с PHP 5.3.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-recursion">
   <term>
    <constant>JSON_ERROR_RECURSION</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Объект или массив, переданный в функцию <function>json_encode</function> включает
     рекурсивные ссылки и не может быть закодирован.
     Если была передана опция <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant>, то
     на месте рекурсивных ссылок будет выведен &null;.
    </para>
    <para>
     Эта константа стала доступна начиная с PHP 5.5.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-inf-or-nan">
   <term>
    <constant>JSON_ERROR_INF_OR_NAN</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Значение, переданное в функцию <function>json_encode</function> включает либо
     <link linkend="language.types.float.nan"><constant>NAN</constant></link>,
     либо <link linkend="function.is-infinite"><constant>INF</constant></link>.
     Если была указана константа <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant>,
     то вместо указанных особых значений будет выведен <literal>0</literal>.
    </para>
    <para>
     Эта константа стала доступна начиная с PHP 5.5.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-unsupported-type">
   <term>
    <constant>JSON_ERROR_UNSUPPORTED_TYPE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     В функцию <function>json_encode</function> было передано значение
     неподдерживаемого типа, например, <type>resource</type>.
     Если была указана константа <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant>,
     то вместо неподдерживаемого значения будет выводиться &null;.
    </para>
    <para>
     Эта константа стала доступна начиная с PHP 5.5.0.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>
  Следующие константы можно комбинировать для использования в
  <function>json_encode</function>.
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-hex-tag">
   <term>
    <constant>JSON_HEX_TAG</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все &lt; и &gt; кодируются в \u003C и \u003E.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-amp">
   <term>
    <constant>JSON_HEX_AMP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все &amp; кодируются в \u0026.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-apos">
   <term>
    <constant>JSON_HEX_APOS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все символы ' кодируются в \u0027.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-quot">
   <term>
    <constant>JSON_HEX_QUOT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все символы " кодируются в \u0022.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-force-object">
   <term>
    <constant>JSON_FORCE_OBJECT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Выдавать объект вместо массива при использовании неассоциативного
     массива. Это полезно, когда принимающая программа или код ожидают
     объект или же массив пуст.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-numeric-check">
   <term>
    <constant>JSON_NUMERIC_CHECK</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Кодирование строк, содержащих числа, как
     числа. Доступна начиная с PHP 5.3.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-bigint-as-string">
   <term>
    <constant>JSON_BIGINT_AS_STRING</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Кодирует большие целые числа в виде их строковых эквивалентов.
     Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-pretty-print">
   <term>
    <constant>JSON_PRETTY_PRINT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Использовать пробельные символы в возвращаемых данных
     для их форматирования. Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-slashes">
   <term>
    <constant>JSON_UNESCAPED_SLASHES</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Не экранировать <literal>/</literal>.
     Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-unicode">
   <term>
    <constant>JSON_UNESCAPED_UNICODE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Не кодировать многобайтные символы Unicode (по умолчанию они кодируются как \uXXXX).
     Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
