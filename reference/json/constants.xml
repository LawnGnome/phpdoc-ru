<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 321949 Maintainer: irker Status: ready -->
<!-- $Revision$ -->
<!-- Reviewed: yes -->

<appendix xml:id="json.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  Следующие константы указывают на тип ошибки, возвращенной функцией
  <function>json_last_error</function>.
 </para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_NONE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Не произошло никаких ошибок.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_DEPTH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Была превышена максимальная глубина стека.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_STATE_MISMATCH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Неверный или поврежденный JSON.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_CTRL_CHAR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Ошибка управляющих символов, вероятно из-за неверного кодирования.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_SYNTAX</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Синтаксическая ошибка.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_ERROR_UTF8</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Поврежденный символы UTF-8, вероятно из-за неверного кодирования.
     Эта константа доступна начиная с PHP 5.3.1.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>
  Следующие константы можно комбинировать для использования в
  <function>json_encode</function>. Все они доступны начиная с PHP 5.3.0.
 </para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>JSON_HEX_TAG</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все &lt; и &gt; кодируются в \u003C и \u003E.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_HEX_AMP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все &amp; кодируются в \u0026.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_HEX_APOS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все символы ' кодируются в \u0027.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_HEX_QUOT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Все символы " кодируются в \u0022.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_FORCE_OBJECT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Выдавать объект вместо массива при использовании неассоциативного
     массива. Это полезно, когда принимающая программа или код ожидают
     объект или же массив пуст.
     Доступна начиная с PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_NUMERIC_CHECK</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Кодирование строк, содержащих числа, как
     числа. Доступна начиная с PHP 5.3.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_BIGINT_AS_STRING</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_PRETTY_PRINT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Использовать пробельные символы в возвращаемых данных
     для их форматирования. Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_UNESCAPED_SLASHES</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Не экранировать <literal>/</literal>.
     Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>JSON_UNESCAPED_UNICODE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Не кодировать многобайтные символы Unicode (по умолчанию они кодируются как \uXXXX).
     Доступна начиная с PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

