<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 297028 Maintainer: mch Status: ready -->
<!-- $Revision$ -->
<!-- Reviewed: no -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="runkit.sandbox" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Runkit_Sandbox</refname>
  <refpurpose>
   Класс Runkit Sandbox -- это виртуальная машина PHP
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;

  <para>
   Экземпляр класса <classname>Runkit_Sandbox</classname> создает отдельный поток
   основного процесса с собственным окружением и выделенной областью памяти (стеком).
   С помощью дополнительных параметров конструктора можно ограничивать функционал
   интерпретатора в песочнице, создавая таким образом безопасное окружение для
   выполнения пользовательского кода.
  </para>

  &note.runkit.sandbox;
 </refsect1>

 <refsect1 role="constructor">
  <title>Constructor</title>
  <methodsynopsis>
   <type>void</type><methodname>Runkit_Sandbox::__construct</methodname>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>

  <para>
   <parameter>options</parameter> ассоциативный массив, содержащий произвольную
   комбинацию специальных параметров, перечисленных ниже
  </para>

  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>safe_mode</parameter></term>
     <listitem>
      <para>
       Если родительский скрипт, в котором создается экземпляр
       <classname>Runkit_Sandbox</classname> выполняется с директивой
       <literal>safe_mode = off</literal>, то эту опцию можно задействовать
       в песочнице для включения режима safe_mode.
       Данный параметр не может быть использован для отключения
       <literal>safe_mode</literal>, если он включен во внешнем окружении.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>safe_mode_gid</parameter></term>
     <listitem>
      <para>
       Если родительский скрипт, в котором создается экземпляр
       <classname>Runkit_Sandbox</classname> выполняется с директивой
       <literal>safe_mode_gid = on</literal>, то данную опцию
       можно задействовать для отключения safe_mode_gid в песочнице.
       Этот параметр нельзя использовать для включения
       <literal>safe_mode_gid</literal>, если он выключен во внешнем
       окружении.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>safe_mode_include_dir</parameter></term>
     <listitem>
      <para>
       Если родительский скрипт, в котором создается экземпляр
       <classname>Runkit_Sandbox</classname> выполняется c заданной
       директивой <literal>safe_mode_include_dir</literal>, то
       для песочницы может быть указана новая директория, находящаяся
       внутри заданной. Значение safe_mode_include_dir так же может
       быть очищено для возврата к начальным настройкам.
       Если директива safe_mode_include_dir не была настроена для
       родительского скрипта, подразумевается, что задан корневой раздел.
       В таком случае для песочницы можно указать любую директорию,
       при включенном режим safe_mode.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>open_basedir</parameter></term>
     <listitem>
      <para>
       В параметре <parameter>open_basedir</parameter> может быть задана
       любая директория, находящаяся внутри назначенной
       <literal>open_basedir</literal> родительского скрипта.
       Если параметр <literal>open_basedir</literal> в родительском скрипте
       не задан, в качестве его значения используется корневой раздел.
       В таком случае для песочницы можно указать любой каталог.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allow_url_fopen</parameter></term>
     <listitem>
      <para>
       Подобно <parameter>safe_mode</parameter>, этот параметр может быть изменен
       только в сторону увеличения ограничений. Допускается устанавливать его значение
       &false; в случае, если значение в родительском окружении &true;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>disable_functions</parameter></term>
     <listitem>
      <para>
       Список отключенных в песочнице функций через запятую. В этот список не
       надо вносить уже отключенные в родительском скрипте функции, они
       таковыми и останутся вне зависимоти от наличия в списке.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>disable_classes</parameter></term>
     <listitem>
      <para>
       Список отключенных в песочнице классов через запятую. В этот список не надо
       вносить уже отключенные в родительском скрипте классы, они таковыми и
       останутся вне зависимости от наличия в списке.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>runkit.superglobal</parameter></term>
     <listitem>
      <para>
       Список суперглобальных переменных для песочницы через запятую.
       Перечисленные переменные будут дополнять список существующих
       суперглобальных переменных, встроенных и заданных с помощью
       runkit.superglobal в родительском окружении.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>runkit.internal_override</parameter></term>
     <listitem>
      <para>
       Параметр <literal>runkit.internal_override</literal> может
       быть только отключен для песочницы.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <example>
   <title>Пример создания безопасной песочницы</title>
   <programlisting role="php">
<![CDATA[
<?php
$options = array(
  'safe_mode'=>true,
  'open_basedir'=>'/var/www/users/jdoe/',
  'allow_url_fopen'=>'false',
  'disable_functions'=>'exec,shell_exec,passthru,system',
  'disable_classes'=>'myAppClass');
$sandbox = new Runkit_Sandbox($options);
/* Незащищенные ini-переменные устанавливаются обычным способом */
$sandbox->ini_set('html_errors',true);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="variables">
  <title>Доступ к переменным</title>
  <para>
   Все глобальные переменные внутри песочницы доступны через
   свойства объекта Runkit_Sandbox.
   Необходимо учитывать, что из-за особенностей рапределения  
   памяти объекты и ресурсы не могут переноситься
   между родительским процессом и песочницей.
   Массивы полностью копируются между интерпретаторами и все
   ссылки внутри массивов удаляются.
   Это так же означает, что ссылки между интерпретаторами
   невозможны.
  </para>

  <example>
   <title>Работа с переменными в песочнице</title>
   <programlisting role="php">
<![CDATA[
<?php
$sandbox = new Runkit_Sandbox();

$sandbox->foo = 'bar';
$sandbox->eval('echo "$foo\n"; $bar = $foo . "baz";');
echo "{$sandbox->bar}\n";
if (isset($sandbox->foo)) unset($sandbox->foo);
$sandbox->eval('var_dump(isset($foo));');
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
bar
barbaz
bool(false)
]]>
  </screen>
 </refsect1>

 <refsect1 role="functions">
  <title>Вызов функций PHP</title>
  <para>
   Любая функция, заданная в песочнице, может быть
   вызвана через метод объекта Runkit_Sandbox.
   Так же доступны несколько псевдо-функций:
   <function>eval</function>,
   <function>include</function>, <function>include_once</function>,
   <function>require</function>, <function>require_once</function>,
   <function>echo</function>, <function>print</function>,
   <function>die</function>, and <function>exit</function>.
  </para>

  <example>
   <title>Использование функций песочницы</title>
   <programlisting role="php">
<![CDATA[
<?php
$sandbox = new Runkit_Sandbox();

echo $sandbox->str_replace('a','f','abc');
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
fbc
]]>
  </screen>

  <para>
   Когда функция песочницы вызывается с параметрами, используются
   значения этих параметров из родительского скрипта. Если необходимо
   вызвать функцию со значениями из окружения песочницы, следует
   передавать их как свойства объекта Runkit_Sandbox. Этот механизм
   проиллюстрирован на следующем примере.
  </para>

  <example>
   <title>Передача аргументов функциям в песочнице</title>
   <programlisting role="php">
<![CDATA[
<?php
$sandbox = new Runkit_Sandbox();

$foo = 'bar';
$sandbox->foo = 'baz';
echo $sandbox->str_replace('a',$foo,'a');
echo $sandbox->str_replace('a',$sandbox->foo,'a');
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
bar
baz
]]>
  </screen>
 </refsect1>

 <refsect1 role="settings">
  <title>Изменение параметров песочницы</title>
  <para>
   По состоянию на версию runkit 0.5, большинство параметров
   песочницы могут быть изменены "на лету" с помощью
   синтаксиса интерфейса ArrayAccess. Некоторые параметры,
   например, <parameter>active</parameter>, доступны только
   для чтения. Остальные, например, <parameter>output_handler</parameter>,
   могут быть получены и записаны как обычный элемент массива.
   В будущем могут появиться параметры, доступные только для
   записи. На текущий момент таких не существует.
  </para>

  <para>
   <table>
    <title>Настройки песочницы. Индикаторы статуса</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>Настройка</entry>
       <entry>Тип</entry>
       <entry>Назначение</entry>
       <entry>По умолчанию</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>active</literal></entry>
       <entry><type>Boolean</type> (только чтение)</entry>
       <entry>
        &true; если песочница функионирует,
        &false; если процесс завершен после вызова die() или exit(),
        или в результате ошибки при выполнении.
       </entry>
       <entry>&true; (изначально)</entry>
      </row>
      <row>
       <entry><literal>output_handler</literal></entry>
       <entry><type>Callback</type></entry>
       <entry>
        Если указана соответствующая callback-функция, весь вывод
        песочницы перенаправляется в указанную функцию.
        Обработчики вывода песочницы работают аналогично
        системным обработчикам вывода.
       </entry>
       <entry>None</entry>
      </row>
      <row>
       <entry><literal>parent_access</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Параметр управляет доступом к <classname>Runkit_Sandbox_Parent</classname>
        из песочницы.
        Параметр должен быть включен для работы с функционалом,
        предоставляемым <classname>Runkit_Sandbox_Parent</classname>.
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_read</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает чтение переменных родительского окружения
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_write</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает запись переменных родительского окружения
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_eval</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает выполнение кода в родительском окружении
        <emphasis>DANGEROUS</emphasis>
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_include</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает подключать php файлы в родительском
        окружении <emphasis>DANGEROUS</emphasis>
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_echo</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает выводить данные в родительском окружении,
        в обход output_handler.
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_call</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает вызов функций в родительском окружении
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_die</literal></entry>
       <entry><type>Boolean</type></entry>
       <entry>
        Разрешает завершать родительский скрипт (а значит
        и себя тоже)
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>parent_scope</literal></entry>
       <entry><type>Integer</type></entry>
       <entry>
        Настройка области видимости песочницы для внешнего окружения:
        0 == Глобальная область видимости, 1 == область вызова,
        2 == область до области вызова,
        3 == область до этой области, и т.д.
       </entry>
       <entry><literal>0</literal> (Global)</entry>
      </row>
      <row>
       <entry><literal>parent_scope</literal></entry>
       <entry><type>String</type></entry>
       <entry>
        В случае, когда параметр <literal>parent_scope</literal>
        задан строковым значением, он указывает на массив в глобальной
        области видимости. Если массива не существует - будет создан
        пустой массив с указанным именем. Если существует переменная с
        заданным именем, не являющаяся массивом - будет создан массив,
        содержащий ссылку на существующую переменную.
       </entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
