<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: tony2001 Status: ready -->
<!-- $Revision$ -->
  <sect1 xml:id="install.unix.commandline" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>Установка с интерфейсами CGI и командной строки</title>
   <para>
    По умолчанию, при сборке PHP как CGI-программы создается интерпретатор 
    командной строки, который может быть использован для обработки CGI-скриптов
    и выполнения функций не связанных с Web-программированием. PHP как
    модуль сервера выигрывает в производительности, однако PHP CGI позволяет
    запускать PHP от пользователя, отличного от того, под которым исполняется 
    сервер.
   </para>
   &warn.install.cgi;
   <para>
    В PHP 4.0.3 было добавлено несколько важных дополнений. Новый SAPI командной 
    строки, названый CLI, и имеющий такое же имя как и CGI.
    Исполняемый файл устанавливается в <literal>{PREFIX}/bin/php</literal>, 
    где {PREFIX} указывается вами при запуске конфигурационного скрипта перед
    сборкой. Более детально вы можете ознакомиться с этой темой в разделе  
    <link linkend="features.commandline">Использование PHP в командной строке</link>.
   </para>
   
   <sect2 xml:id="install.unix.commandline.testing">
    <title>Тестирование</title>
    <simpara>
     Если вы собрали PHP как CGI, вы можете протестировать вашу сборку
     командой <command>make test</command>. Тестирование вашей сборки - 
     всегда хорошая идея. Таким образом вы можете обнаружить работы PHP на вашей 
     платформе раньше, вместо того, чтобы бороться с ними позже.
    </simpara>
   </sect2>

   <sect2 xml:id="install.unix.commandline.benchmarking">
    <title>Тестирование производительности(Benchmarking)</title>
    <simpara>
     Если вы собрали PHP 3 как CGI, вы можете протестировать производительность
     вашей сборки посредством команды <command>make bench</command>. Заметьте,
     что если &safemode; включен по умолчанию, тестирование производительности 
     не сможет нормально завершиться, если оно длится более 30 секунд. Это 
     происходит потому, что функция <function>set_time_limit</function> не может
     использоваться при включенном &safemode;. Используйте параметр <link
     linkend="ini.max-execution-time">max_execution_time</link> в конфигурационном
     файле, чтобы позволить вашим скриптам исполняться дольше 30 секунд.
     <command>make bench</command> игнорирует <link
     linkend="configuration.file">конфигурационный файл</link>.
    </simpara>
    <note>
     <simpara>
        <command>make bench</command> доступно только для PHP 3.
     </simpara>
    </note>
   </sect2>
   
   <sect2 xml:id="install.unix.commandline.using-variables">
    <title>Использование переменных</title>
    <simpara>
      Некоторые <link linkend="reserved.variables.server">переменные
      окружения сервера</link> не определены в текущей 
      <link xlink:href="&url.cgispec;">спецификации CGI/1.1</link>.
      Только следующие переменные определены: <varname>AUTH_TYPE</varname>, 
      <varname>CONTENT_LENGTH</varname>, <varname>CONTENT_TYPE</varname>,
      <varname>GATEWAY_INTERFACE</varname>, <varname>PATH_INFO</varname>, 
      <varname>PATH_TRANSLATED</varname>, <varname>QUERY_STRING</varname>,
      <varname>REMOTE_ADDR</varname>, <varname>REMOTE_HOST</varname>, 
      <varname>REMOTE_IDENT</varname>, <varname>REMOTE_USER</varname>,
      <varname>REQUEST_METHOD</varname>, <varname>SCRIPT_NAME</varname>, 
      <varname>SERVER_NAME</varname>, <varname>SERVER_PORT</varname>,
      <varname>SERVER_PROTOCOL</varname>, and <varname>SERVER_SOFTWARE</varname>.
      Все остальное должно обрабатываться как 'vendor extensions'.
    </simpara>
   </sect2>
   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
