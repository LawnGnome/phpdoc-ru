<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 335019 Maintainer: irker Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->

<chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Установка расширений PECL</title>

 <sect1 xml:id="install.pecl.intro">
  <title>Введение в установку PECL</title>
  <simpara>
   <link xlink:href="&url.pecl;">PECL</link> - это репозиторий расширений PHP,
   доступ к которым предоставляется через систему <link xlink:href="&url.php.pear;">PEAR</link>.
   Эта часть руководства предназначена для демонстрации того, как вы можете получить и
   установить расширения PECL.
  </simpara>
  <simpara>
   Эти инструкции подразумевают, что <literal>/your/phpsrcdir/</literal> является путем
   к каталогу с дистрибутивом исходного кода PHP, а <literal>extname</literal> - это имя
   расширения PECL, так что вносите соответствующие коррективы. Эти инструкции также подразумевают
   знакомство с <link xlink:href="&url.php.pear.cli;">командой pear</link>.
   Информация в руководстве PEAR для команды <literal>pear</literal> также применима для
   команды <literal>pecl</literal>.
  </simpara>
  <simpara>
   To be useful, a shared extension must be built, installed, and loaded.  The
   methods described below provide you with various instructions on how to
   build and install the extensions, but they do not automatically load them.
   Extensions can be loaded by adding an <link
   linkend="ini.extension">extension</link> directive to the &php.ini;
   file, or through the use of the <function>dl</function> function.
  </simpara>
  <simpara>
   В процессе сборки модулей PHP важно иметь нужные версии необходимых утилит
   (autoconf, automake, libtool и т.д.). Информацию об этих утилитах и их версиях можно посмотреть
   в разделе "<link xlink:href="&url.php.anongit;">Инструкции по осуществлению
   анонимного доступа к Git</link>".
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.downloads">
  <title>Загрузка расширений PECL</title>
  <simpara>
   Есть несколько вариантов для загрузки расширений PECL, в том числе:
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     Команда <literal>pecl install extname</literal> автоматически скачивает
     код расширений, поэтому в этом случае нет нужды в отдельной
     скачке этих файлов.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link xlink:href="&url.pecl;">&url.pecl;</link>
    </simpara>
    <simpara>
     Вебсайт PECL содержит информацию о различных расширениях, предоставляемых
     командой разработчиков PHP. Информация, доступная на этом вебсайте, включает в себя:
     лог изменений, новости релизов, требования и другие подобные детали.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>pecl download extname</literal>
    </simpara>
    <simpara>
     PECL extensions that have releases listed on the PECL web site are
     available for download and installation using the <link
     xlink:href="&url.php.pear.cli;">pecl command</link>.
     Specific revisions may also be specified.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>SVN</acronym>
    </simpara>
    <simpara>
     Большинство расширений PECL, также, находятся в <acronym>SVN</acronym>. Веб-интерфейс
     для просмотра доступен по адресу <link xlink:href="&url.php.svn;pecl/">&url.php.svn;pecl/</link>.
     Для загрузки напрямую из <acronym>SVN</acronym> используется следующая последовательность
     команд:
    </simpara>
    <para>
     <screen>
$ svn checkout http://svn.php.net/repository/pecl/extname/trunk extname
     </screen>
    </para>
   </listitem>
   <listitem>
    <simpara>
     Загрузка для Windows
    </simpara>
    <simpara>
     На данный момент проект PHP не компилирует бинарные файлы Windows
     для расширений PECL. Для компиляции PHP под Windows прочитайте
     <link linkend="install.windows.building">соответствующий раздел</link>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="install.pecl.windows">
  <title>Установка PHP-расширения в Windows</title>
  <para>
   В Windows есть два способа загрузки PHP-расширения: скомпилировать
   его вместе с PHP или загрузить DLL. Загрузка заранее
   скомпилированного расширения является наиболее простым и предпочитаемым
   способом.
  </para>
  <para>
   Для загрузки расширения, оно должно присутствовать на вашей
   системе в виде ".dll" файла.
   Все расширения автоматически и периодически компилируются командой
   PHP (см. следующий раздел для загрузки).
  </para>
  <para>
   За инструкциями по компиляции расширения в PHP обратитесь к
   разделу "<link linkend="install.windows.building">Сборка из
   исходников</link>".
  </para>
  <para>
   Для компиляции отдельного расширения (или DLL-файла), обратитесь
   к разделу "<link linkend="install.windows.building">
   Сборка из исходников</link>". Если DLL-файла нет ни в стандартной поставке
   PHP ни в PECL, возможно, вам придется скомпилировать его вручную.
  </para>

  <sect2 xml:id="install.pecl.windows.find">
   <title>Где найти расширение?</title>
   <para>
    PHP extensions are usually called "php_*.dll" (where the star represents the name of 
    the extension) and  they are located under the "PHP\ext" folder.
   </para>
   <para>
    PHP поставляет расширения наиболее полезные большинству разработчиков. Такие
    расширения называются "основными" ("core").
   </para>
   <para>
    Однако, если вам требуется функционал, который не предоставляется
    ни одним из основных расширений, возможно, нужное вам расширение есть
    в PECL. Библиотека расширений сообщества PHP
    (The PHP Extension Community Library, PECL) является
    хранилищем расширений PHP, предоставляя каталог и хостинг
    всех известных расширений для скачки и дальнейшей разработки
    расширений в PHP.
   </para>
   <para>
    If you have developed an extension for your own uses, you might want to think about hosting 
    it on PECL so that others with the same needs can benefit from your time. A nice side effect 
    is that you give them a good chance to give you feedback, (hopefully) thanks, bug reports 
    and even fixes/patches. Before you submit your extension for hosting on PECL, please read 
    <link xlink:href="&url.pecl.submit;">PECL submit</link>.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.which">
   <title>Какое расширение нужно загрузить?</title>
   <para>
    <emphasis>Очень часто существует несколько версий расширения DLL:</emphasis>
    <itemizedlist>
     <listitem>
      <simpara>
       Различные номера версий (по крайней мере первые два числа должны совпадать)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Различные настройки потокобезопасности
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Различная архитектура процессора (x86, x64, ...)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Различные настройки отладки
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>и т.д.</literal>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Помните, что настройки ваших расширений должны совпадать со
    всеми настройками используемого вами бинарного файла PHP.
    Следующий PHP-скрипт выведет вам <emphasis>все</emphasis> 
    настройки PHP:
   </para>
   <para>
    <example>
     <title>Вызов <function>phpinfo</function></title>
     <programlisting role="php">
<![CDATA[
<?php
phpinfo();
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Или запустите из командной строки:
    <screen>
<![CDATA[
drive:\\path\to\php\executable\php.exe -i
]]>
    </screen>
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.loading">
   <title>Загрузка расширения</title>
   <para>
    Наиболее распространенным способом загрузки PHP-расширения
    является его включение в конфигурационном файле <filename>php.ini</filename>.
    Обратите внимание, что большинство расширений уже прописаны
    в вашем <filename>php.ini</filename> и для их активации вам
    просто нужно удалить точку с запятой.
    <screen>
<![CDATA[
;extension=php_extname.dll
]]>
    </screen>
    <screen>
<![CDATA[
extension=php_extname.dll
]]>
    </screen>
   </para>
   <para>
    Однако, некоторые веб-серверы создают путаницу, т.к. они не
    используют <filename>php.ini</filename>, расположенный
    в дистрибутиве PHP, а используют свой собственный.
    Узнать, где находится используемый сервером <filename>php.ini</filename>,
    можно посмотрев на выводимый путь в <function>phpinfo</function>:
    <screen>
<![CDATA[
Configuration File (php.ini) Path  C:\WINDOWS
]]>
    </screen>
    <screen>
<![CDATA[
Loaded Configuration File   C:\Program Files\PHP\5.2\php.ini
]]>
    </screen>
   </para>
   <para>
    После активации расширения сохраните <filename>php.ini</filename>, перезагрузите веб-сервер
    и снова проверьте <function>phpinfo</function>, в нем должен
    появиться отдельный раздел с новым расширением.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.problemsolving">
   <title>Решение проблем</title>
   <para>
    Если расширение не появилось в выводе <function>phpinfo</function>,
    проверьте лог-файлы на наличие сообщений об ошибках.
   </para>
   <para>
    Если вы используете PHP в командной строке (CLI), ошибки загрузки
    расширения будут доступны сразу же на экране.
   </para>
   <para>
    Если вы используете PHP на веб-сервере, расположение и формат
    лог-файлов сильно зависит от используемого вами веб-сервера.
    Пожалуйста, обратитесь к документации вашего веб-сервера, т.к.
    в данном случае эта ситуация не управляется самим PHP.
   </para>
   <para>
    Частой проблемой является расположение DLL-файлов, значение "<link linkend="ini.extension-dir">
    extension_dir</link>" в <filename>php.ini</filename>, а также
    несовпадение настроек компиляции.
   </para>
   <para>
    Если проблемой является несовпадение настроек компиляции, то
    возможно, вы скачали не тот DLL-файл. Попробуйте снова скачать
    расширение, на этот раз с правильными настройками. Еще раз,
    информация функции <function>phpinfo</function> сильно помогает
    в этом случае.
   </para>
  </sect2>

 </sect1>
 
 <sect1 xml:id="install.pecl.pear">
  <title>Компиляция разделяемых расширений с помощью команды pecl</title>
  <simpara>
   PECL позволяет легко создавать разделяемые расширения PHP. Используя
   <link xlink:href="&url.php.pear.cli;">команду pecl</link>, выполните
   следующее:
  </simpara>
  <para>
   <screen>
$ pecl install extname
   </screen>
  </para>
  <simpara>
   This will download the source for <emphasis>extname</emphasis>, 
   compile, and install <filename>extname.so</filename> into your <link
   linkend="ini.extension-dir">extension_dir</link>.  
   <filename>extname.so</filename> may then be loaded via &php.ini;
  </simpara>
  <simpara>
   По умолчанию, команда <literal>pecl</literal> не будет устанавливать пакеты, 
   отмеченные состоянием <literal>alpha</literal> или <literal>beta</literal>.
   Если нет доступных стабильных (<literal>stable</literal>) версий пакетов, вы можете
   установить <literal>beta</literal>-версию пакета, используя следующую команду:
  </simpara>
  <para>
   <screen>
$ pecl install extname-beta
   </screen>
  </para>
  <para>
   Также, вы можете установить определенную версию используя такой вариант:
  </para>
  <para>
   <screen>
$ pecl install extname-0.1
   </screen>
  </para>
  <note>
   <para>
    После подключения расширения в &php.ini; необходимо перезапустить веб-сервер
    для того, чтобы изменения вступили в силу.
   </para>
  </note>
 </sect1>

 <sect1 xml:id="install.pecl.phpize">
  <title>Компиляция разделяемых расширений с помощью phpize</title>
  <simpara>
   Иногда использование инсталятора <literal>pecl</literal> не подходит. Это
   может быть связано с тем, что вы находитесь за файерволом или из-за того,
   что расширение, которое вы хотите установить, недоступно в PECL-совместимом
   пакете (к примеру, расширения из SVN, у которых еще нет релизов). Если вам необходимо
   собрать такое расширение, вы можете использовать низкоуровневые утилиты для
   выполнения сборки вручную.
  </simpara>
  <simpara>
   Команда <literal>phpize</literal> используется для подготовки окружения
   PHP-расширения. В следующем примере директория, где находятся исходные коды
   расширения, называется <filename>extname</filename>:
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
   </screen>
  </para>
  <simpara>
   В случае успешной установки будет создан файл <filename>extname.so</filename> и
   помещен в PHP <link linkend="ini.extension-dir">директорию расширений</link>.
   Вам будет необходимо добавить строку <literal>extension=extname.so</literal> в
   &php.ini; перед использованием этого расширения.
  </simpara>
  <simpara>
   Если в системе нет <literal>phpize</literal>, но существует возможность
   установки заранее скомпилированных пакетов (типа RPM), убедитесь, что установлена
   соответствующая версия пакета PHP для разработчиков, так как они часто
   содержат команду <literal>phpize</literal> с подходящими файлами заголовков для
   сборки PHP и его расширений.
  </simpara>
  <simpara>
   Для дополнительной информации используйте команду <command>phpize --help</command>.
  </simpara>
 </sect1>
 
 <sect1 xml:id="install.pecl.php-config">
  <title>php-config</title>
  
  <para>
   php-config - это простой шелл-скрипт для получения информации о конфигурации
   установленного PHP.
  </para>
  
  <para>
   При компиляции расширений, если у вас установлено сразу несколько версий PHP, 
   вы должны уточнить нужную версию с помощью опции <literal>--with-php-config</literal> 
   во время конфигурирования сборки, указав путь до соответствующего php-config скрипта.
  </para>
  
  <para>
   Список параметров командной строки доступных для php-config скрипта всегда можно
   получить запустив php-config с параметром <option>-h</option>:
   <screen>
<![CDATA[
Usage: /usr/local/bin/php-config [OPTION]
Опцияs:
  --prefix            [...]
  --includes          [...]
  --ldflags           [...]
  --libs              [...]
  --extension-dir     [...]
  --include-dir       [...]
  --php-binary        [...]
  --php-sapis         [...]
  --configure-options [...]
  --version           [...]
  --vernum            [...]
]]>
   </screen>
  </para>
  
  <para>
   <table>
    <title>Опции скрипта</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Опция</entry>
       <entry>Описание</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>--prefix</entry>
       <entry>Директория, в которой установлен PHP, например /usr/local</entry>
      </row>
      <row>
       <entry>--includes</entry>
       <entry>Список -I опций со всеми подключаемыми файлами</entry>
      </row>
      <row>
       <entry>--ldflags</entry>
       <entry>LD-флаги, с которыми был скомпилирован PHP</entry>
      </row>
      <row>
       <entry>--libs</entry>
       <entry>Внешние библиотеки, с которыми был скомпилирован PHP</entry>
      </row>
      <row>
       <entry>--extension-dir</entry>
       <entry>Директория, в которой по умолчанию ищутся расширения</entry>
      </row>
      <row>
       <entry>--include-dir</entry>
       <entry>Директория, куда по умолчанию устанавливаются заголовочные файлы</entry>
      </row>
      <row>
       <entry>--php-binary</entry>
       <entry>Полный путь до исполняемых файлов php CLI или CGI</entry>
      </row>
      <row>
       <entry>--php-sapis</entry>
       <entry>Показывает все доступные модули SAPI</entry>
      </row>
      <row>
       <entry>--configure-options</entry>
       <entry>Конфигурационные опции для воссоздания настроек текущей установки PHP.</entry>
      </row>
      <row>
       <entry>--version</entry>
       <entry>Версия PHP</entry>
      </row>
      <row>
       <entry>--vernum</entry>
       <entry>Версия PHP в виде целого числа</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>

 <sect1 xml:id="install.pecl.static">
  <title>Компиляция расширений PECL статически в PHP</title>
  <simpara>
   You might find that you need to build a PECL extension statically into your
   PHP binary.  To do this, you'll need to place the extension source under
   the <filename>/your/phpsrcdir/ext/</filename> directory and tell the PHP build
   system to regenerate its configure script.
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
   </screen>
  </para>
  <simpara>
   В результате будет создана следующая директория:
  </simpara>
  <para>
   <screen>
    /your/phpsrcdir/ext/extname
   </screen>
  </para>
  <simpara>
   После этого, выполните заново сборку конфигурационного скрипта PHP и затем
   соберите PHP как обычно:
  </simpara>
  <para>
   <screen>
$ cd /your/phpsrcdir 
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
   </screen>
  </para>
  <note>
   <simpara>
    Для запуска 'buildconf' скрипта вам понадобится autoconf версии 2.13 и
    automake версии 1.4+ (более новые версии autoconf могут работать, но это
    не поддерживается).
   </simpara>
  </note>
  <simpara>
   В зависимости от расширения будет использоваться одна из двух
   опций <literal>--enable-extname</literal> или <literal>--with-extname
   </literal>. Обычно, если расширение не требует подключения
   внешних библиотек, используется <literal>--enable</literal>.
   Чтобы узнать это, выполните следующую команду после buildconf:
  </simpara>
  <para>
   <screen>
$ ./configure --help | grep extname
   </screen>
  </para>
 </sect1>
</chapter>   

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
