<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: n/a Maintainer: shein Status: old -->
<!-- $Revision$ -->

<chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Установка расширений PECL</title>

 <sect1 xml:id="install.pecl.intro">
  <title>Введение в установку PECL</title>
  <simpara>
   <link xlink:href="&url.pecl;">PECL</link> - это репозиторий расширений PHP,
   которые доступны вам через систему <link xlink:href="&url.php.pear;">PEAR</link>.
   Эта часть руководства предназначена для демонстрации того, как вы можете получить и
   установить расширения PECL.
  </simpara>
  <simpara>
   Эти инструкции подразумевают, что <literal>/your/phpsrcdir/</literal> является путем
   к каталогу с дистрибутивом исходного кода PHP, а <literal>extname</literal> - это имя
   расширения PECL. Поэтому, приведем в соответствие. Эти инструкции также подразумевают
   знакомство с <link xlink:href="&url.php.pear.cli;">командой pear</link>.
   Информация в руководстве PEAR для команды <literal>pear</literal> также применима для
   команды <literal>pecl</literal>.
  </simpara>
  <simpara>
   Для того, чтобы расширение можно было использовать, оно должно быть собрано, установлено
   и загружено. Методы, описанные ниже, предоставляют вам различные рекомендации по поводу
   того, как собрать и установить расширения, но сами они не будут автоматически загружены.
   Расширения могут быть загружены через добавление директивы <link linkend="ini.extension">
   extension</link> в файл &php.ini;, или путем использования функции <function>dl</function>.
  </simpara>
  <simpara>
   В процессе сборки модулей PHP важно, чтобы у вас были правильные версии необходимых утилит
   (autoconf, automake, libtool и т.д.). Информацию об этих утилитах и их версиях можно посмотреть
   тут <link xlink:href="&url.php.anoncvs;">Anonymous CVS Instructions</link>.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.downloads">
  <title>Загрузка расширений PECL</title>
  <simpara>
   Есть несколько вариантов для загрузки расширений PECL, в том числе:
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <link xlink:href="&url.pecl;">&url.pecl;</link>
    </simpara>
    <simpara>
     Вебсайт PECL содержит информацию о различных расширениях, которые предоставлены
     PHP Development Team. Информация, доступная на этом вебсайте, включает в себя:
     лог изменений, новости релизов, требования и другие подобные детали.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>pecl download extname</literal>
    </simpara>
    <simpara>
     Расширения PECL, которые были опубликованы на сайте PECL, доступны для
     скачивания и установки через <link xlink:href="&url.php.pear.cli;">команду pecl</link>.
     Также, могут быть также указаны особые ревизии.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>CVS</acronym>
    </simpara>
    <simpara>
     Большинство расширений PECL, также, находятся в <acronym>CVS</acronym>. Веб-интерфейс
     для просмотра доступен по адресу <link xlink:href="&url.php.cvs;pecl/">&url.php.cvs;pecl/</link>.
     Для загрузки напрямую из <acronym>CVS</acronym> используется следующая последовательность
     команд. Стоит отметить, что пользователь <emphasis>cvsread</emphasis> имеет пароль
     <emphasis>phpfi</emphasis>:
    </simpara>
    <para>
     <screen>
$ cvs -d:pserver:cvsread@cvs.php.net:/repository login 
$ cvs -d:pserver:cvsread@cvs.php.net:/repository co pecl/extname
     </screen>
    </para>
   </listitem>
   <listitem>
    <simpara>
     Загрузка для Windows
    </simpara>
    <simpara>
     Пользователи Windows могут найти скомпилированные расширения PECL путем 
     скачивания <emphasis>Collection of PECL modules</emphasis> со страницы
     <link xlink:href="&url.php.downloads;">PHP Downloads</link>, либо через
     <link xlink:href="&url.php.snapshots;">PECL Snapshot</link>, либо
     расширения DLL на странице <link xlink:href="&url.pecl.win;">PECL4WIN</link>.
     Для компиляции PHP под Windows прочитайте 
     <link linkend="install.windows.building">соответствующий раздел</link>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="install.pecl.windows">
  <title>PECL для пользователей Windows</title>
  <simpara>
   Как и в случае <acronym>DLL</acronym> расширения PHP, установка 
   проста и заключается в копировании файла DLL расширения PECL в директорию
   <link linkend="ini.extension-dir">extension_dir</link> и подключением затем
   его через &php.ini;. Например, добавьте следующую строку в ваш &php.ini;:
  </simpara>
  <para>
   <screen>
extension=php_extname.dll
   </screen>
  </para>
  <simpara>
   После выполнения этих действий, перезапустите web-сервис.
  </simpara>
 </sect1>
 
 <sect1 xml:id="install.pecl.pear">
  <title>Компиляция общих расширений с помощью команды pecl</title>
  <simpara>
   PECL позволяет легко создавать общие расширения PHP. Используя
   <link xlink:href="&url.php.pear.cli;">команду pecl</link>, выполните
   следующее:
  </simpara>
  <para>
   <screen>
$ pecl install extname
   </screen>
  </para>
  <simpara>
   Эта команда загрузит исходный код для расширения <emphasis>extname</emphasis>,
   скомпилирует и установит <filename>extname.so</filename> в вашу директорию
   <link linkend="ini.extension-dir">extension_dir</link>. Файл 
   <filename>extname.so</filename> может быть затем загружен в &php.ini;
  </simpara>
  <simpara>
   По умолчанию, команда <literal>pecl</literal> не будет устанавливать пакеты, 
   отмеченные состоянием <literal>alpha</literal> или <literal>beta</literal>.
   Если нет доступных <literal>стабильных</literal> версий пакетов, вы можете
   установить <literal>beta</literal> версию пакета, используя следующую команду:
  </simpara>
  <para>
   <screen>
$ pecl install extname-beta
   </screen>
  </para>
  <para>
   Также, вы можете установить определенную версию используя такой вариант:
  </para>
  <para>
   <screen>
$ pecl install extname-0.1
   </screen>
  </para>
  <note>
   <para>
    После подключения расширения в &php.ini; необходимо перезапустить web-сервис
    для того, чтобы изменения вступили в силу.
   </para>
  </note>
 </sect1>

 <sect1 xml:id="install.pecl.phpize">
  <title>Компиляция общих расширений с помощью phpize</title>
  <simpara>
   Иногда, использование инсталятора <literal>pecl</literal> не подходит. Это
   может быть связано с тем, что вы находитесь за файерволом или из-за того,
   что расширение, которое вы хотите установить, недоступно в PECL-совместимом
   пакете (к примеру, расширения из CVS, которые еще не зарелизены). Если вам необходимо
   собрать такое расширение, вы можете использовать низкоуровневые утилиты для
   выполнения сборки вручную.
  </simpara>
  <simpara>
   Команда <literal>phpize</literal> используется для подготовки окружения для
   расширения PHP. В следующем примере директория, где находятся исходные коды
   расширения, называется <filename>extname</filename>:
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
   </screen>
  </para>
  <simpara>
   В случае успешной установки будет создан файл <filename>extname.so</filename> и
   помещен в PHP <link linkend="ini.extension-dir">extensions directory</link>. 
   Вам будет необходимо добавить строку <literal>extension=extname.so</literal> в
   &php.ini; перед тем, как вы станете использовать это расширение.
  </simpara>
  <simpara>
   Если в системе отсутствует <literal>phpize</literal>, но существует возможность
   установки заранее скомпилированных пакетов (типа RPM), убедитесь, что установлена
   соответствующая <literal>devel</literal> версия пакета PHP, так как они часто
   содержат команду <literal>phpize</literal> с подходящими файлами заголовоков для
   сборки PHP и его расширений.
  </simpara>
  <simpara>
   Используйте <literal>phpize --help</literal> для просмотра дополнительной информации.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.static">
  <title>Компиляция расширений PECL статически в PHP</title>
  <simpara>
   Возможно, вы захотите собрать расширение PECL статично в ваш бинарйный файл PHP.
   Для этого необходимо поместить код расширения в директорию
   <filename>php-src/ext/</filename> и вызвать перегенерацию конфигурационных скриптов
   через систему сборки PHP.
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
   </screen>
  </para>
  <simpara>
   В результате будет создана следующая директория:
  </simpara>
  <para>
   <screen>
    /your/phpsrcdir/ext/extname
   </screen>
  </para>
  <simpara>
   После этого, выполните заново сборку конфигурационного скрипта PHP и затем
   соберите PHP как обычно:
  </simpara>
  <para>
   <screen>
$ cd /your/phpsrcdir 
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
   </screen>
  </para>
  <note>
   <simpara>
    Для запуска скрипта 'buildconf' вам необходимы autoconf версии 2.13 и
    automake версии 1.4+ (более новые версии autoconf могут работать, но это
    не поддерживается).
   </simpara>
  </note>
  <simpara>
   Одна из двух опций <literal>--enable-extname</literal> или <literal>--with-extname
   </literal> используется в зависимости от расширения. Обычно, в случае, когда
   расширение не требует подключения внешних библиотек, используется
   <literal>--enable</literal>. Для того, чтобы убедиться в этом, выполните следующую
   команду после buildconf:
  </simpara>
  <para>
   <screen>
$ ./configure --help | grep extname
   </screen>
  </para>
 </sect1>
</chapter>   

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
