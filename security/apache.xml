<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <sect1 id="security.apache">
   <title>Если PHP установлен как модуль Apache</title>
   <simpara>
    Когда PHP используется как модуль Apache, он наследует права пользователя,
    с которыми был запущен веб-сервер (обычно это пользователь 'nobody').	
    Это влияет на обеспечение безопасности и реализацию авторизации.
    Например, если вы используете базу данных, которая не имеет встроенного 
    механизма разграничения доступа, вам прийдется обеспечить доступ к
    БД для пользователя 'nobody'. В таком случае зловредный скрипт может
    получить доступ к базе данных и модифицировать ее, даже не зная  логина 
    и пароля. Вполне возможна ситуация, когда веб-паук неверными
    запросами страницы администратора базы данных уничтожит все данные
    или даже структуру БД. Вы можете избежать такой ситуации при помощи авторизации Apache
    или разработав собственную модель доступа, используя LDAP, файлы &htaccess;  или
    любые другие технологии, внедряя соответствующий код в ваши скрипты.
   </simpara>
   <simpara>
    Достаточно часто используются такие настройки безопасности, при которых
    PHP (имеется ввиду пользователь, с правами которого выполняется Apache)
    имеет минимальные привелегии, например отсутствует возможность записи
    в пользовательские директории. Или, например, отсутствует возможность
    работать с базой данных. При этом система безопасности не позволяет
    записывать как "хорошие", так и "плохие" файлы, аналогично позволяет производить
    как "хорошие", так и "плохие" транзакции.
   </simpara>
   <simpara>
    Распространенной ошибкой является запуск Apache с правами суперпользователя
    или любое другое расширение полномочий веб-сервера.
   </simpara>
   <simpara>
    Расширение привилегий веб-сервера до полномочий угрожает работоспособности
    всей системы, такие команды, как sudo, chroot должны выполняться исключительно теми,
    кто считает себя профессионалами в вопросах безопасности.
   </simpara>
   <simpara>
    Существует несколько простых решений. Используя 
    <link linkend="ini.open-basedir">open_basedir</link>,
    вы можете ограничить дерево доступных директорий для PHP.
    Вы так же можете определить область доступа Apache, ограничив
    все веб-сервисы не-пользовательскими или не-системными файлами.
   </simpara>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
