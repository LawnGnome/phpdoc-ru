<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.14 Maintainer: irinagoble Status: ready -->
<!-- $Revision: 1.2 $ -->
 <chapter id="faq.languages">
  <title>PHP и другие языки</title>
  <titleabbrev>PHP и другие языки</titleabbrev>

  <para>
   PHP самый лучший язык для web программирования,
   а как насчёт других языков?
  </para>

  <qandaset>
   <qandaentry id="faq.languages.asp">
    <question>
     <para>PHP против ASP?</para>
    </question>
    <answer>
     <para>
      На самом деле, ASP сам по себе языком не является, это акроним для 
      Active Server Pages, в действительности для программирования с ASP
      используется Visual Basic Script или JScript. Наибольшим недостатком
      ASP является то, что это частная система и по родному используется 
      только на Microsoft Internet Information Server (IIS).
      Это ограничивает его доступность только для Win32 серверов.
      Существует пара проектов в работе, которые позволяют ASP выполняться
      в других окружениях и на других web серверах:
      <ulink url="&url.instantasp;">InstantASP</ulink>
      от <ulink url="&url.halcyon;">Halcyon</ulink> (коммерческий),
      Chili!Soft ASP от <ulink url="&url.chilisoft;">Chili!Soft</ulink>
      (коммерческий). Считается, что ASP медленнее и более громоздкий чем PHP,
      а также менее стабильный. Некоторыми "за" для ASP является то, что
      так как в нём в основном используется VBScript, то подхватить язык
      относительно легко, если вы уже знаете как программировать в Visual Basic.
      Поддержка ASP по умолчанию включена в IIS, что упрощает его установку и
      зыпуск. Встроенные в ASP компоненты очень ограничены, поэтому если вам
      требуются "продвинутые" возможности, такие как взаимодействие с FTP
      серверами, вам придётся покупать дополнительные компоненты. 
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.aspconverter">
    <question>
     <para>Существует ли преобразователь ASP в PHP?</para>
    </question>
    <answer>
     <para>
      Да, для серверной стороны наиболее часто ссылаются на
      <ulink url="&url.asp2php;">asp2php</ulink>, также как и на
      вариант для <ulink url="&url.asptranslator;">стороны клиента</ulink>.
      </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.coldfusion">
    <question>
     <para>PHP против Cold Fusion?</para>
    </question>
    <answer>
     <para>
      В общем считается, что PHP быстрее и более эффективен для сложных программных
      задач и для пробования новых идей. Также на PHP обычно ссылаются как на 
      более стабильный и менее требовательный к ресурсам. Cold Fusion имеет
      лучшую обработку ошибок, абстракцию баз данных и разбор дат, хотя
      в PHP 4 тоже уделено внимание абстракции баз данных. 
      Другое, что перечисляется как одна из сильных сторон Cold Fusion,
      это его превосходная поисковая система, но отмечается, что поисковая система
      это не то, что должно быть включено в скриптовый язык для web.
      PHP работает почти на каждой существующей платформе, Cold Fusion
      доступен только для Win32, Solaris, Linux и HP/UX.
      Cold Fusion имеет хороший IDE и в общем в нём легче начинать,
      тогда как PHP вначале требует больше знаний по программированию.
      Cold Fusion был спроектирован в расчёте на не программистов,
      когда PHP сосредотачивается на программистах.
     </para>
     <para>
      Замечательное сводка на эту тему от Майкла Дж. Шелдона
     (Michael J Sheldon) была опубликованна в списке почтовой рассылки
      для PHP. Копия может быть найдена на 
      <ulink url="&url.coldfusion.summary;">&url.coldfusion.summary;</ulink>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.perl">
    <question>
     <para>PHP против Perl?</para>
    </question>
    <answer>
     <para>
      Наибольшее преимущество PHP перед Perl это то, что PHP был спроектирован
      для написания скриптов для web, в то время, как Perl был создан для
      более широкого круга задач и поэтому может быть очень сложным.
      С гибкостью/сложностью Perl проще писать код, который будет трудно читать
      другому автору/кодировщику. PHP имеет менее запутанный и более строгий формат
      без ущерба для гибкости. PHP проще интегрировать в существующий HTML, чем Perl.
      PHP имеет почти что все 'хорошие' функциональные возможности Perl:
      конструкции, синтаксис и так далее, не становясь таким же сложным, каким 
      может быть Perl.       
      Perl довольно испытанный и точный язык, он существует с конца
      восьмидесятых, но PHP зреет очень быстро.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


