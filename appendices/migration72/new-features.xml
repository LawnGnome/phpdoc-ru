<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343462 Maintainer: lex Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="migration72.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Новые возможности</title>

 <sect2 xml:id="migration72.new-features.object-type">
  <title>Новый тип "object"</title>

  <para>
   Был введен новый тип, <type>object</type>, который может использоваться в
   передаваемых параметрах (контравариантность) и возвращаемых значениях (ковариантность)
   любых объектов.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

function test(object $obj) : object
{
    return new SplQueue();
}

test(new StdClass());
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.new-features.ext-loading-by-name">
  <title>Загрузка расширения по имени</title>

  <para>
   Для подгружаемых расширений больше не требуется указание расширения файла
   (<literal>.so</literal> для Unix или <literal>.dll</literal> для Windows).
   Это включено в файле php.ini, а также в функции  <function>dl</function>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.new-features.abstract-method-overriding">
  <title>Разрешена перегрузка абстрактных методов</title>

  <para>
   Абстрактные методы теперь можно переопределить, в случаях когда абстрактный класс
   наследуется от другого абстрактного класса.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

abstract class A
{
    abstract function test(string $s);
}
abstract class B extends A
{
    // переопределён - всё ещё сохраняя контравариантность для параметров и ковариантность для возвращаемых значений
    abstract function test($s) : int;
}
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.new-features.pws-hashing-with-argon2">
  <title>Добавлено хеширование пароля с помощью Argon2</title>

  <para>
   Был добавлен алгоритм Argon2 в API хеширования пароля (функции семейства
   <literal>password_</literal>), где доступны следующие константы:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <constant>PASSWORD_ARGON2I</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PASSWORD_ARGON2_DEFAULT_MEMORY_COST</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PASSWORD_ARGON2_DEFAULT_TIME_COST</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PASSWORD_ARGON2_DEFAULT_THREADS</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration72.new-features.pdo-extended-str-types">
  <title>Расширенные типы строк для PDO</title>

  <para>
   Тип строки PDO был расширен для поддержки национальных наборов символов
   при эмуляции подготавливаемых запросов. Добавлены новые константы:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <constant>PDO::PARAM_STR_NATL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::PARAM_STR_CHAR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para>
   Эти константы используется в побитовом <literal>OR</literal>
   с константой <constant>PDO::PARAM_STR</constant>:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

$db->quote('über', PDO::PARAM_STR | PDO::PARAM_STR_NATL);
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.new-features.additional-emulated-prepares-debugging-info">
  <title>Дополнительная отладочная информация при эмуляции подготавливаемых запросов в PDO</title>

  <para>
   Метод <function>PDOStatement::debugDumpParams</function> был обновлён,
   чтобы включить SQL до отправки в БД, где будет показан полный
   необработанный запрос (включая заменённые параметры с их связанными значениями).
   Это было добавлено для помощи в отладке эмуляции подготавливаемых запросов
   (и поэтому это будет доступно только при включенной эмуляции подготавливаемых запросов).
  </para>
 </sect2>

 <sect2 xml:id="migration72.new-features.extended-ops-in-ldap">
  <title>Поддержка расширенных операций в LDAP</title>

  <para>
   Была добавлена поддержка EXOP в расширение LDAP. Стали доступны следующие функции и константы:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <function>ldap_parse_exop</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ldap_exop</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ldap_exop_passwd</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ldap_exop_whoami</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>LDAP_EXOP_START_TLS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>LDAP_EXOP_MODIFY_PASSWD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>LDAP_EXOP_REFRESH</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>LDAP_EXOP_WHO_AM_I</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>LDAP_EXOP_TURN</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration72.new-features.addr-info-in-sockets">
  <title>Информация об адресе сокета</title>

  <para>
   Расширение сокетов теперь имеет возможность искать адресную информацию,
   а также подключаться к ней, связываться с ней и объяснять её. Для этого были добавлены
   следующие четыре функции:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <function>socket_addrinfo_lookup</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>socket_addrinfo_connect</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>socket_addrinfo_bind</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>socket_addrinfo_explain</function>
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration72.new-features.param-type-widening">
  <title>Расширение типа параметра</title>

  <para>
   Типы параметров из переопределённых методов и реализаций интерфейсов теперь могут быть опущены.
   Это всё ещё соответствует LSP, т.к. параметры типов контравариантны.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

interface A
{
    public function Test(array $input);
}

class B implements A
{
    public function Test($input){} // тип параметра не указан $input
}
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.new-features.trailing-comma-in-grouped-namespaces">
  <title>Разрешена завершающая запятая для сгруппированных пространств имён</title>

  <para>
   Завершающая запятая теперь может быть добавлена в синтаксис группировки use, появившегося в
   PHP 7.0.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

use Foo\Bar\{
    Foo,
    Bar,
    Baz,
};
]]>
   </programlisting>
  </informalexample>
 </sect2>
 
  <sect2 xml:id="migration72.new-features.proc_nice-windows-support">
  <title>Поддержка <function>proc_nice</function> для Windows</title>

  <para>
   Функция <function>proc_nice</function> теперь поддерживается в Windows.
  </para>
 </sect2>

 <sect2 xml:id="migration72.new-features.pack-unpack-endian-support">
  <title>Поддержка порядка байт (endian) в <function>pack</function> и <function>unpack</function></title>

  <para>
   Функции <function>pack</function> и <function>unpack</function> теперь поддерживают
   float и double как в прямом, так и обратном порядке байт.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
