<?xml version="1.0" encoding="windows-1251"?>
<!-- $Revision: 1.4 $ -->
<!-- 
   TODO:
   
     The command line options not in the
     list, but in the -h output below:
   
       -f, -e, -z, -l
    
     It would be best to document these, and
     collect more info about -c and -d!
-->
<appendix id="commandline">
 <title>Использование PHP из командной строки</title>
 <para>
  Использование PHP из командной строки обычно применяется
  в тех случаях, когда вам нужно отладить или протестировать
  настройку PHP; также оно используется, если вам нужно
  использовать PHP в других целях, нежели создание веб-скриптов.
 </para>
 <para>
  Обратите внимание, что вы всегда можете перенаправить
  вывод результатов выполнения скрипта во внешний файл,
  используя символ the &gt;, например,
  <literal>php -q test.php > test.html</literal> перенаправит
  вывод результатов выполнения скрипта <filename>test.php</filename>
  без HTTP-заголовков в файл <filename>test.html</filename>,
  находящийся в текущем каталоге.
 </para>
 <para>
  Вы можете использовать PHP из командной строки только в том случае,
  если вы обладаете PHP в формате исполняемого файла. Если вы
  собрали PHP в виде серверного модуля и на вашей машине
  недоступна CGI, использовать PHP таким образом вы не сможете.
  Для пользователей Windows как исполняемый файл, так и
  серверный модуль PHP находятся в одном файле с именем
  <filename>php.exe</filename>.
 </para>
 <para>
  Список параметров командной строки соответствует PHP 4.0.6.
  Вы можете получить список параметров вместе с однострочными
  описаниями с помощью параметра <literal>-h</literal> option.
  Результат выполнения <literal>php -h</literal> может выглядеть
  примерно так:
  <screen>
<![CDATA[
Usage: php [-q] [-h] [-s [-v] [-i] [-f <file>] |  {<file> [args...]}
  -q             Quiet-mode.  Suppress HTTP Header output.
  -s             Display colour syntax highlighted source.
  -f <file>      Parse <file>.  Implies `-q'
  -v             Version number
  -C             Do not chdir to the script's directory
  -c <path>      Look for php.ini file in this directory
  -d foo[=bar]   Define INI entry foo with value 'bar'
  -e             Generate extended information for debugger/profiler
  -z <file>      Load Zend extension <file>.
  -l             Syntax check only (lint)
  -m             Show compiled in modules
  -i             PHP information
  -h             This help
]]>
  </screen>
 </para>
 <para>
  Здесь мы приводим список наиболее важных параметов командной
  строки с детальными пояснениями.
 </para>
 <para>
  <table>
   <title>Параметры командной строки</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Параметр</entry>
      <entry>Описание</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>-q</entry>
      <entry>
       Запрещает вывод HTTP-заголовков. Обычно PHP выводит
       HTTP-заголовки для обработки их браузером. Во время
       создания скриптов для командной строки эти заголовки
       бесполезны.
      </entry>
     </row>
     <row>
      <entry>-s</entry>
      <entry>
       Выводит исходный код заданного файла с подсветкой
       синтаксиса. Это равнозначно использованию  функции
       <function>highlight_file</function> в PHP-скрипте.
      </entry>
     </row>
     <row>
      <entry>-v</entry>
      <entry>
       Запустив PHP с этим параметром, вы сможете
       узнать текущую версию PHP, например, 4.0.6.
      </entry>
     </row>
     <row>
      <entry>-C</entry>
      <entry>
       Обычно PHP изменяет текущий каталог на каталог,
       в котором находится выполняемый скрипт. Это делает
       возможным, например, открытие файлов из скрипта
       в том же каталоге, с указанием только имени файла.
       Если вы хотите отключить эту возможность, используйте
       указанный параметр.
      </entry>
     </row>
     <row>
      <entry>-c</entry>
      <entry>
       Используя этот параметр, вы можете указать альтернативный
       путь к файлу <filename>php.ini</filename>, чтобы PHP
       искал конфигурационные файлы в указанном каталоге вместо
       каталога по умолчанию.
      </entry>
     </row>
     <row>
      <entry>-d</entry>
      <entry>
       С помощью этого параметра вы можете
       установить отдельные настройки <filename>php.ini</filename>
       во время выполнения скрипта.
      </entry>
     </row>
     <row>
      <entry>-m</entry>
      <entry>
       С использованием этого параметра PHP выводит
       информацию о встроенных (и загруженных) модулях
       PHP и Zend, номера версий PHP и Zend и короткую
       заметку об авторских правах Zend.
      </entry>
     </row>
     <row>
      <entry>-i</entry>
      <entry>
       Этот параметр вызывает функцию <function>phpinfo</function>
       и выводит результат ее выполнения. Если PHP работает
       некорректно, можно посоветовать запустить <literal>php -i</literal>
       и посмотреть, нет ли в выводе сообщений об ошибках перед
       таблицами с информацией.
      </entry>
     </row>
     <row>
      <entry>-h</entry>
      <entry>
       С помощью этого параметра вы можете получить
       список всех параметров командной строки с однострочными
       описаниями некоторых из них.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>
 <para>
  PHP в формате исполняемого файла может быть использован для
  запуска PHP-скриптов в абсолютной независимости от веб-сервера.
  Если вы работаете в системе Unix, вам нужно будет добавить
  специальную строку в начало каждого скрипта и сделать его
  исполняемым (rwX), чтобы система могла понять, какой программой
  следует запускать скрипт. На платформе Windows, вы можете
  создать ассоциацию файлов <literal>.php</literal> с
  <literal>php.exe -q</literal> с помощью двойного щелчка кнопкой
  мыши или же создать пакетный (.bat) файл для запуска PHP-скриптов.
  Ниже приведен простой пример создания PHP-скрипта, выполняемого
  из командной строки.
 </para>
 <example>
  <title>Скрипт, предназначенный для запуска из командной строки (script.php)</title>
  <programlisting role="php">
<![CDATA[
#!/usr/bin/php -q
<?php

if ($argc != 2 || in_array($argv[1], array('--help', '-help', '-h', '-?'))) {
?>

Это PHP-скрипт, выполняемый из командной строки и использующий один параметр.

  Использование:
  <?php echo $argv[0]; ?> <параметр>

  <параметр> может принимать любое значение,
  которое будет выведено в результате выполнения.
  to print out. С помощью параметров --help, -help, -h,
  или -? вы можете получить данную справку.

<?php
} else {
    echo $argv[1];
}
?>
]]>
  </programlisting>
 </example>
 <para>
  В вышеприведенном скрипте, мы использовали специальную первую
  строку, которая указывала на то, что этот файл должен быть
  запущен с помощью PHP без вывода HTTP-заголовков. Во время
  написания скриптов, выполняемых из командной строки, вы
  можете использовать две специальных переменных: <varname>$argc</varname> и
  <varname>$argv</varname>. Первая - это количество переданных в
  командной строке аргументов плюс один (имя выполняемого скрипта).
  Вторая - массив переданных аргументов, начинающийся с имени
  скрипта с нулевым индексом (<varname>$argv[0]</varname>).
 </para>
 <para>
  In the program above we checked if there are less or more than one
  arguments. Also if the argument was <literal>--help</literal>,
  <literal>-help</literal>, <literal>-h</literal> or <literal>-?</literal>,
  we printed out the help message, printing the script name dynamically.
  If we received some other argument we echoed that out.
 </para>
 <para>
  Если вы собираетесь запустить вышеприведенный скрипт на Unix,
  вы должны сделать его выполняемым (rwX) и вызвать как
  <literal>script.php echothis</literal> или
  <literal>script.php -h</literal>. На платформах Windows для
  этой цели вы можете создать пакетный файл:
 </para>
 <example>
  <title>Пакетный файл для запуска PHP-скрипта из командной строки (script.bat)</title>
  <programlisting role="winbat">
@c:\php\php.exe -q script.php %1 %2 %3 %4
  </programlisting>
 </example>
 <para>
  Допустим, вы назвали вышеприведенную программу
  <filename>script.php</filename> и разместили
  <filename>php.exe</filename> в
  <filename>c:\php\php.exe</filename>, тогда этот
  пакетный файл запустит скрипт с дополнительными параметрами:
  <literal>script.bat echothis</literal> или
  <literal>script.bat -h</literal>.
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
